Component: Arm Compiler for Embedded 6.21 Tool: armlink [5ec1fa00]

==============================================================================

Section Cross References

    main.o(.text.printstr) refers to main.o(.bss.memblock) for memblock
    main.o(.text.printstr) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for osMemoryPoolAlloc
    main.o(.text.printstr) refers to strcpy.o(.text) for strcpy
    main.o(.text.printstr) refers to main.o(.bss.msgqueue) for msgqueue
    main.o(.text.printstr) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    main.o(.ARM.exidx.text.printstr) refers to main.o(.text.printstr) for [Anonymous Symbol]
    main.o(.text.printchar) refers to main.o(.bss.memblock) for memblock
    main.o(.text.printchar) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for osMemoryPoolAlloc
    main.o(.text.printchar) refers to strcpy.o(.text) for strcpy
    main.o(.text.printchar) refers to main.o(.bss.msgqueue) for msgqueue
    main.o(.text.printchar) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    main.o(.ARM.exidx.text.printchar) refers to main.o(.text.printchar) for [Anonymous Symbol]
    main.o(.text.readnumber) refers to fsl_debug_console.o(.text.DbgConsole_Getchar) for DbgConsole_Getchar
    main.o(.text.readnumber) refers to main.o(.bss.memblock) for memblock
    main.o(.text.readnumber) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for osMemoryPoolAlloc
    main.o(.text.readnumber) refers to strcpy.o(.text) for strcpy
    main.o(.text.readnumber) refers to main.o(.bss.msgqueue) for msgqueue
    main.o(.text.readnumber) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    main.o(.ARM.exidx.text.readnumber) refers to main.o(.text.readnumber) for [Anonymous Symbol]
    main.o(.text.producer_thread) refers to main.o(.bss.memblock) for memblock
    main.o(.text.producer_thread) refers to main.o(.bss.msgqueue) for msgqueue
    main.o(.text.producer_thread) refers to main.o(.bss.T_LEDs) for T_LEDs
    main.o(.text.producer_thread) refers to fsl_debug_console.o(.text.DbgConsole_Getchar) for DbgConsole_Getchar
    main.o(.text.producer_thread) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for osMemoryPoolAlloc
    main.o(.text.producer_thread) refers to strcpy.o(.text) for strcpy
    main.o(.text.producer_thread) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    main.o(.text.producer_thread) refers to main.o(.text.readnumber) for readnumber
    main.o(.text.producer_thread) refers to main.o(.bss.queue_sampleperiod) for queue_sampleperiod
    main.o(.text.producer_thread) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    main.o(.text.producer_thread) refers to main.o(.bss.T_ADC2) for T_ADC2
    main.o(.ARM.exidx.text.producer_thread) refers to main.o(.text.producer_thread) for [Anonymous Symbol]
    main.o(.text.consumer_thread) refers to main.o(.bss.msgqueue) for msgqueue
    main.o(.text.consumer_thread) refers to main.o(.bss.memblock) for memblock
    main.o(.text.consumer_thread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    main.o(.text.consumer_thread) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    main.o(.text.consumer_thread) refers to rtx_mempool.o(.text.osMemoryPoolFree) for osMemoryPoolFree
    main.o(.ARM.exidx.text.consumer_thread) refers to main.o(.text.consumer_thread) for [Anonymous Symbol]
    main.o(.text.PORTC_IRQHandler) refers to fsl_gpio.o(.text.GPIO_PortClearInterruptFlags) for GPIO_PortClearInterruptFlags
    main.o(.text.PORTC_IRQHandler) refers to main.o(.bss.T_SW2) for T_SW2
    main.o(.text.PORTC_IRQHandler) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    main.o(.ARM.exidx.text.PORTC_IRQHandler) refers to main.o(.text.PORTC_IRQHandler) for [Anonymous Symbol]
    main.o(.text.PORTA_IRQHandler) refers to fsl_gpio.o(.text.GPIO_PortClearInterruptFlags) for GPIO_PortClearInterruptFlags
    main.o(.text.PORTA_IRQHandler) refers to main.o(.bss.T_SW3) for T_SW3
    main.o(.text.PORTA_IRQHandler) refers to rtx_thread.o(.text.osThreadFlagsSet) for osThreadFlagsSet
    main.o(.ARM.exidx.text.PORTA_IRQHandler) refers to main.o(.text.PORTA_IRQHandler) for [Anonymous Symbol]
    main.o(.text.SW2_status) refers to main.o(.rodata..L__const.SW2_status.str1) for .L__const.SW2_status.str1
    main.o(.text.SW2_status) refers to main.o(.rodata..L__const.SW2_status.str2) for .L__const.SW2_status.str2
    main.o(.text.SW2_status) refers to main.o(.bss.memblock) for memblock
    main.o(.text.SW2_status) refers to main.o(.bss.msgqueue) for msgqueue
    main.o(.text.SW2_status) refers to strcpy.o(.text) for strcpy
    main.o(.text.SW2_status) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for osMemoryPoolAlloc
    main.o(.text.SW2_status) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    main.o(.text.SW2_status) refers to memcpy.o(.text) for __aeabi_memcpy4
    main.o(.text.SW2_status) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    main.o(.ARM.exidx.text.SW2_status) refers to main.o(.text.SW2_status) for [Anonymous Symbol]
    main.o(.text.SW3_status) refers to main.o(.rodata..L__const.SW3_status.str1) for .L__const.SW3_status.str1
    main.o(.text.SW3_status) refers to main.o(.rodata..L__const.SW3_status.str2) for .L__const.SW3_status.str2
    main.o(.text.SW3_status) refers to main.o(.bss.memblock) for memblock
    main.o(.text.SW3_status) refers to main.o(.bss.msgqueue) for msgqueue
    main.o(.text.SW3_status) refers to strcpy.o(.text) for strcpy
    main.o(.text.SW3_status) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for osMemoryPoolAlloc
    main.o(.text.SW3_status) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    main.o(.text.SW3_status) refers to memcpy.o(.text) for __aeabi_memcpy4
    main.o(.text.SW3_status) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    main.o(.ARM.exidx.text.SW3_status) refers to main.o(.text.SW3_status) for [Anonymous Symbol]
    main.o(.text.LEDs_switcher) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    main.o(.text.LEDs_switcher) refers to elec422.o(.text.LED_Off) for LED_Off
    main.o(.text.LEDs_switcher) refers to elec422.o(.text.LED_On) for LED_On
    main.o(.ARM.exidx.text.LEDs_switcher) refers to main.o(.text.LEDs_switcher) for [Anonymous Symbol]
    main.o(.text.ADC1_callback) refers to rtx_kernel.o(.text.osKernelGetTickCount) for osKernelGetTickCount
    main.o(.text.ADC1_callback) refers to main.o(.bss.ADC1_callback.tick) for ADC1_callback.tick
    main.o(.text.ADC1_callback) refers to main.o(.bss.ADCMutex) for ADCMutex
    main.o(.text.ADC1_callback) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    main.o(.text.ADC1_callback) refers to fsl_adc16.o(.text.ADC16_SetChannelConfig) for ADC16_SetChannelConfig
    main.o(.text.ADC1_callback) refers to fsl_adc16.o(.text.ADC16_GetChannelStatusFlags) for ADC16_GetChannelStatusFlags
    main.o(.text.ADC1_callback) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    main.o(.text.ADC1_callback) refers to dflti.o(.text) for __aeabi_i2d
    main.o(.text.ADC1_callback) refers to dmul.o(.text) for __aeabi_dmul
    main.o(.text.ADC1_callback) refers to d2f.o(.text) for __aeabi_d2f
    main.o(.text.ADC1_callback) refers to f2d.o(.text) for __aeabi_f2d
    main.o(.text.ADC1_callback) refers to printfa.o(i.__0sprintf) for __2sprintf
    main.o(.text.ADC1_callback) refers to main.o(.bss.memblock) for memblock
    main.o(.text.ADC1_callback) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for osMemoryPoolAlloc
    main.o(.text.ADC1_callback) refers to strcpy.o(.text) for strcpy
    main.o(.text.ADC1_callback) refers to main.o(.bss.msgqueue) for msgqueue
    main.o(.text.ADC1_callback) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    main.o(.ARM.exidx.text.ADC1_callback) refers to main.o(.text.ADC1_callback) for [Anonymous Symbol]
    main.o(.text.ADC1_Thread6) refers to main.o(.text.ADC1_callback) for ADC1_callback
    main.o(.text.ADC1_Thread6) refers to main.o(.rodata.timerAttr_timerADC1) for timerAttr_timerADC1
    main.o(.text.ADC1_Thread6) refers to rtx_timer.o(.text.osTimerNew) for osTimerNew
    main.o(.text.ADC1_Thread6) refers to main.o(.bss.T_ADC1_periodic) for T_ADC1_periodic
    main.o(.text.ADC1_Thread6) refers to rtx_timer.o(.text.osTimerStart) for osTimerStart
    main.o(.text.ADC1_Thread6) refers to main.o(.bss.queue_sampleperiod) for queue_sampleperiod
    main.o(.text.ADC1_Thread6) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    main.o(.text.ADC1_Thread6) refers to rtx_timer.o(.text.osTimerStop) for osTimerStop
    main.o(.ARM.exidx.text.ADC1_Thread6) refers to main.o(.text.ADC1_Thread6) for [Anonymous Symbol]
    main.o(.text.ADC2_Thread7) refers to main.o(.bss.ADCMutex) for ADCMutex
    main.o(.text.ADC2_Thread7) refers to rtx_thread.o(.text.osThreadFlagsWait) for osThreadFlagsWait
    main.o(.text.ADC2_Thread7) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    main.o(.text.ADC2_Thread7) refers to fsl_adc16.o(.text.ADC16_SetChannelConfig) for ADC16_SetChannelConfig
    main.o(.text.ADC2_Thread7) refers to fsl_adc16.o(.text.ADC16_GetChannelStatusFlags) for ADC16_GetChannelStatusFlags
    main.o(.text.ADC2_Thread7) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    main.o(.text.ADC2_Thread7) refers to dflti.o(.text) for __aeabi_i2d
    main.o(.text.ADC2_Thread7) refers to dmul.o(.text) for __aeabi_dmul
    main.o(.text.ADC2_Thread7) refers to d2f.o(.text) for __aeabi_d2f
    main.o(.text.ADC2_Thread7) refers to f2d.o(.text) for __aeabi_f2d
    main.o(.text.ADC2_Thread7) refers to printfa.o(i.__0sprintf) for __2sprintf
    main.o(.text.ADC2_Thread7) refers to main.o(.bss.memblock) for memblock
    main.o(.text.ADC2_Thread7) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for osMemoryPoolAlloc
    main.o(.text.ADC2_Thread7) refers to strcpy.o(.text) for strcpy
    main.o(.text.ADC2_Thread7) refers to main.o(.bss.msgqueue) for msgqueue
    main.o(.text.ADC2_Thread7) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    main.o(.ARM.exidx.text.ADC2_Thread7) refers to main.o(.text.ADC2_Thread7) for [Anonymous Symbol]
    main.o(.text.app_main) refers to main.o(.rodata.memorypoolAttr_memblock) for memorypoolAttr_memblock
    main.o(.text.app_main) refers to rtx_mempool.o(.text.osMemoryPoolNew) for osMemoryPoolNew
    main.o(.text.app_main) refers to main.o(.bss.memblock) for memblock
    main.o(.text.app_main) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    main.o(.text.app_main) refers to main.o(.bss.msgqueue) for msgqueue
    main.o(.text.app_main) refers to main.o(.bss.queue_sampleperiod) for queue_sampleperiod
    main.o(.text.app_main) refers to main.o(.text.producer_thread) for producer_thread
    main.o(.text.app_main) refers to main.o(.rodata.ThreadAttr_producer) for ThreadAttr_producer
    main.o(.text.app_main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(.text.app_main) refers to main.o(.text.consumer_thread) for consumer_thread
    main.o(.text.app_main) refers to main.o(.rodata.ThreadAttr_consumer) for ThreadAttr_consumer
    main.o(.text.app_main) refers to main.o(.text.SW2_status) for SW2_status
    main.o(.text.app_main) refers to main.o(.rodata.ThreadAttr_SW2_IR) for ThreadAttr_SW2_IR
    main.o(.text.app_main) refers to main.o(.bss.T_SW2) for T_SW2
    main.o(.text.app_main) refers to main.o(.text.SW3_status) for SW3_status
    main.o(.text.app_main) refers to main.o(.rodata.ThreadAttr_SW3_IR) for ThreadAttr_SW3_IR
    main.o(.text.app_main) refers to main.o(.bss.T_SW3) for T_SW3
    main.o(.text.app_main) refers to main.o(.text.LEDs_switcher) for LEDs_switcher
    main.o(.text.app_main) refers to main.o(.rodata.ThreadAttr_LEDswitcher) for ThreadAttr_LEDswitcher
    main.o(.text.app_main) refers to main.o(.bss.T_LEDs) for T_LEDs
    main.o(.text.app_main) refers to main.o(.rodata.MutexAttr_ADCMutex) for MutexAttr_ADCMutex
    main.o(.text.app_main) refers to rtx_mutex.o(.text.osMutexNew) for osMutexNew
    main.o(.text.app_main) refers to main.o(.bss.ADCMutex) for ADCMutex
    main.o(.text.app_main) refers to main.o(.text.ADC1_Thread6) for ADC1_Thread6
    main.o(.text.app_main) refers to main.o(.rodata.ThreadAttr_ADC1) for ThreadAttr_ADC1
    main.o(.text.app_main) refers to main.o(.text.ADC2_Thread7) for ADC2_Thread7
    main.o(.text.app_main) refers to main.o(.rodata.ThreadAttr_ADC2) for ThreadAttr_ADC2
    main.o(.text.app_main) refers to main.o(.bss.T_ADC2) for T_ADC2
    main.o(.text.app_main) refers to rtx_thread.o(.text.osThreadGetId) for osThreadGetId
    main.o(.text.app_main) refers to main.o(.bss.app_mainid) for app_mainid
    main.o(.text.app_main) refers to rtx_thread.o(.text.osThreadTerminate) for osThreadTerminate
    main.o(.ARM.exidx.text.app_main) refers to main.o(.text.app_main) for [Anonymous Symbol]
    main.o(.text.main) refers to system_mk64f12.o(.text.SystemCoreClockUpdate) for SystemCoreClockUpdate
    main.o(.text.main) refers to elec422.o(.text.elec422_startup) for elec422_startup
    main.o(.text.main) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(.text.main) refers to main.o(.text.app_main) for app_main
    main.o(.text.main) refers to main.o(.rodata.ThreadAttr_main) for ThreadAttr_main
    main.o(.text.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelGetState) for osKernelGetState
    main.o(.text.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.rodata.timerAttr_timerADC1) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.rodata.memorypoolAttr_memblock) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.rodata.ThreadAttr_producer) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.rodata.ThreadAttr_consumer) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.rodata.ThreadAttr_SW2_IR) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.rodata.ThreadAttr_SW3_IR) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.rodata.ThreadAttr_LEDswitcher) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.rodata.MutexAttr_ADCMutex) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.rodata.ThreadAttr_ADC1) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.rodata.ThreadAttr_ADC2) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    main.o(.rodata.ThreadAttr_main) refers to main.o(.rodata.str1.1) for [Anonymous Symbol]
    elec422.o(.text.elec422_startup) refers to pin_mux.o(.text.BOARD_InitPins) for BOARD_InitPins
    elec422.o(.text.elec422_startup) refers to clock_config.o(.text.BOARD_BootClockRUN) for BOARD_BootClockRUN
    elec422.o(.text.elec422_startup) refers to board.o(.text.BOARD_InitDebugConsole) for BOARD_InitDebugConsole
    elec422.o(.text.elec422_startup) refers to fsl_gpio.o(.text.GPIO_PinInit) for GPIO_PinInit
    elec422.o(.text.elec422_startup) refers to fsl_adc16.o(.text.ADC16_GetDefaultConfig) for ADC16_GetDefaultConfig
    elec422.o(.text.elec422_startup) refers to fsl_adc16.o(.text.ADC16_Init) for ADC16_Init
    elec422.o(.text.elec422_startup) refers to fsl_adc16.o(.text.ADC16_DoAutoCalibration) for ADC16_DoAutoCalibration
    elec422.o(.text.elec422_startup) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    elec422.o(.ARM.exidx.text.elec422_startup) refers to elec422.o(.text.elec422_startup) for [Anonymous Symbol]
    elec422.o(.ARM.exidx.text.LED_Off) refers to elec422.o(.text.LED_Off) for [Anonymous Symbol]
    elec422.o(.ARM.exidx.text.LED_On) refers to elec422.o(.text.LED_On) for [Anonymous Symbol]
    elec422.o(.ARM.exidx.text.LED_Toggle) refers to elec422.o(.text.LED_Toggle) for [Anonymous Symbol]
    elec422.o(.ARM.exidx.text.delay) refers to elec422.o(.text.delay) for [Anonymous Symbol]
    pin_mux.o(.ARM.exidx.text.BOARD_InitPins) refers to pin_mux.o(.text.BOARD_InitPins) for [Anonymous Symbol]
    board.o(.text.BOARD_InitDebugConsole) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for CLOCK_GetCoreSysClkFreq
    board.o(.text.BOARD_InitDebugConsole) refers to fsl_debug_console.o(.text.DbgConsole_Init) for DbgConsole_Init
    board.o(.ARM.exidx.text.BOARD_InitDebugConsole) refers to board.o(.text.BOARD_InitDebugConsole) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_BootClockVLPR) refers to fsl_clock.o(.text.CLOCK_BootToBlpiMode) for CLOCK_BootToBlpiMode
    clock_config.o(.text.BOARD_BootClockVLPR) refers to clock_config.o(.rodata.g_defaultClockConfigVlpr) for g_defaultClockConfigVlpr
    clock_config.o(.text.BOARD_BootClockVLPR) refers to fsl_clock.o(.text.CLOCK_SetSimConfig) for CLOCK_SetSimConfig
    clock_config.o(.text.BOARD_BootClockVLPR) refers to system_mk64f12.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.text.BOARD_BootClockVLPR) refers to fsl_smc.o(.text.SMC_SetPowerModeVlpr) for SMC_SetPowerModeVlpr
    clock_config.o(.ARM.exidx.text.BOARD_BootClockVLPR) refers to clock_config.o(.text.BOARD_BootClockVLPR) for [Anonymous Symbol]
    clock_config.o(.text.BOARD_BootClockRUN) refers to clock_config.o(.rodata.g_defaultClockConfigRun) for g_defaultClockConfigRun
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_InitOsc0) for CLOCK_InitOsc0
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.bss.g_xtal0Freq) for g_xtal0Freq
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_BootToPeeMode) for CLOCK_BootToPeeMode
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_SetInternalRefClkConfig) for CLOCK_SetInternalRefClkConfig
    clock_config.o(.text.BOARD_BootClockRUN) refers to fsl_clock.o(.text.CLOCK_SetSimConfig) for CLOCK_SetSimConfig
    clock_config.o(.text.BOARD_BootClockRUN) refers to system_mk64f12.o(.data.SystemCoreClock) for SystemCoreClock
    clock_config.o(.ARM.exidx.text.BOARD_BootClockRUN) refers to clock_config.o(.text.BOARD_BootClockRUN) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_idle_thread_attr) refers to rtx_lib.o(.bss.os.thread.idle.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_thread_attr) refers to rtx_lib.o(.bss.os.thread.timer.stack) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.cb) for [Anonymous Symbol]
    rtx_lib.o(.rodata.os_timer_mq_attr) refers to rtx_lib.o(.bss.os.msgqueue.mem) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_idle_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_thread_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_lib.o(.rodata) refers to rtx_timer.o(.text.osRtxTimerSetup) for osRtxTimerSetup
    rtx_lib.o(.rodata) refers to rtx_lib.o(.rodata.os_timer_mq_attr) for [Anonymous Symbol]
    rtx_lib.o(.rodata.irqRtxLibRef) refers to irq_armv7m.o(.rodata) for irqRtxLib
    os_systick.o(.text.OS_Tick_Setup) refers to system_mk64f12.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.os) for PendST
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_mk64f12.o(.data.SystemCoreClock) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxIdleThread) refers to rtx_config.o(.text.osRtxIdleThread) for [Anonymous Symbol]
    rtx_config.o(.ARM.exidx.text.osRtxErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_Init) refers to fsl_component_generic_list.o(.text.LIST_Init) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetList) refers to fsl_component_generic_list.o(.text.LIST_GetList) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddTail) refers to fsl_component_generic_list.o(.text.LIST_AddTail) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddHead) refers to fsl_component_generic_list.o(.text.LIST_AddHead) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveHead) refers to fsl_component_generic_list.o(.text.LIST_RemoveHead) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetHead) refers to fsl_component_generic_list.o(.text.LIST_GetHead) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetNext) refers to fsl_component_generic_list.o(.text.LIST_GetNext) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetPrev) refers to fsl_component_generic_list.o(.text.LIST_GetPrev) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveElement) refers to fsl_component_generic_list.o(.text.LIST_RemoveElement) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddPrevElement) refers to fsl_component_generic_list.o(.text.LIST_AddPrevElement) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetSize) refers to fsl_component_generic_list.o(.text.LIST_GetSize) for [Anonymous Symbol]
    fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetAvailableSize) refers to fsl_component_generic_list.o(.text.LIST_GetAvailableSize) for [Anonymous Symbol]
    fsl_adapter_uart.o(.text.HAL_UartInit) refers to fsl_uart.o(.text.UART_GetDefaultConfig) for UART_GetDefaultConfig
    fsl_adapter_uart.o(.text.HAL_UartInit) refers to fsl_adapter_uart.o(.rodata.s_UartAdapterBase) for s_UartAdapterBase
    fsl_adapter_uart.o(.text.HAL_UartInit) refers to fsl_uart.o(.text.UART_Init) for UART_Init
    fsl_adapter_uart.o(.text.HAL_UartInit) refers to fsl_adapter_uart.o(.rodata.str1.1) for .L.str
    fsl_adapter_uart.o(.text.HAL_UartInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartInit) refers to fsl_adapter_uart.o(.text.HAL_UartInit) for [Anonymous Symbol]
    fsl_adapter_uart.o(.text.HAL_UartDeinit) refers to fsl_adapter_uart.o(.rodata.s_UartAdapterBase) for s_UartAdapterBase
    fsl_adapter_uart.o(.text.HAL_UartDeinit) refers to fsl_uart.o(.text.UART_Deinit) for UART_Deinit
    fsl_adapter_uart.o(.text.HAL_UartDeinit) refers to fsl_adapter_uart.o(.rodata.str1.1) for .L.str
    fsl_adapter_uart.o(.text.HAL_UartDeinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartDeinit) refers to fsl_adapter_uart.o(.text.HAL_UartDeinit) for [Anonymous Symbol]
    fsl_adapter_uart.o(.text.HAL_UartReceiveBlocking) refers to fsl_adapter_uart.o(.rodata.s_UartAdapterBase) for s_UartAdapterBase
    fsl_adapter_uart.o(.text.HAL_UartReceiveBlocking) refers to fsl_uart.o(.text.UART_ReadBlocking) for UART_ReadBlocking
    fsl_adapter_uart.o(.text.HAL_UartReceiveBlocking) refers to fsl_adapter_uart.o(.rodata.str1.1) for .L.str
    fsl_adapter_uart.o(.text.HAL_UartReceiveBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartReceiveBlocking) refers to fsl_adapter_uart.o(.text.HAL_UartReceiveBlocking) for [Anonymous Symbol]
    fsl_adapter_uart.o(.text.HAL_UartSendBlocking) refers to fsl_adapter_uart.o(.rodata.s_UartAdapterBase) for s_UartAdapterBase
    fsl_adapter_uart.o(.text.HAL_UartSendBlocking) refers to fsl_uart.o(.text.UART_WriteBlocking) for UART_WriteBlocking
    fsl_adapter_uart.o(.text.HAL_UartSendBlocking) refers to fsl_adapter_uart.o(.rodata.str1.1) for .L.str
    fsl_adapter_uart.o(.text.HAL_UartSendBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartSendBlocking) refers to fsl_adapter_uart.o(.text.HAL_UartSendBlocking) for [Anonymous Symbol]
    fsl_adapter_uart.o(.text.HAL_UartEnterLowpower) refers to fsl_adapter_uart.o(.rodata.str1.1) for .L.str
    fsl_adapter_uart.o(.text.HAL_UartEnterLowpower) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartEnterLowpower) refers to fsl_adapter_uart.o(.text.HAL_UartEnterLowpower) for [Anonymous Symbol]
    fsl_adapter_uart.o(.text.HAL_UartExitLowpower) refers to fsl_adapter_uart.o(.rodata.str1.1) for .L.str
    fsl_adapter_uart.o(.text.HAL_UartExitLowpower) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartExitLowpower) refers to fsl_adapter_uart.o(.text.HAL_UartExitLowpower) for [Anonymous Symbol]
    fsl_adc16.o(.text.ADC16_Init) refers to fsl_adc16.o(.rodata.cst8) for s_adc16Bases
    fsl_adc16.o(.text.ADC16_Init) refers to fsl_adc16.o(.rodata.str1.1) for .L.str.4
    fsl_adc16.o(.text.ADC16_Init) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adc16.o(.ARM.exidx.text.ADC16_Init) refers to fsl_adc16.o(.text.ADC16_Init) for [Anonymous Symbol]
    fsl_adc16.o(.ARM.exidx.text.ADC16_SetHardwareAverage) refers to fsl_adc16.o(.text.ADC16_SetHardwareAverage) for [Anonymous Symbol]
    fsl_adc16.o(.text.ADC16_Deinit) refers to fsl_adc16.o(.rodata.cst8) for s_adc16Bases
    fsl_adc16.o(.text.ADC16_Deinit) refers to fsl_adc16.o(.rodata.str1.1) for .L.str.4
    fsl_adc16.o(.text.ADC16_Deinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adc16.o(.ARM.exidx.text.ADC16_Deinit) refers to fsl_adc16.o(.text.ADC16_Deinit) for [Anonymous Symbol]
    fsl_adc16.o(.text.ADC16_GetDefaultConfig) refers to memseta.o(.text) for memset
    fsl_adc16.o(.text.ADC16_GetDefaultConfig) refers to fsl_adc16.o(.rodata.str1.1) for .L.str
    fsl_adc16.o(.text.ADC16_GetDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adc16.o(.ARM.exidx.text.ADC16_GetDefaultConfig) refers to fsl_adc16.o(.text.ADC16_GetDefaultConfig) for [Anonymous Symbol]
    fsl_adc16.o(.ARM.exidx.text.ADC16_DoAutoCalibration) refers to fsl_adc16.o(.text.ADC16_DoAutoCalibration) for [Anonymous Symbol]
    fsl_adc16.o(.text.ADC16_GetChannelStatusFlags) refers to fsl_adc16.o(.rodata.str1.1) for .L.str.3
    fsl_adc16.o(.text.ADC16_GetChannelStatusFlags) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adc16.o(.ARM.exidx.text.ADC16_GetChannelStatusFlags) refers to fsl_adc16.o(.text.ADC16_GetChannelStatusFlags) for [Anonymous Symbol]
    fsl_adc16.o(.ARM.exidx.text.ADC16_GetStatusFlags) refers to fsl_adc16.o(.text.ADC16_GetStatusFlags) for [Anonymous Symbol]
    fsl_adc16.o(.ARM.exidx.text.ADC16_SetChannelMuxMode) refers to fsl_adc16.o(.text.ADC16_SetChannelMuxMode) for [Anonymous Symbol]
    fsl_adc16.o(.text.ADC16_SetHardwareCompareConfig) refers to fsl_adc16.o(.rodata.str1.1) for .L.str.1
    fsl_adc16.o(.text.ADC16_SetHardwareCompareConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adc16.o(.ARM.exidx.text.ADC16_SetHardwareCompareConfig) refers to fsl_adc16.o(.text.ADC16_SetHardwareCompareConfig) for [Anonymous Symbol]
    fsl_adc16.o(.ARM.exidx.text.ADC16_ClearStatusFlags) refers to fsl_adc16.o(.text.ADC16_ClearStatusFlags) for [Anonymous Symbol]
    fsl_adc16.o(.text.ADC16_SetChannelConfig) refers to fsl_adc16.o(.rodata.str1.1) for .L.str.3
    fsl_adc16.o(.text.ADC16_SetChannelConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_adc16.o(.ARM.exidx.text.ADC16_SetChannelConfig) refers to fsl_adc16.o(.text.ADC16_SetChannelConfig) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetOsc0ErClkFreq) refers to fsl_clock.o(.bss.g_xtal0Freq) for g_xtal0Freq
    fsl_clock.o(.text.CLOCK_GetOsc0ErClkFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str
    fsl_clock.o(.text.CLOCK_GetOsc0ErClkFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetOsc0ErClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOsc0ErClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetEr32kClkFreq) refers to fsl_clock.o(.bss.g_xtal32Freq) for g_xtal32Freq
    fsl_clock.o(.text.CLOCK_GetEr32kClkFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.2
    fsl_clock.o(.text.CLOCK_GetEr32kClkFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.text.CLOCK_GetEr32kClkFreq) refers to fsl_clock.o(.bss.g_xtal0Freq) for g_xtal0Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetEr32kClkFreq) refers to fsl_clock.o(.text.CLOCK_GetEr32kClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPllFllSelClkFreq) refers to fsl_clock.o(.text.CLOCK_GetPll0Freq) for CLOCK_GetPll0Freq
    fsl_clock.o(.text.CLOCK_GetPllFllSelClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFllRefClkFreq) for CLOCK_GetFllRefClkFreq
    fsl_clock.o(.text.CLOCK_GetPllFllSelClkFreq) refers to fsl_clock.o(.rodata.cst16) for CLOCK_GetFllFreq.fllFactorTable
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPllFllSelClkFreq) refers to fsl_clock.o(.text.CLOCK_GetPllFllSelClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFllFreq) refers to fsl_clock.o(.text.CLOCK_GetFllRefClkFreq) for CLOCK_GetFllRefClkFreq
    fsl_clock.o(.text.CLOCK_GetFllFreq) refers to fsl_clock.o(.rodata.cst16) for CLOCK_GetFllFreq.fllFactorTable
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFllFreq) refers to fsl_clock.o(.text.CLOCK_GetFllFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPll0Freq) refers to fsl_clock.o(.bss.g_xtal0Freq) for g_xtal0Freq
    fsl_clock.o(.text.CLOCK_GetPll0Freq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.6
    fsl_clock.o(.text.CLOCK_GetPll0Freq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.text.CLOCK_GetPll0Freq) refers to fsl_clock.o(.bss.g_xtal32Freq) for g_xtal32Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPll0Freq) refers to fsl_clock.o(.text.CLOCK_GetPll0Freq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetPlatClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOutClkFreq) for CLOCK_GetOutClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetPlatClkFreq) refers to fsl_clock.o(.text.CLOCK_GetPlatClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetOutClkFreq) refers to fsl_clock.o(.data.s_slowIrcFreq) for s_slowIrcFreq
    fsl_clock.o(.text.CLOCK_GetOutClkFreq) refers to fsl_clock.o(.bss.g_xtal0Freq) for g_xtal0Freq
    fsl_clock.o(.text.CLOCK_GetOutClkFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.6
    fsl_clock.o(.text.CLOCK_GetOutClkFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.text.CLOCK_GetOutClkFreq) refers to fsl_clock.o(.text.CLOCK_GetPll0Freq) for CLOCK_GetPll0Freq
    fsl_clock.o(.text.CLOCK_GetOutClkFreq) refers to fsl_clock.o(.data.s_fastIrcFreq) for s_fastIrcFreq
    fsl_clock.o(.text.CLOCK_GetOutClkFreq) refers to fsl_clock.o(.bss.g_xtal32Freq) for g_xtal32Freq
    fsl_clock.o(.text.CLOCK_GetOutClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFllRefClkFreq) for CLOCK_GetFllRefClkFreq
    fsl_clock.o(.text.CLOCK_GetOutClkFreq) refers to fsl_clock.o(.rodata.cst16) for CLOCK_GetFllFreq.fllFactorTable
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetOutClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOutClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFlashClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOutClkFreq) for CLOCK_GetOutClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFlashClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFlashClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFlexBusClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOutClkFreq) for CLOCK_GetOutClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFlexBusClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFlexBusClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetBusClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOutClkFreq) for CLOCK_GetOutClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetBusClkFreq) refers to fsl_clock.o(.text.CLOCK_GetBusClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOutClkFreq) for CLOCK_GetOutClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetCoreSysClkFreq) refers to fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetOutClkFreq) for CLOCK_GetOutClkFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetFllRefClkFreq) for CLOCK_GetFllRefClkFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.rodata.cst16) for CLOCK_GetFllFreq.fllFactorTable
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetPll0Freq) for CLOCK_GetPll0Freq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.bss.g_xtal0Freq) for g_xtal0Freq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.data.s_slowIrcFreq) for s_slowIrcFreq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.bss.g_xtal32Freq) for g_xtal32Freq
    fsl_clock.o(.text.CLOCK_GetFreq) refers to fsl_clock.o(.data.s_fastIrcFreq) for s_fastIrcFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFreq) refers to fsl_clock.o(.text.CLOCK_GetFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFixedFreqClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFllRefClkFreq) for CLOCK_GetFllRefClkFreq
    fsl_clock.o(.text.CLOCK_GetFixedFreqClkFreq) refers to fsl_clock.o(.text.CLOCK_GetOutClkFreq) for CLOCK_GetOutClkFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFixedFreqClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFixedFreqClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetInternalRefClkFreq) refers to fsl_clock.o(.data.s_slowIrcFreq) for s_slowIrcFreq
    fsl_clock.o(.text.CLOCK_GetInternalRefClkFreq) refers to fsl_clock.o(.data.s_fastIrcFreq) for s_fastIrcFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetInternalRefClkFreq) refers to fsl_clock.o(.text.CLOCK_GetInternalRefClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetSimConfig) refers to fsl_clock.o(.text.CLOCK_SetSimConfig) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbfs0Clock) refers to fsl_clock.o(.text.CLOCK_EnableUsbfs0Clock) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_GetFllRefClkFreq) refers to fsl_clock.o(.bss.g_xtal0Freq) for g_xtal0Freq
    fsl_clock.o(.text.CLOCK_GetFllRefClkFreq) refers to fsl_clock.o(.rodata.str1.1) for .L.str.6
    fsl_clock.o(.text.CLOCK_GetFllRefClkFreq) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.text.CLOCK_GetFllRefClkFreq) refers to fsl_clock.o(.data.s_slowIrcFreq) for s_slowIrcFreq
    fsl_clock.o(.text.CLOCK_GetFllRefClkFreq) refers to fsl_clock.o(.bss.g_xtal32Freq) for g_xtal32Freq
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetFllRefClkFreq) refers to fsl_clock.o(.text.CLOCK_GetFllRefClkFreq) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetExternalRefClkConfig) refers to fsl_clock.o(.text.CLOCK_SetExternalRefClkConfig) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetInternalRefClkConfig) refers to fsl_clock.o(.text.CLOCK_SetInternalRefClkConfig) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_CalcPllDiv) refers to fsl_clock.o(.text.CLOCK_CalcPllDiv) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_EnablePll0) refers to fsl_clock.o(.rodata.str1.1) for .L.str.4
    fsl_clock.o(.text.CLOCK_EnablePll0) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_EnablePll0) refers to fsl_clock.o(.text.CLOCK_EnablePll0) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetOsc0MonitorMode) refers to fsl_clock.o(.text.CLOCK_SetOsc0MonitorMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetRtcOscMonitorMode) refers to fsl_clock.o(.text.CLOCK_SetRtcOscMonitorMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetPll0MonitorMode) refers to fsl_clock.o(.text.CLOCK_SetPll0MonitorMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetStatusFlags) refers to fsl_clock.o(.text.CLOCK_GetStatusFlags) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_ClearStatusFlags) refers to fsl_clock.o(.text.CLOCK_ClearStatusFlags) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_InitOsc0) refers to fsl_clock.o(.text.CLOCK_InitOsc0) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitOsc0) refers to fsl_clock.o(.text.CLOCK_DeinitOsc0) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetSlowIrcFreq) refers to fsl_clock.o(.data.s_slowIrcFreq) for s_slowIrcFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetSlowIrcFreq) refers to fsl_clock.o(.text.CLOCK_SetSlowIrcFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetFastIrcFreq) refers to fsl_clock.o(.data.s_fastIrcFreq) for s_fastIrcFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetFastIrcFreq) refers to fsl_clock.o(.text.CLOCK_SetFastIrcFreq) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_TrimInternalRefClk) refers to fsl_clock.o(.rodata.cst16) for CLOCK_TrimInternalRefClk.trimRange
    fsl_clock.o(.text.CLOCK_TrimInternalRefClk) refers to fsl_clock.o(.data.s_slowIrcFreq) for s_slowIrcFreq
    fsl_clock.o(.text.CLOCK_TrimInternalRefClk) refers to fsl_clock.o(.data.s_fastIrcFreq) for s_fastIrcFreq
    fsl_clock.o(.ARM.exidx.text.CLOCK_TrimInternalRefClk) refers to fsl_clock.o(.text.CLOCK_TrimInternalRefClk) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_GetMode) refers to fsl_clock.o(.text.CLOCK_GetMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetFeiMode) refers to fsl_clock.o(.text.CLOCK_SetFeiMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetFeeMode) refers to fsl_clock.o(.text.CLOCK_SetFeeMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetFbiMode) refers to fsl_clock.o(.text.CLOCK_SetFbiMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetFbeMode) refers to fsl_clock.o(.text.CLOCK_SetFbeMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetBlpiMode) refers to fsl_clock.o(.text.CLOCK_SetBlpiMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetBlpeMode) refers to fsl_clock.o(.text.CLOCK_SetBlpeMode) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetPbeMode) refers to fsl_clock.o(.rodata.str1.1) for .L.str.4
    fsl_clock.o(.text.CLOCK_SetPbeMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetPbeMode) refers to fsl_clock.o(.text.CLOCK_SetPbeMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetPeeMode) refers to fsl_clock.o(.text.CLOCK_SetPeeMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_ExternalModeToFbeModeQuick) refers to fsl_clock.o(.text.CLOCK_ExternalModeToFbeModeQuick) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_InternalModeToFbiModeQuick) refers to fsl_clock.o(.text.CLOCK_InternalModeToFbiModeQuick) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_BootToFeiMode) refers to fsl_clock.o(.text.CLOCK_BootToFeiMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_BootToFeeMode) refers to fsl_clock.o(.text.CLOCK_BootToFeeMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_BootToBlpiMode) refers to fsl_clock.o(.text.CLOCK_BootToBlpiMode) for [Anonymous Symbol]
    fsl_clock.o(.ARM.exidx.text.CLOCK_BootToBlpeMode) refers to fsl_clock.o(.text.CLOCK_BootToBlpeMode) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_BootToPeeMode) refers to fsl_clock.o(.rodata.str1.1) for .L.str.4
    fsl_clock.o(.text.CLOCK_BootToPeeMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_BootToPeeMode) refers to fsl_clock.o(.text.CLOCK_BootToPeeMode) for [Anonymous Symbol]
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.rodata.mcgModeMatrix) for mcgModeMatrix
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.rodata.str1.1) for .L.str.1
    fsl_clock.o(.text.CLOCK_SetMcgConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_clock.o(.ARM.exidx.text.CLOCK_SetMcgConfig) refers to fsl_clock.o(.text.CLOCK_SetMcgConfig) for [Anonymous Symbol]
    fsl_common.o(.text.SDK_Malloc) refers to malloc2.o(i.__malloc$2region) for malloc
    fsl_common.o(.ARM.exidx.text.SDK_Malloc) refers to fsl_common.o(.text.SDK_Malloc) for [Anonymous Symbol]
    fsl_common.o(.text.SDK_Free) refers to malloc2.o(i.__free$2region) for free
    fsl_common.o(.ARM.exidx.text.SDK_Free) refers to fsl_common.o(.text.SDK_Free) for [Anonymous Symbol]
    fsl_common_arm.o(.text.SDK_DelayAtLeastUs) refers to uldiv.o(.text) for __aeabi_uldivmod
    fsl_common_arm.o(.text.SDK_DelayAtLeastUs) refers to fsl_common_arm.o(.rodata.str1.1) for .L.str.1
    fsl_common_arm.o(.text.SDK_DelayAtLeastUs) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_common_arm.o(.ARM.exidx.text.SDK_DelayAtLeastUs) refers to fsl_common_arm.o(.text.SDK_DelayAtLeastUs) for [Anonymous Symbol]
    fsl_ftfx_cache.o(.text.FTFx_CACHE_Init) refers to fsl_ftfx_cache.o(.bss.s_ftfxCommonBitOperation) for s_ftfxCommonBitOperation
    fsl_ftfx_cache.o(.text.FTFx_CACHE_Init) refers to fsl_ftfx_cache.o(.rodata.s_ftfxCommonBitOperationFunctionCode) for s_ftfxCommonBitOperationFunctionCode
    fsl_ftfx_cache.o(.text.FTFx_CACHE_Init) refers to memcpy.o(.text) for memcpy
    fsl_ftfx_cache.o(.ARM.exidx.text.FTFx_CACHE_Init) refers to fsl_ftfx_cache.o(.text.FTFx_CACHE_Init) for [Anonymous Symbol]
    fsl_ftfx_cache.o(.ARM.exidx.text.FTFx_CACHE_ClearCachePrefetchSpeculation) refers to fsl_ftfx_cache.o(.text.FTFx_CACHE_ClearCachePrefetchSpeculation) for [Anonymous Symbol]
    fsl_ftfx_cache.o(.ARM.exidx.text.fmc_flash_cache_clear) refers to fsl_ftfx_cache.o(.text.fmc_flash_cache_clear) for [Anonymous Symbol]
    fsl_ftfx_cache.o(.ARM.exidx.text.fmc_flash_prefetch_speculation_clear) refers to fsl_ftfx_cache.o(.text.fmc_flash_prefetch_speculation_clear) for [Anonymous Symbol]
    fsl_ftfx_cache.o(.ARM.exidx.text.FTFx_CACHE_PflashSetPrefetchSpeculation) refers to fsl_ftfx_cache.o(.text.FTFx_CACHE_PflashSetPrefetchSpeculation) for [Anonymous Symbol]
    fsl_ftfx_cache.o(.text.FTFx_CACHE_PflashGetPrefetchSpeculation) refers to memseta.o(.text) for memset
    fsl_ftfx_cache.o(.ARM.exidx.text.FTFx_CACHE_PflashGetPrefetchSpeculation) refers to fsl_ftfx_cache.o(.text.FTFx_CACHE_PflashGetPrefetchSpeculation) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_API_Init) refers to fsl_ftfx_controller.o(.bss.s_ftfxRunCommand) for s_ftfxRunCommand
    fsl_ftfx_controller.o(.text.FTFx_API_Init) refers to fsl_ftfx_controller.o(.rodata.s_ftfxRunCommandFunctionCode) for s_ftfxRunCommandFunctionCode
    fsl_ftfx_controller.o(.text.FTFx_API_Init) refers to memcpy.o(.text) for memcpy
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_API_Init) refers to fsl_ftfx_controller.o(.text.FTFx_API_Init) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_Erase) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_Erase) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_EraseSectorNonBlocking) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_EraseSectorNonBlocking) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_EraseAll) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_EraseAll) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_EraseAllExecuteOnlySegments) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_EraseAllExecuteOnlySegments) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_Program) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_Program) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_ProgramOnce) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramOnce) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramSection) refers to memcpy.o(.text) for memcpy
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_ProgramSection) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramSection) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_ReadOnce) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ReadOnce) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_ReadResource) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ReadResource) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_VerifyErase) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyErase) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_VerifyEraseAll) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyEraseAll) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_VerifyEraseAllExecuteOnlySegments) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyEraseAllExecuteOnlySegments) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_VerifyProgram) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyProgram) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_SecurityBypass) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_SecurityBypass) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_REG_GetSecurityState) refers to fsl_ftfx_controller.o(.text.FTFx_REG_GetSecurityState) for [Anonymous Symbol]
    fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_SwapControl) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_SwapControl) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_Init) refers to fsl_ftfx_flash.o(.rodata.kPFlashDensities) for kPFlashDensities
    fsl_ftfx_flash.o(.text.FLASH_Init) refers to fsl_ftfx_controller.o(.text.FTFx_API_Init) for FTFx_API_Init
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_Init) refers to fsl_ftfx_flash.o(.text.FLASH_Init) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_Erase) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_Erase) for FTFx_CMD_Erase
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_Erase) refers to fsl_ftfx_flash.o(.text.FLASH_Erase) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_EraseSectorNonBlocking) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_EraseSectorNonBlocking) for FTFx_CMD_EraseSectorNonBlocking
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_EraseSectorNonBlocking) refers to fsl_ftfx_flash.o(.text.FLASH_EraseSectorNonBlocking) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_EraseAll) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_EraseAll) for FTFx_CMD_EraseAll
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_EraseAll) refers to fsl_ftfx_flash.o(.text.FLASH_EraseAll) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_Program) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_Program) for FTFx_CMD_Program
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_Program) refers to fsl_ftfx_flash.o(.text.FLASH_Program) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_ProgramOnce) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramOnce) for FTFx_CMD_ProgramOnce
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_ProgramOnce) refers to fsl_ftfx_flash.o(.text.FLASH_ProgramOnce) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_ProgramSection) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramSection) for FTFx_CMD_ProgramSection
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_ProgramSection) refers to fsl_ftfx_flash.o(.text.FLASH_ProgramSection) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_ReadResource) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ReadResource) for FTFx_CMD_ReadResource
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_ReadResource) refers to fsl_ftfx_flash.o(.text.FLASH_ReadResource) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_ReadOnce) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ReadOnce) for FTFx_CMD_ReadOnce
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_ReadOnce) refers to fsl_ftfx_flash.o(.text.FLASH_ReadOnce) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_VerifyErase) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyErase) for FTFx_CMD_VerifyErase
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_VerifyErase) refers to fsl_ftfx_flash.o(.text.FLASH_VerifyErase) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_VerifyEraseAll) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyEraseAll) for FTFx_CMD_VerifyEraseAll
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_VerifyEraseAll) refers to fsl_ftfx_flash.o(.text.FLASH_VerifyEraseAll) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_VerifyProgram) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyProgram) for FTFx_CMD_VerifyProgram
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_VerifyProgram) refers to fsl_ftfx_flash.o(.text.FLASH_VerifyProgram) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_GetSecurityState) refers to fsl_ftfx_controller.o(.text.FTFx_REG_GetSecurityState) for FTFx_REG_GetSecurityState
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_GetSecurityState) refers to fsl_ftfx_flash.o(.text.FLASH_GetSecurityState) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_SecurityBypass) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_SecurityBypass) for FTFx_CMD_SecurityBypass
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_SecurityBypass) refers to fsl_ftfx_flash.o(.text.FLASH_SecurityBypass) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.text.FLASH_Swap) refers to memseta.o(.text) for memset
    fsl_ftfx_flash.o(.text.FLASH_Swap) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_SwapControl) for FTFx_CMD_SwapControl
    fsl_ftfx_flash.o(.text.FLASH_Swap) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_ReadResource) for FTFx_CMD_ReadResource
    fsl_ftfx_flash.o(.text.FLASH_Swap) refers to fsl_ftfx_controller.o(.text.FTFx_CMD_Erase) for FTFx_CMD_Erase
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_Swap) refers to fsl_ftfx_flash.o(.text.FLASH_Swap) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_IsProtected) refers to fsl_ftfx_flash.o(.text.FLASH_IsProtected) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_PflashSetProtection) refers to fsl_ftfx_flash.o(.text.FLASH_PflashSetProtection) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_PflashGetProtection) refers to fsl_ftfx_flash.o(.text.FLASH_PflashGetProtection) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_GetProperty) refers to fsl_ftfx_flash.o(.text.FLASH_GetProperty) for [Anonymous Symbol]
    fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_GetCommandState) refers to fsl_ftfx_flash.o(.text.FLASH_GetCommandState) for [Anonymous Symbol]
    fsl_gpio.o(.text.GPIO_PinInit) refers to fsl_gpio.o(.rodata.str1.1) for .L.str.1
    fsl_gpio.o(.text.GPIO_PinInit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_gpio.o(.ARM.exidx.text.GPIO_PinInit) refers to fsl_gpio.o(.text.GPIO_PinInit) for [Anonymous Symbol]
    fsl_gpio.o(.text.GPIO_PortGetInterruptFlags) refers to fsl_gpio.o(.rodata.s_gpioBases) for s_gpioBases
    fsl_gpio.o(.text.GPIO_PortGetInterruptFlags) refers to fsl_gpio.o(.rodata.str1.1) for .L.str.2
    fsl_gpio.o(.text.GPIO_PortGetInterruptFlags) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_gpio.o(.text.GPIO_PortGetInterruptFlags) refers to fsl_gpio.o(.rodata.s_portBases) for s_portBases
    fsl_gpio.o(.ARM.exidx.text.GPIO_PortGetInterruptFlags) refers to fsl_gpio.o(.text.GPIO_PortGetInterruptFlags) for [Anonymous Symbol]
    fsl_gpio.o(.text.GPIO_PortClearInterruptFlags) refers to fsl_gpio.o(.rodata.s_gpioBases) for s_gpioBases
    fsl_gpio.o(.text.GPIO_PortClearInterruptFlags) refers to fsl_gpio.o(.rodata.str1.1) for .L.str.2
    fsl_gpio.o(.text.GPIO_PortClearInterruptFlags) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_gpio.o(.text.GPIO_PortClearInterruptFlags) refers to fsl_gpio.o(.rodata.s_portBases) for s_portBases
    fsl_gpio.o(.ARM.exidx.text.GPIO_PortClearInterruptFlags) refers to fsl_gpio.o(.text.GPIO_PortClearInterruptFlags) for [Anonymous Symbol]
    fsl_smc.o(.text.SMC_PreEnterStopModes) refers to fsl_smc.o(.bss.g_savedPrimask) for g_savedPrimask
    fsl_smc.o(.ARM.exidx.text.SMC_PreEnterStopModes) refers to fsl_smc.o(.text.SMC_PreEnterStopModes) for [Anonymous Symbol]
    fsl_smc.o(.text.SMC_PostExitStopModes) refers to fsl_smc.o(.bss.g_savedPrimask) for g_savedPrimask
    fsl_smc.o(.ARM.exidx.text.SMC_PostExitStopModes) refers to fsl_smc.o(.text.SMC_PostExitStopModes) for [Anonymous Symbol]
    fsl_smc.o(.text.SMC_PreEnterWaitModes) refers to fsl_smc.o(.bss.g_savedPrimask) for g_savedPrimask
    fsl_smc.o(.ARM.exidx.text.SMC_PreEnterWaitModes) refers to fsl_smc.o(.text.SMC_PreEnterWaitModes) for [Anonymous Symbol]
    fsl_smc.o(.text.SMC_PostExitWaitModes) refers to fsl_smc.o(.bss.g_savedPrimask) for g_savedPrimask
    fsl_smc.o(.ARM.exidx.text.SMC_PostExitWaitModes) refers to fsl_smc.o(.text.SMC_PostExitWaitModes) for [Anonymous Symbol]
    fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeRun) refers to fsl_smc.o(.text.SMC_SetPowerModeRun) for [Anonymous Symbol]
    fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeWait) refers to fsl_smc.o(.text.SMC_SetPowerModeWait) for [Anonymous Symbol]
    fsl_smc.o(.text.SMC_SetPowerModeStop) refers to fsl_smc.o(.data.s_stopRamFuncArray) for s_stopRamFuncArray
    fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeStop) refers to fsl_smc.o(.text.SMC_SetPowerModeStop) for [Anonymous Symbol]
    fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeVlpr) refers to fsl_smc.o(.text.SMC_SetPowerModeVlpr) for [Anonymous Symbol]
    fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeVlpw) refers to fsl_smc.o(.text.SMC_SetPowerModeVlpw) for [Anonymous Symbol]
    fsl_smc.o(.text.SMC_SetPowerModeVlps) refers to fsl_smc.o(.data.s_stopRamFuncArray) for s_stopRamFuncArray
    fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeVlps) refers to fsl_smc.o(.text.SMC_SetPowerModeVlps) for [Anonymous Symbol]
    fsl_smc.o(.text.SMC_SetPowerModeLls) refers to fsl_smc.o(.data.s_stopRamFuncArray) for s_stopRamFuncArray
    fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeLls) refers to fsl_smc.o(.text.SMC_SetPowerModeLls) for [Anonymous Symbol]
    fsl_smc.o(.text.SMC_SetPowerModeVlls) refers to fsl_smc.o(.data.s_stopRamFuncArray) for s_stopRamFuncArray
    fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeVlls) refers to fsl_smc.o(.text.SMC_SetPowerModeVlls) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_GetInstance) refers to fsl_uart.o(.rodata.s_uartBases) for s_uartBases
    fsl_uart.o(.text.UART_GetInstance) refers to fsl_uart.o(.rodata.str1.1) for .L.str
    fsl_uart.o(.text.UART_GetInstance) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_GetInstance) refers to fsl_uart.o(.text.UART_GetInstance) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferGetRxRingBufferLength) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferGetRxRingBufferLength) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferGetRxRingBufferLength) refers to fsl_uart.o(.text.UART_TransferGetRxRingBufferLength) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_Init) refers to fsl_uart.o(.rodata.cst16) for .Lswitch.table.UART_Init.19
    fsl_uart.o(.text.UART_Init) refers to fsl_uart.o(.rodata.s_uartBases) for s_uartBases
    fsl_uart.o(.text.UART_Init) refers to fsl_uart.o(.rodata.str1.1) for .L.str
    fsl_uart.o(.text.UART_Init) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.text.UART_Init) refers to fsl_uart.o(.rodata.s_uartClock) for s_uartClock
    fsl_uart.o(.ARM.exidx.text.UART_Init) refers to fsl_uart.o(.text.UART_Init) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_Deinit) refers to fsl_uart.o(.rodata.s_uartBases) for s_uartBases
    fsl_uart.o(.text.UART_Deinit) refers to fsl_uart.o(.rodata.str1.1) for .L.str
    fsl_uart.o(.text.UART_Deinit) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.text.UART_Deinit) refers to fsl_uart.o(.rodata.s_uartClock) for s_uartClock
    fsl_uart.o(.ARM.exidx.text.UART_Deinit) refers to fsl_uart.o(.text.UART_Deinit) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_GetDefaultConfig) refers to memseta.o(.text) for memset
    fsl_uart.o(.text.UART_GetDefaultConfig) refers to fsl_uart.o(.rodata.str1.1) for .L.str.3
    fsl_uart.o(.text.UART_GetDefaultConfig) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_GetDefaultConfig) refers to fsl_uart.o(.text.UART_GetDefaultConfig) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_SetBaudRate) refers to fsl_uart.o(.rodata.str1.1) for .L.str.1
    fsl_uart.o(.text.UART_SetBaudRate) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_SetBaudRate) refers to fsl_uart.o(.text.UART_SetBaudRate) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_Enable9bitMode) refers to fsl_uart.o(.rodata.str1.1) for .L.str.8
    fsl_uart.o(.text.UART_Enable9bitMode) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_Enable9bitMode) refers to fsl_uart.o(.text.UART_Enable9bitMode) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_SendAddress) refers to fsl_uart.o(.rodata.str1.1) for .L.str.8
    fsl_uart.o(.text.UART_SendAddress) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_SendAddress) refers to fsl_uart.o(.text.UART_SendAddress) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_EnableInterrupts) refers to fsl_uart.o(.text.UART_EnableInterrupts) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_DisableInterrupts) refers to fsl_uart.o(.text.UART_DisableInterrupts) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_GetEnabledInterrupts) refers to fsl_uart.o(.text.UART_GetEnabledInterrupts) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_GetStatusFlags) refers to fsl_uart.o(.text.UART_GetStatusFlags) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_ClearStatusFlags) refers to fsl_uart.o(.text.UART_ClearStatusFlags) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_WriteBlocking) refers to fsl_uart.o(.text.UART_WriteBlocking) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_ReadBlocking) refers to fsl_uart.o(.rodata.str1.1) for .L.str.9
    fsl_uart.o(.text.UART_ReadBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_ReadBlocking) refers to fsl_uart.o(.text.UART_ReadBlocking) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferCreateHandle) refers to memseta.o(.text) for memset
    fsl_uart.o(.text.UART_TransferCreateHandle) refers to fsl_uart.o(.rodata.s_uartBases) for s_uartBases
    fsl_uart.o(.text.UART_TransferCreateHandle) refers to fsl_uart.o(.rodata.str1.1) for .L.str
    fsl_uart.o(.text.UART_TransferCreateHandle) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.text.UART_TransferCreateHandle) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.text.UART_TransferCreateHandle) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART_TransferCreateHandle) refers to fsl_uart.o(.text.UART_TransferHandleIRQ) for UART_TransferHandleIRQ
    fsl_uart.o(.text.UART_TransferCreateHandle) refers to fsl_uart.o(.rodata.s_uartIRQ) for s_uartIRQ
    fsl_uart.o(.ARM.exidx.text.UART_TransferCreateHandle) refers to fsl_uart.o(.text.UART_TransferCreateHandle) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferHandleIRQ) refers to fsl_uart.o(.rodata.str1.1) for .L.str.9
    fsl_uart.o(.text.UART_TransferHandleIRQ) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferHandleIRQ) refers to fsl_uart.o(.text.UART_TransferHandleIRQ) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferStartRingBuffer) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferStartRingBuffer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferStartRingBuffer) refers to fsl_uart.o(.text.UART_TransferStartRingBuffer) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferStopRingBuffer) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferStopRingBuffer) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferStopRingBuffer) refers to fsl_uart.o(.text.UART_TransferStopRingBuffer) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferSendNonBlocking) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferSendNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferSendNonBlocking) refers to fsl_uart.o(.text.UART_TransferSendNonBlocking) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferAbortSend) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferAbortSend) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferAbortSend) refers to fsl_uart.o(.text.UART_TransferAbortSend) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferGetSendCount) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferGetSendCount) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferGetSendCount) refers to fsl_uart.o(.text.UART_TransferGetSendCount) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferReceiveNonBlocking) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferReceiveNonBlocking) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferReceiveNonBlocking) refers to fsl_uart.o(.text.UART_TransferReceiveNonBlocking) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferAbortReceive) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferAbortReceive) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferAbortReceive) refers to fsl_uart.o(.text.UART_TransferAbortReceive) for [Anonymous Symbol]
    fsl_uart.o(.text.UART_TransferGetReceiveCount) refers to fsl_uart.o(.rodata.str1.1) for .L.str.2
    fsl_uart.o(.text.UART_TransferGetReceiveCount) refers to fsl_assert.o(.text.__aeabi_assert) for __aeabi_assert
    fsl_uart.o(.ARM.exidx.text.UART_TransferGetReceiveCount) refers to fsl_uart.o(.text.UART_TransferGetReceiveCount) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_EnableTxFIFO) refers to fsl_uart.o(.text.UART_EnableTxFIFO) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_EnableRxFIFO) refers to fsl_uart.o(.text.UART_EnableRxFIFO) for [Anonymous Symbol]
    fsl_uart.o(.ARM.exidx.text.UART_TransferHandleErrorIRQ) refers to fsl_uart.o(.text.UART_TransferHandleErrorIRQ) for [Anonymous Symbol]
    fsl_uart.o(.text.UART0_DriverIRQHandler) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART0_DriverIRQHandler) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.ARM.exidx.text.UART0_DriverIRQHandler) refers to fsl_uart.o(.text.UART0_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART0_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART0_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.ARM.exidx.text.UART0_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART0_RX_TX_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART1_DriverIRQHandler) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART1_DriverIRQHandler) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.ARM.exidx.text.UART1_DriverIRQHandler) refers to fsl_uart.o(.text.UART1_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART1_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART1_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.ARM.exidx.text.UART1_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART1_RX_TX_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART2_DriverIRQHandler) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART2_DriverIRQHandler) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.ARM.exidx.text.UART2_DriverIRQHandler) refers to fsl_uart.o(.text.UART2_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART2_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART2_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.ARM.exidx.text.UART2_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART2_RX_TX_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART3_DriverIRQHandler) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART3_DriverIRQHandler) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.ARM.exidx.text.UART3_DriverIRQHandler) refers to fsl_uart.o(.text.UART3_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART3_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART3_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.ARM.exidx.text.UART3_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART3_RX_TX_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART4_DriverIRQHandler) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART4_DriverIRQHandler) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.ARM.exidx.text.UART4_DriverIRQHandler) refers to fsl_uart.o(.text.UART4_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART4_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART4_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.ARM.exidx.text.UART4_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART4_RX_TX_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART5_DriverIRQHandler) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART5_DriverIRQHandler) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.ARM.exidx.text.UART5_DriverIRQHandler) refers to fsl_uart.o(.text.UART5_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.text.UART5_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.data.s_uartIsr) for s_uartIsr
    fsl_uart.o(.text.UART5_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.bss.s_uartHandle) for s_uartHandle
    fsl_uart.o(.ARM.exidx.text.UART5_RX_TX_DriverIRQHandler) refers to fsl_uart.o(.text.UART5_RX_TX_DriverIRQHandler) for [Anonymous Symbol]
    fsl_uart.o(.data.s_uartIsr) refers to startup_mk64f12.o(.text) for DefaultISR
    system_mk64f12.o(.text.SystemInit) refers to system_mk64f12.o(.text.SystemInitHook) for SystemInitHook
    system_mk64f12.o(.ARM.exidx.text.SystemInit) refers to system_mk64f12.o(.text.SystemInit) for [Anonymous Symbol]
    system_mk64f12.o(.ARM.exidx.text.SystemInitHook) refers to system_mk64f12.o(.text.SystemInitHook) for [Anonymous Symbol]
    system_mk64f12.o(.text.SystemCoreClockUpdate) refers to system_mk64f12.o(.data.SystemCoreClock) for SystemCoreClock
    system_mk64f12.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_mk64f12.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    fsl_assert.o(.text.__aeabi_assert) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for DbgConsole_Printf
    fsl_assert.o(.ARM.exidx.text.__aeabi_assert) refers to fsl_assert.o(.text.__aeabi_assert) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_adapter_uart.o(.text.HAL_UartInit) for HAL_UartInit
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_adapter_uart.o(.text.HAL_UartSendBlocking) for HAL_UartSendBlocking
    fsl_debug_console.o(.text.DbgConsole_Init) refers to fsl_adapter_uart.o(.text.HAL_UartReceiveBlocking) for HAL_UartReceiveBlocking
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Init) refers to fsl_debug_console.o(.text.DbgConsole_Init) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.text.DbgConsole_Deinit) refers to fsl_adapter_uart.o(.text.HAL_UartDeinit) for HAL_UartDeinit
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Deinit) refers to fsl_debug_console.o(.text.DbgConsole_Deinit) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Printf) refers to fsl_debug_console.o(.text.DbgConsole_Vprintf) for DbgConsole_Vprintf
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Printf) refers to fsl_debug_console.o(.text.DbgConsole_Printf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to strlen.o(.text) for strlen
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to dcmpeq.o(.text) for __aeabi_dcmpeq
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to modf.o(i.__hardfp_modf) for __hardfp_modf
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to dmul.o(.text) for __aeabi_dmul
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to dfltui.o(.text) for __aeabi_ui2d
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to pow.o(i.__hardfp_pow) for __hardfp_pow
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to dcmplt.o(.text) for __aeabi_dcmplt
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to dadd.o(.text) for __aeabi_dadd
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to dcmpgt.o(.text) for __aeabi_dcmpgt
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to ddiv.o(.text) for __aeabi_ddiv
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to dfixl.o(.text) for __aeabi_d2lz
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to dfltl.o(.text) for __aeabi_l2d
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to dfixi.o(.text) for __aeabi_d2iz
    fsl_debug_console.o(.text.DbgConsole_Vprintf) refers to memcpy.o(.text) for memcpy
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Vprintf) refers to fsl_debug_console.o(.text.DbgConsole_Vprintf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Putchar) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Putchar) refers to fsl_debug_console.o(.text.DbgConsole_Putchar) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Scanf) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Scanf) refers to fsl_debug_console.o(.text.DbgConsole_Scanf) for [Anonymous Symbol]
    fsl_debug_console.o(.text.DbgConsole_Getchar) refers to fsl_debug_console.o(.bss.s_debugConsole) for s_debugConsole
    fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Getchar) refers to fsl_debug_console.o(.text.DbgConsole_Getchar) for [Anonymous Symbol]
    startup_mk64f12.o(.text) refers to startup_mk64f12.o(.isr_vector) for __Vectors
    startup_mk64f12.o(.text) refers to system_mk64f12.o(.text.SystemInit) for SystemInit
    startup_mk64f12.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    startup_mk64f12.o(.text) refers to irq_armv7m.o(.text) for SVC_Handler
    startup_mk64f12.o(.text) refers to fsl_uart.o(.text.UART0_RX_TX_DriverIRQHandler) for UART0_RX_TX_DriverIRQHandler
    startup_mk64f12.o(.text) refers to fsl_uart.o(.text.UART1_RX_TX_DriverIRQHandler) for UART1_RX_TX_DriverIRQHandler
    startup_mk64f12.o(.text) refers to fsl_uart.o(.text.UART2_RX_TX_DriverIRQHandler) for UART2_RX_TX_DriverIRQHandler
    startup_mk64f12.o(.text) refers to fsl_uart.o(.text.UART3_RX_TX_DriverIRQHandler) for UART3_RX_TX_DriverIRQHandler
    startup_mk64f12.o(.text) refers to fsl_uart.o(.text.UART4_RX_TX_DriverIRQHandler) for UART4_RX_TX_DriverIRQHandler
    startup_mk64f12.o(.text) refers to fsl_uart.o(.text.UART5_RX_TX_DriverIRQHandler) for UART5_RX_TX_DriverIRQHandler
    startup_mk64f12.o(.isr_vector) refers to startup_mk64f12.o(.text) for Reset_Handler
    startup_mk64f12.o(.isr_vector) refers to irq_armv7m.o(.text) for SVC_Handler
    startup_mk64f12.o(.isr_vector) refers to main.o(.text.PORTA_IRQHandler) for PORTA_IRQHandler
    startup_mk64f12.o(.isr_vector) refers to main.o(.text.PORTC_IRQHandler) for PORTC_IRQHandler
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_armv7m.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_armv7m.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_armv7m.o(.text) refers to rtx_lib.o(.rodata.osRtxUserSVC) for osRtxUserSVC
    irq_armv7m.o(.ARM.exidx) refers to irq_armv7m.o(.text) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelBeforeInit) refers to rtx_kernel.o(.text.osRtxKernelBeforeInit) for [Anonymous Symbol]
    rtx_kernel.o(.text.osRtxKernelErrorNotify) refers to rtx_config.o(.text.osRtxErrorNotify) for osRtxErrorNotify
    rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.osRtxKernelBeforeInit) for osRtxKernelBeforeInit
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to memcpy.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelProtect) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_kernel.o(.text.osKernelProtect) refers to rtx_kernel.o(.text.svcRtxKernelProtect) for svcRtxKernelProtect
    rtx_kernel.o(.ARM.exidx.text.osKernelProtect) refers to rtx_kernel.o(.text.osKernelProtect) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelDestroyClass) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelDestroyClass) refers to rtx_kernel.o(.text.svcRtxKernelDestroyClass) for svcRtxKernelDestroyClass
    rtx_kernel.o(.ARM.exidx.text.osKernelDestroyClass) refers to rtx_kernel.o(.text.osKernelDestroyClass) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelDestroyClass) refers to rtx_kernel.o(.text.svcRtxKernelDestroyClass) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to memseta.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_armv7m.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.GetKernelSleepTime) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime) refers to rtx_kernel.o(.text.GetKernelSleepTime) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.GetKernelSleepTime) for GetKernelSleepTime
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelProtect) refers to rtx_kernel.o(.text.svcRtxKernelProtect) for [Anonymous Symbol]
    rtx_kernel.o(.text.OUTLINED_FUNCTION_0) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_kernel.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to memseta.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to memseta.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to memcpy.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRestore) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to memseta.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_mutex.o(.text.osRtxMutexOwnerRestore) for osRtxMutexOwnerRestore
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.osRtxThreadDestroy) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy) refers to rtx_thread.o(.text.osRtxThreadDestroy) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadBeforeFree) for osRtxThreadBeforeFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBeforeFree) refers to rtx_thread.o(.text.osRtxThreadBeforeFree) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(.text.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to memseta.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadEntry) for osThreadEntry
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.IsIrqMasked) refers to rtx_thread.o(.text.IsIrqMasked) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetClass) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetClass) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.osThreadGetClass) refers to rtx_thread.o(.text.svcRtxThreadGetClass) for svcRtxThreadGetClass
    rtx_thread.o(.ARM.exidx.text.osThreadGetClass) refers to rtx_thread.o(.text.osThreadGetClass) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetClass) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetClass) refers to rtx_thread.o(.text.svcRtxThreadGetClass) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetZone) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetZone) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.osThreadGetZone) refers to rtx_thread.o(.text.svcRtxThreadGetZone) for svcRtxThreadGetZone
    rtx_thread.o(.ARM.exidx.text.osThreadGetZone) refers to rtx_thread.o(.text.osThreadGetZone) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetZone) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetZone) refers to rtx_thread.o(.text.svcRtxThreadGetZone) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.text.osThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFeedWatchdog) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFeedWatchdog) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.osThreadFeedWatchdog) refers to rtx_thread.o(.text.svcRtxThreadFeedWatchdog) for svcRtxThreadFeedWatchdog
    rtx_thread.o(.ARM.exidx.text.osThreadFeedWatchdog) refers to rtx_thread.o(.text.osThreadFeedWatchdog) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadProtectPrivileged) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadProtectPrivileged) refers to rtx_thread.o(.text.svcRtxThreadProtectPrivileged) for svcRtxThreadProtectPrivileged
    rtx_thread.o(.ARM.exidx.text.osThreadProtectPrivileged) refers to rtx_thread.o(.text.osThreadProtectPrivileged) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_thread.o(.text.svcRtxThreadSuspendClass) for svcRtxThreadSuspendClass
    rtx_thread.o(.text.osThreadSuspendClass) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osThreadSuspendClass) refers to rtx_thread.o(.text.osThreadSuspendClass) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspendClass) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspendClass) refers to rtx_thread.o(.text.svcRtxThreadSuspendClass) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_thread.o(.text.svcRtxThreadResumeClass) for svcRtxThreadResumeClass
    rtx_thread.o(.text.osThreadResumeClass) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osThreadResumeClass) refers to rtx_thread.o(.text.osThreadResumeClass) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResumeClass) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResumeClass) refers to rtx_thread.o(.text.svcRtxThreadResumeClass) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadTerminateZone) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osThreadTerminateZone) refers to rtx_thread.o(.text.osThreadTerminateZone) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetAffinityMask) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadSetAffinityMask) refers to rtx_thread.o(.text.svcRtxThreadSetAffinityMask) for svcRtxThreadSetAffinityMask
    rtx_thread.o(.ARM.exidx.text.osThreadSetAffinityMask) refers to rtx_thread.o(.text.osThreadSetAffinityMask) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetAffinityMask) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetAffinityMask) refers to rtx_thread.o(.text.svcRtxThreadGetAffinityMask) for svcRtxThreadGetAffinityMask
    rtx_thread.o(.ARM.exidx.text.osThreadGetAffinityMask) refers to rtx_thread.o(.text.osThreadGetAffinityMask) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for OUTLINED_FUNCTION_2
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for OUTLINED_FUNCTION_0
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEntry) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadEntry) refers to rtx_thread.o(.text.osThreadEntry) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_6) for OUTLINED_FUNCTION_6
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for OUTLINED_FUNCTION_4
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadJoinWakeup) for osRtxThreadJoinWakeup
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDestroy) for osRtxThreadDestroy
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFeedWatchdog) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFeedWatchdog) refers to rtx_thread.o(.text.svcRtxThreadFeedWatchdog) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadProtectPrivileged) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadProtectPrivileged) refers to rtx_thread.o(.text.svcRtxThreadProtectPrivileged) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetAffinityMask) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for OUTLINED_FUNCTION_1
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetAffinityMask) refers to rtx_thread.o(.text.svcRtxThreadSetAffinityMask) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetAffinityMask) refers to rtx_thread.o(.text.svcRtxThreadGetAffinityMask) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for OUTLINED_FUNCTION_3
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_5) for OUTLINED_FUNCTION_5
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.OUTLINED_FUNCTION_0) refers to rtx_thread.o(.text.IsIrqMasked) for IsIrqMasked
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_0) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_0) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_1) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_1) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_2) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_2) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_3) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_3) for [Anonymous Symbol]
    rtx_thread.o(.text.OUTLINED_FUNCTION_4) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.OUTLINED_FUNCTION_4) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_4) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_4) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_5) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_5) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_6) refers to rtx_thread.o(.text.OUTLINED_FUNCTION_6) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup) for osRtxMessageQueueTimerSetup
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup) refers to rtx_timer.o(.text.osRtxTimerSetup) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.text.osRtxKernelErrorNotify) for osRtxKernelErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    modf.o(i.__hardfp_modf) refers (Special) to iusefp.o(.text) for __I$use$fp
    modf.o(i.__hardfp_modf) refers to dadd.o(.text) for __aeabi_dsub
    modf.o(i.__softfp_modf) refers (Special) to iusefp.o(.text) for __I$use$fp
    modf.o(i.__softfp_modf) refers to modf.o(i.__hardfp_modf) for __hardfp_modf
    modf.o(i.modf) refers (Special) to iusefp.o(.text) for __I$use$fp
    modf.o(i.modf) refers to modf.o(i.__hardfp_modf) for __hardfp_modf
    pow.o(i.__hardfp_pow) refers (Special) to iusefp.o(.text) for __I$use$fp
    pow.o(i.__hardfp_pow) refers to dunder.o(i.__mathlib_dbl_infnan2) for __mathlib_dbl_infnan2
    pow.o(i.__hardfp_pow) refers to errno.o(i.__set_errno) for __set_errno
    pow.o(i.__hardfp_pow) refers to dunder.o(i.__mathlib_dbl_divzero) for __mathlib_dbl_divzero
    pow.o(i.__hardfp_pow) refers to dunder.o(i.__mathlib_dbl_overflow) for __mathlib_dbl_overflow
    pow.o(i.__hardfp_pow) refers to ddiv.o(.text) for __aeabi_ddiv
    pow.o(i.__hardfp_pow) refers to sqrt.o(i.sqrt) for sqrt
    pow.o(i.__hardfp_pow) refers to fabs.o(i.fabs) for fabs
    pow.o(i.__hardfp_pow) refers to dflti.o(.text) for __aeabi_i2d
    pow.o(i.__hardfp_pow) refers to dunder.o(i.__mathlib_dbl_invalid) for __mathlib_dbl_invalid
    pow.o(i.__hardfp_pow) refers to dmul.o(.text) for __aeabi_dmul
    pow.o(i.__hardfp_pow) refers to dunder.o(i.__mathlib_dbl_underflow) for __mathlib_dbl_underflow
    pow.o(i.__hardfp_pow) refers to dadd.o(.text) for __aeabi_dsub
    pow.o(i.__hardfp_pow) refers to qnan.o(.constdata) for __mathlib_zero
    pow.o(i.__hardfp_pow) refers to poly.o(i.__kernel_poly) for __kernel_poly
    pow.o(i.__hardfp_pow) refers to pow.o(.constdata) for .constdata
    pow.o(i.__hardfp_pow) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    pow.o(i.__hardfp_pow) refers to dscalb.o(.text) for __ARM_scalbn
    pow.o(i.__hardfp_pow) refers to fpclassify.o(i.__ARM_fpclassify) for __ARM_fpclassify
    pow.o(i.__softfp_pow) refers (Special) to iusefp.o(.text) for __I$use$fp
    pow.o(i.__softfp_pow) refers to pow.o(i.__hardfp_pow) for __hardfp_pow
    pow.o(i.pow) refers (Special) to iusefp.o(.text) for __I$use$fp
    pow.o(i.pow) refers to pow.o(i.__hardfp_pow) for __hardfp_pow
    pow.o(.constdata) refers (Special) to iusefp.o(.text) for __I$use$fp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry4.o(.ARM.Collect$$$$00000003) for _main_stk
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    malloc2.o(i.__free$2region) refers to mvars.o(.data) for __microlib_freelist
    malloc2.o(i.__malloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    malloc2.o(i.__malloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.__free$realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.__malloc$realloc$2region) refers to mallocr2.o(i.internal_alloc) for internal_alloc
    mallocr2.o(i.__malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    mallocr2.o(i.__malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.__realloc$2region) refers to mallocr2.o(i.__free$realloc$2region) for __free$realloc$2region
    mallocr2.o(i.__realloc$2region) refers to mallocr2.o(i.internal_alloc) for internal_alloc
    mallocr2.o(i.__realloc$2region) refers to mallocr2.o(i.__malloc$realloc$2region) for __malloc$realloc$2region
    mallocr2.o(i.__realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocr2.o(i.internal_alloc) refers to memcpy.o(.text) for __aeabi_memcpy
    mallocr2.o(i.internal_alloc) refers to mvars.o(.data) for __microlib_freelist
    malloca2.o(i.__aligned_malloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    malloca2.o(i.__aligned_malloc$2region) refers to mvars.o(.data) for __microlib_freelist
    malloca2.o(i.__free$memalign$2region) refers to mvars.o(.data) for __microlib_freelist
    malloca2.o(i.__malloc$memalign$2region) refers to malloca2.o(i.__aligned_malloc$2region) for __aligned_malloc$2region
    mallocra2.o(i.__aligned_malloc$realloc$2region) refers to mallocra2.o(i.internal_alloc) for internal_alloc
    mallocra2.o(i.__aligned_malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist_initialised
    mallocra2.o(i.__aligned_malloc$realloc$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocra2.o(i.__free$realloc$memalign$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocra2.o(i.__malloc$realloc$memalign$2region) refers to mallocra2.o(i.__aligned_malloc$realloc$2region) for __aligned_malloc$realloc$2region
    mallocra2.o(i.__realloc$memalign$2region) refers to mallocra2.o(i.__free$realloc$memalign$2region) for __free$realloc$memalign$2region
    mallocra2.o(i.__realloc$memalign$2region) refers to mallocra2.o(i.internal_alloc) for internal_alloc
    mallocra2.o(i.__realloc$memalign$2region) refers to mallocra2.o(i.__malloc$realloc$memalign$2region) for __malloc$realloc$memalign$2region
    mallocra2.o(i.__realloc$memalign$2region) refers to mvars.o(.data) for __microlib_freelist
    mallocra2.o(i.internal_alloc) refers to memcpy.o(.text) for __aeabi_memcpy
    mallocra2.o(i.internal_alloc) refers to mvars.o(.data) for __microlib_freelist
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dcmplt.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dcmpgt.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dcmpeq.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dflti.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dflti.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfltui.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfltl.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfltl.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfixi.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixi.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixl.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixl.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixl.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    f2d.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    d2f.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    d2f.o(.text) refers to fepilogue.o(.text) for _float_round
    dunder.o(i.__mathlib_dbl_divzero) refers to ddiv.o(.text) for __aeabi_ddiv
    dunder.o(i.__mathlib_dbl_infnan) refers to dadd.o(.text) for __aeabi_dadd
    dunder.o(i.__mathlib_dbl_infnan2) refers to dadd.o(.text) for __aeabi_dadd
    dunder.o(i.__mathlib_dbl_invalid) refers to ddiv.o(.text) for __aeabi_ddiv
    dunder.o(i.__mathlib_dbl_overflow) refers to dmul.o(.text) for __aeabi_dmul
    dunder.o(i.__mathlib_dbl_posinfnan) refers to dmul.o(.text) for __aeabi_dmul
    dunder.o(i.__mathlib_dbl_underflow) refers to dmul.o(.text) for __aeabi_dmul
    fabs.o(i.__hardfp_fabs) refers (Special) to iusefp.o(.text) for __I$use$fp
    fabs.o(i.__softfp_fabs) refers (Special) to iusefp.o(.text) for __I$use$fp
    fabs.o(i.fabs) refers (Special) to iusefp.o(.text) for __I$use$fp
    fpclassify.o(i.__ARM_fpclassify) refers (Special) to iusefp.o(.text) for __I$use$fp
    poly.o(i.__kernel_poly) refers (Special) to iusefp.o(.text) for __I$use$fp
    poly.o(i.__kernel_poly) refers to dmul.o(.text) for __aeabi_dmul
    poly.o(i.__kernel_poly) refers to dadd.o(.text) for __aeabi_dadd
    qnan.o(.constdata) refers (Special) to iusefp.o(.text) for __I$use$fp
    sqrt.o(i.__hardfp_sqrt) refers (Special) to iusefp.o(.text) for __I$use$fp
    sqrt.o(i.__hardfp_sqrt) refers to dsqrt.o(.text) for _dsqrt
    sqrt.o(i.__hardfp_sqrt) refers to errno.o(i.__set_errno) for __set_errno
    sqrt.o(i.__softfp_sqrt) refers (Special) to iusefp.o(.text) for __I$use$fp
    sqrt.o(i.__softfp_sqrt) refers to dsqrt.o(.text) for _dsqrt
    sqrt.o(i.__softfp_sqrt) refers to errno.o(i.__set_errno) for __set_errno
    sqrt.o(i.sqrt) refers (Special) to iusefp.o(.text) for __I$use$fp
    sqrt.o(i.sqrt) refers to dsqrt.o(.text) for _dsqrt
    sqrt.o(i.sqrt) refers to errno.o(i.__set_errno) for __set_errno
    entry4.o(.ARM.Collect$$$$00000003) refers to entry4.o(.ARM.Collect$$$$00002714) for __lit__00000000
    entry4.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    fputc.o(i.fputc) refers (Special) to iusesemip.o(.text) for __I$use$semihosting$fputc
    fputc.o(i.fputc) refers (Special) to semi.o(.text) for __semihosting_library_function
    fputc_h.o(i._fputc$hlt) refers (Special) to iusesemip.o(.text) for __I$use$semihosting$fputc
    fputc_h.o(i._fputc$hlt) refers (Special) to semi.o(.text) for __semihosting_library_function
    errno.o(i.__aeabi_errno_addr) refers to errno.o(.data) for .data
    errno.o(i.__read_errno) refers to errno.o(.data) for .data
    errno.o(i.__set_errno) refers to errno.o(.data) for .data
    fepilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dneg.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dscalb.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    cdrcmple.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    dsqrt.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dsqrt.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dsqrt.o(.text) refers to depilogue.o(.text) for _double_round


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.text), (0 bytes).
    Removing main.o(.text.printstr), (60 bytes).
    Removing main.o(.ARM.exidx.text.printstr), (8 bytes).
    Removing main.o(.text.printchar), (68 bytes).
    Removing main.o(.ARM.exidx.text.printchar), (8 bytes).
    Removing main.o(.ARM.exidx.text.readnumber), (8 bytes).
    Removing main.o(.ARM.exidx.text.producer_thread), (8 bytes).
    Removing main.o(.ARM.exidx.text.consumer_thread), (8 bytes).
    Removing main.o(.ARM.exidx.text.PORTC_IRQHandler), (8 bytes).
    Removing main.o(.ARM.exidx.text.PORTA_IRQHandler), (8 bytes).
    Removing main.o(.ARM.exidx.text.SW2_status), (8 bytes).
    Removing main.o(.ARM.exidx.text.SW3_status), (8 bytes).
    Removing main.o(.ARM.exidx.text.LEDs_switcher), (8 bytes).
    Removing main.o(.ARM.exidx.text.ADC1_callback), (8 bytes).
    Removing main.o(.ARM.exidx.text.ADC1_Thread6), (8 bytes).
    Removing main.o(.ARM.exidx.text.ADC2_Thread7), (8 bytes).
    Removing main.o(.ARM.exidx.text.app_main), (8 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.bss.memblock_sampleperiod), (4 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing elec422.o(.text), (0 bytes).
    Removing elec422.o(.ARM.exidx.text.elec422_startup), (8 bytes).
    Removing elec422.o(.ARM.exidx.text.LED_Off), (8 bytes).
    Removing elec422.o(.ARM.exidx.text.LED_On), (8 bytes).
    Removing elec422.o(.text.LED_Toggle), (64 bytes).
    Removing elec422.o(.ARM.exidx.text.LED_Toggle), (8 bytes).
    Removing elec422.o(.text.delay), (2 bytes).
    Removing elec422.o(.ARM.exidx.text.delay), (8 bytes).
    Removing pin_mux.o(.text), (0 bytes).
    Removing pin_mux.o(.ARM.exidx.text.BOARD_InitPins), (8 bytes).
    Removing board.o(.text), (0 bytes).
    Removing board.o(.ARM.exidx.text.BOARD_InitDebugConsole), (8 bytes).
    Removing clock_config.o(.text), (0 bytes).
    Removing clock_config.o(.text.BOARD_BootClockVLPR), (88 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_BootClockVLPR), (8 bytes).
    Removing clock_config.o(.ARM.exidx.text.BOARD_BootClockRUN), (8 bytes).
    Removing clock_config.o(.rodata.g_defaultClockConfigVlpr), (60 bytes).
    Removing rtx_lib.o(.text), (0 bytes).
    Removing rtx_lib.o(.rodata.irqRtxLibRef), (4 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (52 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (14 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (24 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing rtx_config.o(.text), (0 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxIdleThread), (8 bytes).
    Removing rtx_config.o(.ARM.exidx.text.osRtxErrorNotify), (8 bytes).
    Removing fsl_component_generic_list.o(.text), (0 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_Init), (12 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_Init), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetList), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetList), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_AddTail), (68 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddTail), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_AddHead), (60 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddHead), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_RemoveHead), (58 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveHead), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetHead), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetHead), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetNext), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetNext), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetPrev), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetPrev), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_RemoveElement), (76 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_RemoveElement), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_AddPrevElement), (94 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_AddPrevElement), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetSize), (4 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetSize), (8 bytes).
    Removing fsl_component_generic_list.o(.text.LIST_GetAvailableSize), (8 bytes).
    Removing fsl_component_generic_list.o(.ARM.exidx.text.LIST_GetAvailableSize), (8 bytes).
    Removing fsl_adapter_uart.o(.text), (0 bytes).
    Removing fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartInit), (8 bytes).
    Removing fsl_adapter_uart.o(.text.HAL_UartDeinit), (50 bytes).
    Removing fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartDeinit), (8 bytes).
    Removing fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartReceiveBlocking), (8 bytes).
    Removing fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartSendBlocking), (8 bytes).
    Removing fsl_adapter_uart.o(.text.HAL_UartEnterLowpower), (32 bytes).
    Removing fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartEnterLowpower), (8 bytes).
    Removing fsl_adapter_uart.o(.text.HAL_UartExitLowpower), (32 bytes).
    Removing fsl_adapter_uart.o(.ARM.exidx.text.HAL_UartExitLowpower), (8 bytes).
    Removing fsl_adc16.o(.text), (0 bytes).
    Removing fsl_adc16.o(.ARM.exidx.text.ADC16_Init), (8 bytes).
    Removing fsl_adc16.o(.text.ADC16_SetHardwareAverage), (22 bytes).
    Removing fsl_adc16.o(.ARM.exidx.text.ADC16_SetHardwareAverage), (8 bytes).
    Removing fsl_adc16.o(.text.ADC16_Deinit), (90 bytes).
    Removing fsl_adc16.o(.ARM.exidx.text.ADC16_Deinit), (8 bytes).
    Removing fsl_adc16.o(.ARM.exidx.text.ADC16_GetDefaultConfig), (8 bytes).
    Removing fsl_adc16.o(.ARM.exidx.text.ADC16_DoAutoCalibration), (8 bytes).
    Removing fsl_adc16.o(.ARM.exidx.text.ADC16_GetChannelStatusFlags), (8 bytes).
    Removing fsl_adc16.o(.text.ADC16_GetStatusFlags), (16 bytes).
    Removing fsl_adc16.o(.ARM.exidx.text.ADC16_GetStatusFlags), (8 bytes).
    Removing fsl_adc16.o(.text.ADC16_SetChannelMuxMode), (16 bytes).
    Removing fsl_adc16.o(.ARM.exidx.text.ADC16_SetChannelMuxMode), (8 bytes).
    Removing fsl_adc16.o(.text.ADC16_SetHardwareCompareConfig), (92 bytes).
    Removing fsl_adc16.o(.ARM.exidx.text.ADC16_SetHardwareCompareConfig), (8 bytes).
    Removing fsl_adc16.o(.text.ADC16_ClearStatusFlags), (16 bytes).
    Removing fsl_adc16.o(.ARM.exidx.text.ADC16_ClearStatusFlags), (8 bytes).
    Removing fsl_adc16.o(.ARM.exidx.text.ADC16_SetChannelConfig), (8 bytes).
    Removing fsl_clock.o(.text), (0 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetOsc0ErClkFreq), (64 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetOsc0ErClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetEr32kClkFreq), (150 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetEr32kClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetPllFllSelClkFreq), (112 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPllFllSelClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetFllFreq), (70 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFllFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPll0Freq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetPlatClkFreq), (28 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetPlatClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetOutClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetFlashClkFreq), (28 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFlashClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetFlexBusClkFreq), (28 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFlexBusClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetBusClkFreq), (28 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetBusClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetCoreSysClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetFreq), (498 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetFixedFreqClkFreq), (26 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFixedFreqClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetInternalRefClkFreq), (58 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetInternalRefClkFreq), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetSimConfig), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnableUsbfs0Clock), (168 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnableUsbfs0Clock), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetFllRefClkFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetExternalRefClkConfig), (58 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetExternalRefClkConfig), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetInternalRefClkConfig), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_CalcPllDiv), (238 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_CalcPllDiv), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_EnablePll0), (80 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_EnablePll0), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetOsc0MonitorMode), (58 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetOsc0MonitorMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetRtcOscMonitorMode), (32 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetRtcOscMonitorMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetPll0MonitorMode), (48 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetPll0MonitorMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetStatusFlags), (48 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetStatusFlags), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_ClearStatusFlags), (40 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_ClearStatusFlags), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InitOsc0), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_DeinitOsc0), (30 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_DeinitOsc0), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetSlowIrcFreq), (12 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetSlowIrcFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetFastIrcFreq), (12 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetFastIrcFreq), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_TrimInternalRefClk), (202 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_TrimInternalRefClk), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_GetMode), (90 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_GetMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetFeiMode), (98 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetFeiMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetFeeMode), (144 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetFeeMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetFbiMode), (106 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetFbiMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetFbeMode), (144 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetFbeMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetBlpiMode), (20 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetBlpiMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetBlpeMode), (20 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetBlpeMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetPbeMode), (158 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetPbeMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetPeeMode), (30 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetPeeMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_ExternalModeToFbeModeQuick), (58 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_ExternalModeToFbeModeQuick), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_InternalModeToFbiModeQuick), (42 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_InternalModeToFbiModeQuick), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_BootToFeiMode), (98 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_BootToFeiMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_BootToFeeMode), (196 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_BootToFeeMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_BootToBlpiMode), (182 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_BootToBlpiMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_BootToBlpeMode), (116 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_BootToBlpeMode), (8 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_BootToPeeMode), (8 bytes).
    Removing fsl_clock.o(.text.CLOCK_SetMcgConfig), (1380 bytes).
    Removing fsl_clock.o(.ARM.exidx.text.CLOCK_SetMcgConfig), (8 bytes).
    Removing fsl_clock.o(.rodata.mcgModeMatrix), (256 bytes).
    Removing fsl_common.o(.text), (0 bytes).
    Removing fsl_common.o(.text.SDK_Malloc), (70 bytes).
    Removing fsl_common.o(.ARM.exidx.text.SDK_Malloc), (8 bytes).
    Removing fsl_common.o(.text.SDK_Free), (24 bytes).
    Removing fsl_common.o(.ARM.exidx.text.SDK_Free), (8 bytes).
    Removing fsl_common_arm.o(.text), (0 bytes).
    Removing fsl_common_arm.o(.text.SDK_DelayAtLeastUs), (84 bytes).
    Removing fsl_common_arm.o(.ARM.exidx.text.SDK_DelayAtLeastUs), (8 bytes).
    Removing fsl_common_arm.o(.rodata.str1.1), (86 bytes).
    Removing fsl_ftfx_cache.o(.text), (0 bytes).
    Removing fsl_ftfx_cache.o(.text.FTFx_CACHE_Init), (44 bytes).
    Removing fsl_ftfx_cache.o(.ARM.exidx.text.FTFx_CACHE_Init), (8 bytes).
    Removing fsl_ftfx_cache.o(.text.FTFx_CACHE_ClearCachePrefetchSpeculation), (60 bytes).
    Removing fsl_ftfx_cache.o(.ARM.exidx.text.FTFx_CACHE_ClearCachePrefetchSpeculation), (8 bytes).
    Removing fsl_ftfx_cache.o(.text.fmc_flash_cache_clear), (40 bytes).
    Removing fsl_ftfx_cache.o(.ARM.exidx.text.fmc_flash_cache_clear), (8 bytes).
    Removing fsl_ftfx_cache.o(.text.fmc_flash_prefetch_speculation_clear), (40 bytes).
    Removing fsl_ftfx_cache.o(.ARM.exidx.text.fmc_flash_prefetch_speculation_clear), (8 bytes).
    Removing fsl_ftfx_cache.o(.text.FTFx_CACHE_PflashSetPrefetchSpeculation), (52 bytes).
    Removing fsl_ftfx_cache.o(.ARM.exidx.text.FTFx_CACHE_PflashSetPrefetchSpeculation), (8 bytes).
    Removing fsl_ftfx_cache.o(.text.FTFx_CACHE_PflashGetPrefetchSpeculation), (46 bytes).
    Removing fsl_ftfx_cache.o(.ARM.exidx.text.FTFx_CACHE_PflashGetPrefetchSpeculation), (8 bytes).
    Removing fsl_ftfx_cache.o(.bss.s_ftfxCommonBitOperation), (64 bytes).
    Removing fsl_ftfx_cache.o(.rodata.s_ftfxCommonBitOperationFunctionCode), (28 bytes).
    Removing fsl_ftfx_controller.o(.text), (0 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_API_Init), (82 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_API_Init), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_Erase), (206 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_Erase), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_EraseSectorNonBlocking), (116 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_EraseSectorNonBlocking), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_EraseAll), (94 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_EraseAll), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_EraseAllExecuteOnlySegments), (94 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_EraseAllExecuteOnlySegments), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_Program), (286 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_Program), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramOnce), (248 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_ProgramOnce), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_ProgramSection), (334 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_ProgramSection), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_ReadOnce), (256 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_ReadOnce), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_ReadResource), (348 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_ReadResource), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyErase), (254 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_VerifyErase), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyEraseAll), (84 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_VerifyEraseAll), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyEraseAllExecuteOnlySegments), (84 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_VerifyEraseAllExecuteOnlySegments), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_VerifyProgram), (256 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_VerifyProgram), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_SecurityBypass), (106 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_SecurityBypass), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_REG_GetSecurityState), (68 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_REG_GetSecurityState), (8 bytes).
    Removing fsl_ftfx_controller.o(.text.FTFx_CMD_SwapControl), (168 bytes).
    Removing fsl_ftfx_controller.o(.ARM.exidx.text.FTFx_CMD_SwapControl), (8 bytes).
    Removing fsl_ftfx_controller.o(.bss.s_ftfxRunCommand), (64 bytes).
    Removing fsl_ftfx_controller.o(.rodata.s_ftfxRunCommandFunctionCode), (12 bytes).
    Removing fsl_ftfx_flash.o(.text), (0 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_Init), (118 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_Init), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_Erase), (76 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_Erase), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_EraseSectorNonBlocking), (76 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_EraseSectorNonBlocking), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_EraseAll), (4 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_EraseAll), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_Program), (76 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_Program), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_ProgramOnce), (4 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_ProgramOnce), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_ProgramSection), (76 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_ProgramSection), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_ReadResource), (12 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_ReadResource), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_ReadOnce), (4 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_ReadOnce), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_VerifyErase), (76 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_VerifyErase), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_VerifyEraseAll), (4 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_VerifyEraseAll), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_VerifyProgram), (84 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_VerifyProgram), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_GetSecurityState), (4 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_GetSecurityState), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_SecurityBypass), (4 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_SecurityBypass), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_Swap), (384 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_Swap), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_IsProtected), (276 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_IsProtected), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_PflashSetProtection), (50 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_PflashSetProtection), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_PflashGetProtection), (38 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_PflashGetProtection), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_GetProperty), (122 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_GetProperty), (8 bytes).
    Removing fsl_ftfx_flash.o(.text.FLASH_GetCommandState), (48 bytes).
    Removing fsl_ftfx_flash.o(.ARM.exidx.text.FLASH_GetCommandState), (8 bytes).
    Removing fsl_ftfx_flash.o(.rodata.kPFlashDensities), (30 bytes).
    Removing fsl_ftfx_flexnvm.o(.text), (0 bytes).
    Removing fsl_gpio.o(.text), (0 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PinInit), (8 bytes).
    Removing fsl_gpio.o(.text.GPIO_PortGetInterruptFlags), (66 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PortGetInterruptFlags), (8 bytes).
    Removing fsl_gpio.o(.ARM.exidx.text.GPIO_PortClearInterruptFlags), (8 bytes).
    Removing fsl_smc.o(.text), (0 bytes).
    Removing fsl_smc.o(.text.SMC_PreEnterStopModes), (22 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_PreEnterStopModes), (8 bytes).
    Removing fsl_smc.o(.text.SMC_PostExitStopModes), (20 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_PostExitStopModes), (8 bytes).
    Removing fsl_smc.o(.text.SMC_PreEnterWaitModes), (22 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_PreEnterWaitModes), (8 bytes).
    Removing fsl_smc.o(.text.SMC_PostExitWaitModes), (20 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_PostExitWaitModes), (8 bytes).
    Removing fsl_smc.o(.text.SMC_SetPowerModeRun), (14 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeRun), (8 bytes).
    Removing fsl_smc.o(.text.SMC_SetPowerModeWait), (30 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeWait), (8 bytes).
    Removing fsl_smc.o(.text.SMC_SetPowerModeStop), (56 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeStop), (8 bytes).
    Removing fsl_smc.o(.text.SMC_SetPowerModeVlpr), (26 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeVlpr), (8 bytes).
    Removing fsl_smc.o(.text.SMC_SetPowerModeVlpw), (30 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeVlpw), (8 bytes).
    Removing fsl_smc.o(.text.SMC_SetPowerModeVlps), (58 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeVlps), (8 bytes).
    Removing fsl_smc.o(.text.SMC_SetPowerModeLls), (58 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeLls), (8 bytes).
    Removing fsl_smc.o(.text.SMC_SetPowerModeVlls), (92 bytes).
    Removing fsl_smc.o(.ARM.exidx.text.SMC_SetPowerModeVlls), (8 bytes).
    Removing fsl_smc.o(.bss.g_savedPrimask), (4 bytes).
    Removing fsl_smc.o(.data.s_stopRamFuncArray), (24 bytes).
    Removing fsl_uart.o(.text), (0 bytes).
    Removing fsl_uart.o(.text.UART_GetInstance), (50 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_GetInstance), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferGetRxRingBufferLength), (40 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferGetRxRingBufferLength), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_Init), (8 bytes).
    Removing fsl_uart.o(.text.UART_Deinit), (106 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_Deinit), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_GetDefaultConfig), (8 bytes).
    Removing fsl_uart.o(.text.UART_SetBaudRate), (148 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_SetBaudRate), (8 bytes).
    Removing fsl_uart.o(.text.UART_Enable9bitMode), (48 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_Enable9bitMode), (8 bytes).
    Removing fsl_uart.o(.text.UART_SendAddress), (46 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_SendAddress), (8 bytes).
    Removing fsl_uart.o(.text.UART_EnableInterrupts), (44 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_EnableInterrupts), (8 bytes).
    Removing fsl_uart.o(.text.UART_DisableInterrupts), (50 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_DisableInterrupts), (8 bytes).
    Removing fsl_uart.o(.text.UART_GetEnabledInterrupts), (32 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_GetEnabledInterrupts), (8 bytes).
    Removing fsl_uart.o(.text.UART_GetStatusFlags), (22 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_GetStatusFlags), (8 bytes).
    Removing fsl_uart.o(.text.UART_ClearStatusFlags), (68 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_ClearStatusFlags), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_WriteBlocking), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_ReadBlocking), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferCreateHandle), (182 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferCreateHandle), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferHandleIRQ), (1108 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferHandleIRQ), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferStartRingBuffer), (120 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferStartRingBuffer), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferStopRingBuffer), (86 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferStopRingBuffer), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferSendNonBlocking), (188 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferSendNonBlocking), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferAbortSend), (54 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferAbortSend), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferGetSendCount), (80 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferGetSendCount), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferReceiveNonBlocking), (404 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferReceiveNonBlocking), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferAbortReceive), (82 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferAbortReceive), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferGetReceiveCount), (76 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferGetReceiveCount), (8 bytes).
    Removing fsl_uart.o(.text.UART_EnableTxFIFO), (66 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_EnableTxFIFO), (8 bytes).
    Removing fsl_uart.o(.text.UART_EnableRxFIFO), (62 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_EnableRxFIFO), (8 bytes).
    Removing fsl_uart.o(.text.UART_TransferHandleErrorIRQ), (2 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART_TransferHandleErrorIRQ), (8 bytes).
    Removing fsl_uart.o(.text.UART0_DriverIRQHandler), (38 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART0_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART0_RX_TX_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.text.UART1_DriverIRQHandler), (38 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART1_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART1_RX_TX_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.text.UART2_DriverIRQHandler), (38 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART2_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART2_RX_TX_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.text.UART3_DriverIRQHandler), (38 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART3_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART3_RX_TX_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.text.UART4_DriverIRQHandler), (38 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART4_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART4_RX_TX_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.text.UART5_DriverIRQHandler), (38 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART5_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.ARM.exidx.text.UART5_RX_TX_DriverIRQHandler), (8 bytes).
    Removing fsl_uart.o(.rodata.s_uartIRQ), (24 bytes).
    Removing system_mk64f12.o(.text), (0 bytes).
    Removing system_mk64f12.o(.ARM.exidx.text.SystemInit), (8 bytes).
    Removing system_mk64f12.o(.ARM.exidx.text.SystemInitHook), (8 bytes).
    Removing system_mk64f12.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing fsl_assert.o(.text), (0 bytes).
    Removing fsl_assert.o(.ARM.exidx.text.__aeabi_assert), (8 bytes).
    Removing fsl_debug_console.o(.text), (0 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Init), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Deinit), (28 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Deinit), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Printf), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Vprintf), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Putchar), (42 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Putchar), (8 bytes).
    Removing fsl_debug_console.o(.text.DbgConsole_Scanf), (936 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Scanf), (8 bytes).
    Removing fsl_debug_console.o(.ARM.exidx.text.DbgConsole_Getchar), (8 bytes).
    Removing irq_armv7m.o(.rodata), (1 bytes).
    Removing irq_armv7m.o(.ARM.exidx), (24 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelBeforeInit), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osRtxKernelErrorNotify), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (84 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelProtect), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelProtect), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelDestroyClass), (60 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelDestroyClass), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelDestroyClass), (6 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelDestroyClass), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (64 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.GetKernelSleepTime), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.GetKernelSleepTime), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (124 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelProtect), (6 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelProtect), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (48 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (16 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (108 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueueTimerSetup), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (48 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (16 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (166 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (108 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRestore), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (48 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (16 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexDelete), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (20 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexDelete), (180 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadJoinWakeup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDestroy), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBeforeFree), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.IsIrqMasked), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (48 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetClass), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetClass), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetClass), (4 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetClass), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetZone), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetZone), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetZone), (4 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetZone), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadYield), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFeedWatchdog), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFeedWatchdog), (8 bytes).
    Removing rtx_thread.o(.text.osThreadProtectPrivileged), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadProtectPrivileged), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspendClass), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspendClass), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspendClass), (4 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspendClass), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResumeClass), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResumeClass), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResumeClass), (4 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResumeClass), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminateZone), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminateZone), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetAffinityMask), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetAffinityMask), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetAffinityMask), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetAffinityMask), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (40 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEntry), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (16 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (60 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (24 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadYield), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (112 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (44 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (84 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFeedWatchdog), (4 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFeedWatchdog), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadProtectPrivileged), (4 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadProtectPrivileged), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetAffinityMask), (4 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetAffinityMask), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetAffinityMask), (4 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetAffinityMask), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (52 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (48 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_0), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_1), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_1), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_2), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_3), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_3), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_4), (8 bytes).
    Removing rtx_thread.o(.text.OUTLINED_FUNCTION_5), (6 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_5), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.OUTLINED_FUNCTION_6), (8 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerSetup), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (48 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (16 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (76 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing dneg.o(.text), (6 bytes).

759 unused section(s) (total 24755 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/division.s                       0x00000000   Number         0  aeabi_sdiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uidiv.o ABSOLUTE
    ../clib/microlib/errno.c                 0x00000000   Number         0  errno.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry4.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  malloc2.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  mallocr2.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  malloca2.o ABSOLUTE
    ../clib/microlib/malloc/malloc.c         0x00000000   Number         0  mallocra2.o ABSOLUTE
    ../clib/microlib/malloc/mvars.c          0x00000000   Number         0  mvars.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfb.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf0.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf1.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf2.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf3.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf4.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf5.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf6.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf7.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printf8.o ABSOLUTE
    ../clib/microlib/printf/printf.c         0x00000000   Number         0  printfa.o ABSOLUTE
    ../clib/microlib/printf/stubs.s          0x00000000   Number         0  printfstubs.o ABSOLUTE
    ../clib/microlib/stdio/fputc.c           0x00000000   Number         0  fputc.o ABSOLUTE
    ../clib/microlib/stdio/fputc.c           0x00000000   Number         0  fputc_h.o ABSOLUTE
    ../clib/microlib/stdio/semi.s            0x00000000   Number         0  semi.o ABSOLUTE
    ../clib/microlib/stdio/streams.c         0x00000000   Number         0  stdout.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpy.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyc.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memset.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/string/strcpy.c         0x00000000   Number         0  strcpy.o ABSOLUTE
    ../clib/microlib/string/strlen.c         0x00000000   Number         0  strlen.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusesemip.o ABSOLUTE
    ../fplib/microlib/d2f.c                  0x00000000   Number         0  d2f.o ABSOLUTE
    ../fplib/microlib/f2d.c                  0x00000000   Number         0  f2d.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  dcmplt.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  dcmpgt.o ABSOLUTE
    ../fplib/microlib/fpcmp.c                0x00000000   Number         0  dcmpeq.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  fepilogue.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixi.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixl.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixul.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dflti.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dfltui.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dfltl.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    ../fplib/microlib/fpneg.c                0x00000000   Number         0  dneg.o ABSOLUTE
    ../fplib/microlib/fpscalb.c              0x00000000   Number         0  dscalb.o ABSOLUTE
    ../fplib/microlib/fpsqrt.c               0x00000000   Number         0  dsqrt.o ABSOLUTE
    ../mathlib/dunder.c                      0x00000000   Number         0  dunder.o ABSOLUTE
    ../mathlib/fabs.c                        0x00000000   Number         0  fabs.o ABSOLUTE
    ../mathlib/fpclassify.c                  0x00000000   Number         0  fpclassify.o ABSOLUTE
    ../mathlib/modf.c                        0x00000000   Number         0  modf.o ABSOLUTE
    ../mathlib/poly.c                        0x00000000   Number         0  poly.o ABSOLUTE
    ../mathlib/pow.c                         0x00000000   Number         0  pow.o ABSOLUTE
    ../mathlib/qnan.c                        0x00000000   Number         0  qnan.o ABSOLUTE
    ../mathlib/sqrt.c                        0x00000000   Number         0  sqrt.o ABSOLUTE
    ELEC422.C                                0x00000000   Number         0  elec422.o ABSOLUTE
    RTX_Config.c                             0x00000000   Number         0  rtx_config.o ABSOLUTE
    board.c                                  0x00000000   Number         0  board.o ABSOLUTE
    cdrcmple.s                               0x00000000   Number         0  cdrcmple.o ABSOLUTE
    clock_config.c                           0x00000000   Number         0  clock_config.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    fsl_adapter_uart.c                       0x00000000   Number         0  fsl_adapter_uart.o ABSOLUTE
    fsl_adc16.c                              0x00000000   Number         0  fsl_adc16.o ABSOLUTE
    fsl_assert.c                             0x00000000   Number         0  fsl_assert.o ABSOLUTE
    fsl_clock.c                              0x00000000   Number         0  fsl_clock.o ABSOLUTE
    fsl_common.c                             0x00000000   Number         0  fsl_common.o ABSOLUTE
    fsl_common_arm.c                         0x00000000   Number         0  fsl_common_arm.o ABSOLUTE
    fsl_component_generic_list.c             0x00000000   Number         0  fsl_component_generic_list.o ABSOLUTE
    fsl_debug_console.c                      0x00000000   Number         0  fsl_debug_console.o ABSOLUTE
    fsl_ftfx_cache.c                         0x00000000   Number         0  fsl_ftfx_cache.o ABSOLUTE
    fsl_ftfx_controller.c                    0x00000000   Number         0  fsl_ftfx_controller.o ABSOLUTE
    fsl_ftfx_flash.c                         0x00000000   Number         0  fsl_ftfx_flash.o ABSOLUTE
    fsl_ftfx_flexnvm.c                       0x00000000   Number         0  fsl_ftfx_flexnvm.o ABSOLUTE
    fsl_gpio.c                               0x00000000   Number         0  fsl_gpio.o ABSOLUTE
    fsl_smc.c                                0x00000000   Number         0  fsl_smc.o ABSOLUTE
    fsl_uart.c                               0x00000000   Number         0  fsl_uart.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    pin_mux.c                                0x00000000   Number         0  pin_mux.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_lib.c                                0x00000000   Number         0  rtx_lib.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    system_MK64F12.c                         0x00000000   Number         0  system_mk64f12.o ABSOLUTE
    FPU_USED                                 0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    osRtxErrorStackOverflow                  0x00000001   Number         0  irq_armv7m.o ABSOLUTE
    osRtxErrorSVC                            0x00000006   Number         0  irq_armv7m.o ABSOLUTE
    I_T_RUN_OFS                              0x00000014   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SF_OFS                               0x00000022   Number         0  irq_armv7m.o ABSOLUTE
    TCB_SP_OFS                               0x00000038   Number         0  irq_armv7m.o ABSOLUTE
    TCB_ZONE_OFS                             0x00000044   Number         0  irq_armv7m.o ABSOLUTE
    .ARM.Collect$$$$00000000                 0x00000410   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000003                 0x00000410   Section        4  entry4.o(.ARM.Collect$$$$00000003)
    .ARM.Collect$$$$00000004                 0x00000414   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x00000418   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x00000418   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x00000418   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x00000420   Data           4  entry4.o(.ARM.Collect$$$$00002714)
    .ARM.Collect$$$$0000000D                 0x00000420   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x00000420   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002714                 0x00000420   Section        4  entry4.o(.ARM.Collect$$$$00002714)
    [Anonymous Symbol]                       0x00000424   Section        0  startup_mk64f12.o(.text)
    [Anonymous Symbol]                       0x000005ec   Section        0  irq_armv7m.o(.text)
    SVC_Context                              0x00000614   Number         0  irq_armv7m.o(.text)
    SVC_FP_LazyState                         0x00000624   Number         0  irq_armv7m.o(.text)
    SVC_ContextSave                          0x00000636   Number         0  irq_armv7m.o(.text)
    SVC_ContextRestore                       0x0000064c   Number         0  irq_armv7m.o(.text)
    SVC_Exit                                 0x00000666   Number         0  irq_armv7m.o(.text)
    SVC_User                                 0x00000668   Number         0  irq_armv7m.o(.text)
    .text                                    0x000006b0   Section        0  uldiv.o(.text)
    .text                                    0x00000712   Section        0  memcpy.o(.text)
    .text                                    0x0000073a   Section        0  memseta.o(.text)
    .text                                    0x0000075e   Section        0  strlen.o(.text)
    .text                                    0x0000076c   Section        0  strcpy.o(.text)
    .text                                    0x0000077e   Section        0  dadd.o(.text)
    .text                                    0x000008cc   Section        0  dmul.o(.text)
    .text                                    0x000009b0   Section        0  ddiv.o(.text)
    .text                                    0x00000a8e   Section        0  dcmplt.o(.text)
    .text                                    0x00000ac4   Section        0  dcmpgt.o(.text)
    .text                                    0x00000afa   Section        0  dcmpeq.o(.text)
    .text                                    0x00000b32   Section        0  dflti.o(.text)
    .text                                    0x00000b54   Section        0  dfltui.o(.text)
    .text                                    0x00000b6e   Section        0  dfltl.o(.text)
    .text                                    0x00000b96   Section        0  dfixi.o(.text)
    .text                                    0x00000bd4   Section        0  dfixl.o(.text)
    .text                                    0x00000c1e   Section        0  f2d.o(.text)
    .text                                    0x00000c44   Section        0  d2f.o(.text)
    .text                                    0x00000c7c   Section        0  uidiv.o(.text)
    .text                                    0x00000ca8   Section        0  llshl.o(.text)
    .text                                    0x00000cc6   Section        0  llushr.o(.text)
    .text                                    0x00000ce6   Section        0  llsshr.o(.text)
    .text                                    0x00000d0a   Section        0  iusefp.o(.text)
    .text                                    0x00000d0a   Section        0  fepilogue.o(.text)
    .text                                    0x00000d78   Section        0  depilogue.o(.text)
    .text                                    0x00000e32   Section        0  dscalb.o(.text)
    .text                                    0x00000e60   Section        0  dfixul.o(.text)
    .text                                    0x00000e90   Section       48  cdrcmple.o(.text)
    .text                                    0x00000ec0   Section       48  init.o(.text)
    .text                                    0x00000ef0   Section        0  dsqrt.o(.text)
    [Anonymous Symbol]                       0x00000f94   Section        0  fsl_adc16.o(.text.ADC16_DoAutoCalibration)
    [Anonymous Symbol]                       0x00001020   Section        0  fsl_adc16.o(.text.ADC16_GetChannelStatusFlags)
    [Anonymous Symbol]                       0x00001048   Section        0  fsl_adc16.o(.text.ADC16_GetDefaultConfig)
    [Anonymous Symbol]                       0x00001088   Section        0  fsl_adc16.o(.text.ADC16_Init)
    [Anonymous Symbol]                       0x00001178   Section        0  fsl_adc16.o(.text.ADC16_SetChannelConfig)
    [Anonymous Symbol]                       0x000011d4   Section        0  main.o(.text.ADC1_Thread6)
    [Anonymous Symbol]                       0x00001230   Section        0  main.o(.text.ADC1_callback)
    [Anonymous Symbol]                       0x00001348   Section        0  main.o(.text.ADC2_Thread7)
    [Anonymous Symbol]                       0x00001434   Section        0  clock_config.o(.text.BOARD_BootClockRUN)
    [Anonymous Symbol]                       0x00001498   Section        0  board.o(.text.BOARD_InitDebugConsole)
    [Anonymous Symbol]                       0x000014b0   Section        0  pin_mux.o(.text.BOARD_InitPins)
    [Anonymous Symbol]                       0x00001530   Section        0  fsl_clock.o(.text.CLOCK_BootToPeeMode)
    [Anonymous Symbol]                       0x00001614   Section        0  fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq)
    CLOCK_GetFllRefClkFreq                   0x00001631   Thumb Code   220  fsl_clock.o(.text.CLOCK_GetFllRefClkFreq)
    [Anonymous Symbol]                       0x00001630   Section        0  fsl_clock.o(.text.CLOCK_GetFllRefClkFreq)
    [Anonymous Symbol]                       0x0000170c   Section        0  fsl_clock.o(.text.CLOCK_GetOutClkFreq)
    [Anonymous Symbol]                       0x00001800   Section        0  fsl_clock.o(.text.CLOCK_GetPll0Freq)
    [Anonymous Symbol]                       0x000018b4   Section        0  fsl_clock.o(.text.CLOCK_InitOsc0)
    [Anonymous Symbol]                       0x0000192c   Section        0  fsl_clock.o(.text.CLOCK_SetInternalRefClkConfig)
    [Anonymous Symbol]                       0x000019c4   Section        0  fsl_clock.o(.text.CLOCK_SetSimConfig)
    [Anonymous Symbol]                       0x000019f0   Section        0  fsl_debug_console.o(.text.DbgConsole_Getchar)
    [Anonymous Symbol]                       0x00001a24   Section        0  fsl_debug_console.o(.text.DbgConsole_Init)
    [Anonymous Symbol]                       0x00001a70   Section        0  fsl_debug_console.o(.text.DbgConsole_Printf)
    [Anonymous Symbol]                       0x00001a90   Section        0  fsl_debug_console.o(.text.DbgConsole_Vprintf)
    [Anonymous Symbol]                       0x00002168   Section        0  fsl_gpio.o(.text.GPIO_PinInit)
    [Anonymous Symbol]                       0x000021b8   Section        0  fsl_gpio.o(.text.GPIO_PortClearInterruptFlags)
    [Anonymous Symbol]                       0x000021fc   Section        0  fsl_adapter_uart.o(.text.HAL_UartInit)
    [Anonymous Symbol]                       0x000022e4   Section        0  fsl_adapter_uart.o(.text.HAL_UartReceiveBlocking)
    [Anonymous Symbol]                       0x00002350   Section        0  fsl_adapter_uart.o(.text.HAL_UartSendBlocking)
    IsIrqMasked                              0x000023b7   Thumb Code    22  rtx_thread.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x000023b6   Section        0  rtx_thread.o(.text.IsIrqMasked)
    [Anonymous Symbol]                       0x000023cc   Section        0  elec422.o(.text.LED_Off)
    [Anonymous Symbol]                       0x0000240c   Section        0  elec422.o(.text.LED_On)
    [Anonymous Symbol]                       0x0000244c   Section        0  main.o(.text.LEDs_switcher)
    MessageQueueGet                          0x000024bb   Thumb Code    64  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x000024ba   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueuePut                          0x000024fb   Thumb Code    88  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x000024fa   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueueRemove                       0x00002553   Thumb Code    28  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x00002552   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x00002570   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x0000257c   Section        0  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x000025b0   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    [Anonymous Symbol]                       0x000025b8   Section        0  os_systick.o(.text.OS_Tick_Setup)
    OUTLINED_FUNCTION_0                      0x00002601   Thumb Code    12  rtx_kernel.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x00002600   Section        0  rtx_kernel.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_0                      0x0000260d   Thumb Code    12  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x0000260c   Section        0  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_0                      0x00002619   Thumb Code    16  rtx_thread.o(.text.OUTLINED_FUNCTION_0)
    [Anonymous Symbol]                       0x00002618   Section        0  rtx_thread.o(.text.OUTLINED_FUNCTION_0)
    OUTLINED_FUNCTION_1                      0x00002629   Thumb Code     6  rtx_kernel.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x00002628   Section        0  rtx_kernel.o(.text.OUTLINED_FUNCTION_1)
    OUTLINED_FUNCTION_1                      0x0000262f   Thumb Code     6  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1)
    [Anonymous Symbol]                       0x0000262e   Section        0  rtx_msgqueue.o(.text.OUTLINED_FUNCTION_1)
    OUTLINED_FUNCTION_2                      0x00002635   Thumb Code     6  rtx_thread.o(.text.OUTLINED_FUNCTION_2)
    [Anonymous Symbol]                       0x00002634   Section        0  rtx_thread.o(.text.OUTLINED_FUNCTION_2)
    OUTLINED_FUNCTION_4                      0x0000263b   Thumb Code    20  rtx_thread.o(.text.OUTLINED_FUNCTION_4)
    [Anonymous Symbol]                       0x0000263a   Section        0  rtx_thread.o(.text.OUTLINED_FUNCTION_4)
    OUTLINED_FUNCTION_6                      0x0000264f   Thumb Code     8  rtx_thread.o(.text.OUTLINED_FUNCTION_6)
    [Anonymous Symbol]                       0x0000264e   Section        0  rtx_thread.o(.text.OUTLINED_FUNCTION_6)
    [Anonymous Symbol]                       0x00002658   Section        0  main.o(.text.PORTA_IRQHandler)
    [Anonymous Symbol]                       0x00002688   Section        0  main.o(.text.PORTC_IRQHandler)
    [Anonymous Symbol]                       0x000026b8   Section        0  main.o(.text.SW2_status)
    [Anonymous Symbol]                       0x00002740   Section        0  main.o(.text.SW3_status)
    [Anonymous Symbol]                       0x000027c8   Section        0  system_mk64f12.o(.text.SystemCoreClockUpdate)
    [Anonymous Symbol]                       0x00002930   Section        0  system_mk64f12.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00002960   Section        0  system_mk64f12.o(.text.SystemInitHook)
    ThreadFlagsCheck                         0x00002963   Thumb Code   100  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x00002962   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    TimerInsert                              0x000029c9   Thumb Code    68  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x000029c8   Section        0  rtx_timer.o(.text.TimerInsert)
    TimerRemove                              0x00002a0d   Thumb Code    36  rtx_timer.o(.text.TimerRemove)
    [Anonymous Symbol]                       0x00002a0c   Section        0  rtx_timer.o(.text.TimerRemove)
    __arm_cp.13_0                            0x00002a30   Number         4  rtx_timer.o(.text.TimerRemove)
    [Anonymous Symbol]                       0x00002a34   Section        0  fsl_uart.o(.text.UART0_RX_TX_DriverIRQHandler)
    [Anonymous Symbol]                       0x00002a60   Section        0  fsl_uart.o(.text.UART1_RX_TX_DriverIRQHandler)
    [Anonymous Symbol]                       0x00002a8c   Section        0  fsl_uart.o(.text.UART2_RX_TX_DriverIRQHandler)
    [Anonymous Symbol]                       0x00002ab8   Section        0  fsl_uart.o(.text.UART3_RX_TX_DriverIRQHandler)
    [Anonymous Symbol]                       0x00002ae4   Section        0  fsl_uart.o(.text.UART4_RX_TX_DriverIRQHandler)
    [Anonymous Symbol]                       0x00002b10   Section        0  fsl_uart.o(.text.UART5_RX_TX_DriverIRQHandler)
    [Anonymous Symbol]                       0x00002b3c   Section        0  fsl_uart.o(.text.UART_GetDefaultConfig)
    [Anonymous Symbol]                       0x00002b7c   Section        0  fsl_uart.o(.text.UART_Init)
    [Anonymous Symbol]                       0x00002d8c   Section        0  fsl_uart.o(.text.UART_ReadBlocking)
    [Anonymous Symbol]                       0x00002ecc   Section        0  fsl_uart.o(.text.UART_WriteBlocking)
    [Anonymous Symbol]                       0x00002ef0   Section        0  fsl_assert.o(.text.__aeabi_assert)
    [Anonymous Symbol]                       0x00002f2c   Section        0  main.o(.text.app_main)
    [Anonymous Symbol]                       0x00003060   Section        0  main.o(.text.consumer_thread)
    [Anonymous Symbol]                       0x0000309c   Section        0  elec422.o(.text.elec422_startup)
    [Anonymous Symbol]                       0x000031d0   Section        0  main.o(.text.main)
    [Anonymous Symbol]                       0x00003214   Section        0  rtx_kernel.o(.text.osKernelGetState)
    __arm_cp.5_0                             0x0000323c   Number         4  rtx_kernel.o(.text.osKernelGetState)
    [Anonymous Symbol]                       0x00003240   Section        0  rtx_kernel.o(.text.osKernelGetTickCount)
    __arm_cp.17_0                            0x00003260   Number         4  rtx_kernel.o(.text.osKernelGetTickCount)
    __arm_cp.17_1                            0x00003264   Number         4  rtx_kernel.o(.text.osKernelGetTickCount)
    [Anonymous Symbol]                       0x00003268   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.2_0                             0x00003290   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x00003294   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.7_0                             0x000032b4   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x000032b8   Section        0  rtx_mempool.o(.text.osMemoryPoolAlloc)
    __arm_cp.6_0                             0x0000331c   Number         4  rtx_mempool.o(.text.osMemoryPoolAlloc)
    [Anonymous Symbol]                       0x00003320   Section        0  rtx_mempool.o(.text.osMemoryPoolFree)
    __arm_cp.7_0                             0x00003364   Number         4  rtx_mempool.o(.text.osMemoryPoolFree)
    [Anonymous Symbol]                       0x00003368   Section        0  rtx_mempool.o(.text.osMemoryPoolNew)
    __arm_cp.3_0                             0x00003388   Number         4  rtx_mempool.o(.text.osMemoryPoolNew)
    [Anonymous Symbol]                       0x0000338c   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.6_0                             0x000033f8   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x000033fc   Section        0  rtx_msgqueue.o(.text.osMessageQueueNew)
    __arm_cp.2_0                             0x0000341c   Number         4  rtx_msgqueue.o(.text.osMessageQueueNew)
    [Anonymous Symbol]                       0x00003420   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.5_0                             0x0000349c   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x000034a0   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.5_0                             0x000034c0   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x000034c4   Section        0  rtx_mutex.o(.text.osMutexNew)
    __arm_cp.2_0                             0x000034e4   Number         4  rtx_mutex.o(.text.osMutexNew)
    [Anonymous Symbol]                       0x000034e8   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.6_0                             0x00003508   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x0000350c   Section        0  rtx_config.o(.text.osRtxErrorNotify)
    [Anonymous Symbol]                       0x00003510   Section        0  rtx_config.o(.text.osRtxIdleThread)
    [Anonymous Symbol]                       0x00003512   Section        0  rtx_kernel.o(.text.osRtxKernelBeforeInit)
    [Anonymous Symbol]                       0x00003514   Section        0  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    [Anonymous Symbol]                       0x00003518   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x00003586   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x000035c8   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x000035fe   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x00003638   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x00003682   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMemoryPoolPostProcess               0x000036bb   Thumb Code    72  rtx_mempool.o(.text.osRtxMemoryPoolPostProcess)
    [Anonymous Symbol]                       0x000036ba   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolPostProcess)
    osRtxMessageQueuePostProcess             0x00003703   Thumb Code   170  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x00003702   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x000037ac   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    __arm_cp.0_0                             0x000037cc   Number         4  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    [Anonymous Symbol]                       0x000037d0   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x00003818   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    [Anonymous Symbol]                       0x00003864   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    __arm_cp.1_0                             0x000038e0   Number         4  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x00003908   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x00003974   Number         4  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x00003978   Section        0  rtx_thread.o(.text.osRtxThreadBeforeFree)
    osRtxThreadBlock                         0x0000397d   Thumb Code    52  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x0000397c   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadDelayInsert                   0x000039b1   Thumb Code   124  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x000039b0   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x00003a2c   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x00003a68   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x00003ab4   Section        0  rtx_thread.o(.text.osRtxThreadDestroy)
    [Anonymous Symbol]                       0x00003ad4   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadFree                          0x00003b29   Thumb Code    84  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x00003b28   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    __arm_cp.16_0                            0x00003b7c   Number         4  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x00003b80   Section        0  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    [Anonymous Symbol]                       0x00003b9e   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x00003bb0   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x00003bdc   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x00003bf0   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadPostProcess                   0x00003c17   Thumb Code    40  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x00003c16   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x00003c40   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x00003c50   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x00003c64   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.18_0                            0x00003c94   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.18_1                            0x00003c98   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x00003c9c   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.8_0                             0x00003cb8   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x00003cbc   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.12_0                            0x00003cf4   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x00003cf8   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x00003d2c   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x00003d9c   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x00003da0   Section        0  rtx_timer.o(.text.osRtxTimerSetup)
    __arm_cp.0_0                             0x00003db8   Number         4  rtx_timer.o(.text.osRtxTimerSetup)
    __arm_cp.0_1                             0x00003dbc   Number         4  rtx_timer.o(.text.osRtxTimerSetup)
    [Anonymous Symbol]                       0x00003dc0   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    osRtxTimerTick                           0x00003de1   Thumb Code   108  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x00003de0   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x00003e4c   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    osThreadEntry                            0x00003e51   Thumb Code     6  rtx_thread.o(.text.osThreadEntry)
    [Anonymous Symbol]                       0x00003e50   Section        0  rtx_thread.o(.text.osThreadEntry)
    [Anonymous Symbol]                       0x00003e58   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.40_0                            0x00003e60   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x00003e64   Section        0  rtx_thread.o(.text.osThreadFlagsSet)
    __arm_cp.53_0                            0x00003ebc   Number         4  rtx_thread.o(.text.osThreadFlagsSet)
    [Anonymous Symbol]                       0x00003ec0   Section        0  rtx_thread.o(.text.osThreadFlagsWait)
    __arm_cp.56_0                            0x00003ee8   Number         4  rtx_thread.o(.text.osThreadFlagsWait)
    [Anonymous Symbol]                       0x00003eec   Section        0  rtx_thread.o(.text.osThreadGetId)
    __arm_cp.28_0                            0x00003f08   Number         4  rtx_thread.o(.text.osThreadGetId)
    __arm_cp.28_1                            0x00003f0c   Number         4  rtx_thread.o(.text.osThreadGetId)
    [Anonymous Symbol]                       0x00003f10   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.20_0                            0x00003f38   Number         4  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x00003f3c   Section        0  rtx_thread.o(.text.osThreadTerminate)
    __arm_cp.41_0                            0x00003f5c   Number         4  rtx_thread.o(.text.osThreadTerminate)
    [Anonymous Symbol]                       0x00003f60   Section        0  rtx_timer.o(.text.osTimerNew)
    __arm_cp.3_0                             0x00003f80   Number         4  rtx_timer.o(.text.osTimerNew)
    [Anonymous Symbol]                       0x00003f84   Section        0  rtx_timer.o(.text.osTimerStart)
    __arm_cp.6_0                             0x00003fa4   Number         4  rtx_timer.o(.text.osTimerStart)
    [Anonymous Symbol]                       0x00003fa8   Section        0  rtx_timer.o(.text.osTimerStop)
    __arm_cp.7_0                             0x00003fc8   Number         4  rtx_timer.o(.text.osTimerStop)
    [Anonymous Symbol]                       0x00003fcc   Section        0  main.o(.text.producer_thread)
    [Anonymous Symbol]                       0x000040cc   Section        0  main.o(.text.readnumber)
    svcRtxKernelGetState                     0x00004205   Thumb Code     8  rtx_kernel.o(.text.svcRtxKernelGetState)
    [Anonymous Symbol]                       0x00004204   Section        0  rtx_kernel.o(.text.svcRtxKernelGetState)
    svcRtxKernelGetTickCount                 0x0000420d   Thumb Code     8  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    [Anonymous Symbol]                       0x0000420c   Section        0  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    __arm_cp.18_0                            0x00004214   Number         4  rtx_kernel.o(.text.svcRtxKernelGetTickCount)
    svcRtxKernelInitialize                   0x00004219   Thumb Code   256  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x00004218   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.25_2                            0x00004318   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelStart                        0x0000431d   Thumb Code   104  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x0000431c   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.26_1                            0x00004384   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.26_2                            0x00004388   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.26_3                            0x0000438c   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxMemoryPoolAlloc                    0x00004391   Thumb Code    88  rtx_mempool.o(.text.svcRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x00004390   Section        0  rtx_mempool.o(.text.svcRtxMemoryPoolAlloc)
    svcRtxMemoryPoolFree                     0x000043e9   Thumb Code   100  rtx_mempool.o(.text.svcRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x000043e8   Section        0  rtx_mempool.o(.text.svcRtxMemoryPoolFree)
    svcRtxMemoryPoolNew                      0x0000444d   Thumb Code   308  rtx_mempool.o(.text.svcRtxMemoryPoolNew)
    [Anonymous Symbol]                       0x0000444c   Section        0  rtx_mempool.o(.text.svcRtxMemoryPoolNew)
    __arm_cp.17_0                            0x00004580   Number         4  rtx_mempool.o(.text.svcRtxMemoryPoolNew)
    __arm_cp.17_1                            0x00004584   Number         4  rtx_mempool.o(.text.svcRtxMemoryPoolNew)
    svcRtxMessageQueueGet                    0x00004589   Thumb Code   200  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x00004588   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.22_0                            0x00004650   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueNew                    0x00004655   Thumb Code   280  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x00004654   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_0                             0x0000476c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.1_1                             0x00004770   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueuePut                    0x00004775   Thumb Code   168  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x00004774   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    __arm_cp.20_0                            0x0000481c   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMutexAcquire                       0x00004821   Thumb Code   140  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x00004820   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexNew                           0x000048ad   Thumb Code   100  rtx_mutex.o(.text.svcRtxMutexNew)
    [Anonymous Symbol]                       0x000048ac   Section        0  rtx_mutex.o(.text.svcRtxMutexNew)
    __arm_cp.9_0                             0x00004910   Number         4  rtx_mutex.o(.text.svcRtxMutexNew)
    svcRtxMutexRelease                       0x00004915   Thumb Code   176  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x00004914   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxThreadExit                         0x000049c5   Thumb Code    72  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x000049c4   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.71_0                            0x00004a0c   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadFlagsSet                     0x00004a11   Thumb Code   102  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    [Anonymous Symbol]                       0x00004a10   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsSet)
    svcRtxThreadFlagsWait                    0x00004a79   Thumb Code    72  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    [Anonymous Symbol]                       0x00004a78   Section        0  rtx_thread.o(.text.svcRtxThreadFlagsWait)
    svcRtxThreadGetId                        0x00004ac1   Thumb Code     8  rtx_thread.o(.text.svcRtxThreadGetId)
    [Anonymous Symbol]                       0x00004ac0   Section        0  rtx_thread.o(.text.svcRtxThreadGetId)
    __arm_cp.29_0                            0x00004ac8   Number         4  rtx_thread.o(.text.svcRtxThreadGetId)
    svcRtxThreadNew                          0x00004acd   Thumb Code   484  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x00004acc   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.19_0                            0x00004cb0   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.19_1                            0x00004cb4   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.19_2                            0x00004cb8   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.19_3                            0x00004cbc   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.19_4                            0x00004cc0   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.19_5                            0x00004cc4   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadTerminate                    0x00004cc9   Thumb Code   132  rtx_thread.o(.text.svcRtxThreadTerminate)
    [Anonymous Symbol]                       0x00004cc8   Section        0  rtx_thread.o(.text.svcRtxThreadTerminate)
    __arm_cp.72_0                            0x00004d4c   Number         4  rtx_thread.o(.text.svcRtxThreadTerminate)
    svcRtxTimerNew                           0x00004d51   Thumb Code   120  rtx_timer.o(.text.svcRtxTimerNew)
    [Anonymous Symbol]                       0x00004d50   Section        0  rtx_timer.o(.text.svcRtxTimerNew)
    svcRtxTimerStart                         0x00004dc9   Thumb Code    68  rtx_timer.o(.text.svcRtxTimerStart)
    [Anonymous Symbol]                       0x00004dc8   Section        0  rtx_timer.o(.text.svcRtxTimerStart)
    __arm_cp.12_0                            0x00004e0c   Number         4  rtx_timer.o(.text.svcRtxTimerStart)
    svcRtxTimerStop                          0x00004e11   Thumb Code    40  rtx_timer.o(.text.svcRtxTimerStop)
    [Anonymous Symbol]                       0x00004e10   Section        0  rtx_timer.o(.text.svcRtxTimerStop)
    i.__0sprintf                             0x00004e38   Section        0  printfa.o(i.__0sprintf)
    i.__ARM_fpclassify                       0x00004e60   Section        0  fpclassify.o(i.__ARM_fpclassify)
    i.__hardfp_modf                          0x00004e90   Section        0  modf.o(i.__hardfp_modf)
    i.__hardfp_pow                           0x00004f60   Section        0  pow.o(i.__hardfp_pow)
    i.__kernel_poly                          0x00005bc0   Section        0  poly.o(i.__kernel_poly)
    i.__mathlib_dbl_divzero                  0x00005cb8   Section        0  dunder.o(i.__mathlib_dbl_divzero)
    i.__mathlib_dbl_infnan2                  0x00005ce8   Section        0  dunder.o(i.__mathlib_dbl_infnan2)
    i.__mathlib_dbl_invalid                  0x00005d00   Section        0  dunder.o(i.__mathlib_dbl_invalid)
    i.__mathlib_dbl_overflow                 0x00005d20   Section        0  dunder.o(i.__mathlib_dbl_overflow)
    i.__mathlib_dbl_underflow                0x00005d40   Section        0  dunder.o(i.__mathlib_dbl_underflow)
    i.__scatterload_copy                     0x00005d60   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x00005d6e   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00005d70   Section       14  handlers.o(i.__scatterload_zeroinit)
    i.__set_errno                            0x00005d80   Section        0  errno.o(i.__set_errno)
    _fp_digits                               0x00005d8d   Thumb Code   366  printfa.o(i._fp_digits)
    i._fp_digits                             0x00005d8c   Section        0  printfa.o(i._fp_digits)
    _printf_core                             0x00005f11   Thumb Code  1744  printfa.o(i._printf_core)
    i._printf_core                           0x00005f10   Section        0  printfa.o(i._printf_core)
    _printf_post_padding                     0x000065ed   Thumb Code    36  printfa.o(i._printf_post_padding)
    i._printf_post_padding                   0x000065ec   Section        0  printfa.o(i._printf_post_padding)
    _printf_pre_padding                      0x00006611   Thumb Code    46  printfa.o(i._printf_pre_padding)
    i._printf_pre_padding                    0x00006610   Section        0  printfa.o(i._printf_pre_padding)
    _sputc                                   0x0000663f   Thumb Code    10  printfa.o(i._sputc)
    i._sputc                                 0x0000663e   Section        0  printfa.o(i._sputc)
    i.fabs                                   0x00006648   Section        0  fabs.o(i.fabs)
    i.sqrt                                   0x00006660   Section        0  sqrt.o(i.sqrt)
    bp                                       0x000066d0   Data          16  pow.o(.constdata)
    .constdata                               0x000066d0   Section      136  pow.o(.constdata)
    dp_h                                     0x000066e0   Data          16  pow.o(.constdata)
    dp_l                                     0x000066f0   Data          16  pow.o(.constdata)
    L                                        0x00006700   Data          48  pow.o(.constdata)
    P                                        0x00006730   Data          40  pow.o(.constdata)
    .constdata                               0x00006758   Section        8  qnan.o(.constdata)
    __tagsym$$used.0                         0x00006760   Number         0  rtx_lib.o(.rodata)
    __tagsym$$used.1                         0x000067d0   Number         0  rtx_lib.o(.rodata)
    .L__const.SW2_status.str1                0x00006808   Data         128  main.o(.rodata..L__const.SW2_status.str1)
    .L__const.SW2_status.str2                0x00006888   Data         128  main.o(.rodata..L__const.SW2_status.str2)
    .L__const.SW3_status.str1                0x00006908   Data         128  main.o(.rodata..L__const.SW3_status.str1)
    .L__const.SW3_status.str2                0x00006988   Data         128  main.o(.rodata..L__const.SW3_status.str2)
    MutexAttr_ADCMutex                       0x00006a08   Data          16  main.o(.rodata.MutexAttr_ADCMutex)
    [Anonymous Symbol]                       0x00006a08   Section        0  main.o(.rodata.MutexAttr_ADCMutex)
    ThreadAttr_ADC1                          0x00006a18   Data          36  main.o(.rodata.ThreadAttr_ADC1)
    [Anonymous Symbol]                       0x00006a18   Section        0  main.o(.rodata.ThreadAttr_ADC1)
    ThreadAttr_ADC2                          0x00006a3c   Data          36  main.o(.rodata.ThreadAttr_ADC2)
    [Anonymous Symbol]                       0x00006a3c   Section        0  main.o(.rodata.ThreadAttr_ADC2)
    ThreadAttr_LEDswitcher                   0x00006a60   Data          36  main.o(.rodata.ThreadAttr_LEDswitcher)
    [Anonymous Symbol]                       0x00006a60   Section        0  main.o(.rodata.ThreadAttr_LEDswitcher)
    ThreadAttr_SW2_IR                        0x00006a84   Data          36  main.o(.rodata.ThreadAttr_SW2_IR)
    [Anonymous Symbol]                       0x00006a84   Section        0  main.o(.rodata.ThreadAttr_SW2_IR)
    ThreadAttr_SW3_IR                        0x00006aa8   Data          36  main.o(.rodata.ThreadAttr_SW3_IR)
    [Anonymous Symbol]                       0x00006aa8   Section        0  main.o(.rodata.ThreadAttr_SW3_IR)
    ThreadAttr_consumer                      0x00006acc   Data          36  main.o(.rodata.ThreadAttr_consumer)
    [Anonymous Symbol]                       0x00006acc   Section        0  main.o(.rodata.ThreadAttr_consumer)
    ThreadAttr_main                          0x00006af0   Data          36  main.o(.rodata.ThreadAttr_main)
    [Anonymous Symbol]                       0x00006af0   Section        0  main.o(.rodata.ThreadAttr_main)
    ThreadAttr_producer                      0x00006b14   Data          36  main.o(.rodata.ThreadAttr_producer)
    [Anonymous Symbol]                       0x00006b14   Section        0  main.o(.rodata.ThreadAttr_producer)
    CLOCK_GetFllFreq.fllFactorTable          0x00006b38   Data          16  fsl_clock.o(.rodata.cst16)
    [Anonymous Symbol]                       0x00006b38   Section        0  fsl_clock.o(.rodata.cst16)
    CLOCK_TrimInternalRefClk.trimRange       0x00006b48   Data          16  fsl_clock.o(.rodata.cst16)
    .Lswitch.table.UART_Init.19              0x00006b58   Data          16  fsl_uart.o(.rodata.cst16)
    s_adc16Clocks                            0x00006b68   Data           8  fsl_adc16.o(.rodata.cst8)
    [Anonymous Symbol]                       0x00006b68   Section        0  fsl_adc16.o(.rodata.cst8)
    s_adc16Bases                             0x00006b70   Data           8  fsl_adc16.o(.rodata.cst8)
    memorypoolAttr_memblock                  0x00006bb4   Data          24  main.o(.rodata.memorypoolAttr_memblock)
    [Anonymous Symbol]                       0x00006bb4   Section        0  main.o(.rodata.memorypoolAttr_memblock)
    os_idle_thread_attr                      0x00006bd0   Data          36  rtx_lib.o(.rodata.os_idle_thread_attr)
    [Anonymous Symbol]                       0x00006bd0   Section        0  rtx_lib.o(.rodata.os_idle_thread_attr)
    os_timer_mq_attr                         0x00006bf4   Data          24  rtx_lib.o(.rodata.os_timer_mq_attr)
    [Anonymous Symbol]                       0x00006bf4   Section        0  rtx_lib.o(.rodata.os_timer_mq_attr)
    os_timer_thread_attr                     0x00006c0c   Data          36  rtx_lib.o(.rodata.os_timer_thread_attr)
    [Anonymous Symbol]                       0x00006c0c   Section        0  rtx_lib.o(.rodata.os_timer_thread_attr)
    s_UartAdapterBase                        0x00006c30   Data          24  fsl_adapter_uart.o(.rodata.s_UartAdapterBase)
    [Anonymous Symbol]                       0x00006c30   Section        0  fsl_adapter_uart.o(.rodata.s_UartAdapterBase)
    s_gpioBases                              0x00006c48   Data          20  fsl_gpio.o(.rodata.s_gpioBases)
    [Anonymous Symbol]                       0x00006c48   Section        0  fsl_gpio.o(.rodata.s_gpioBases)
    s_portBases                              0x00006c5c   Data          20  fsl_gpio.o(.rodata.s_portBases)
    [Anonymous Symbol]                       0x00006c5c   Section        0  fsl_gpio.o(.rodata.s_portBases)
    s_uartBases                              0x00006c70   Data          24  fsl_uart.o(.rodata.s_uartBases)
    [Anonymous Symbol]                       0x00006c70   Section        0  fsl_uart.o(.rodata.s_uartBases)
    s_uartClock                              0x00006c88   Data          24  fsl_uart.o(.rodata.s_uartClock)
    [Anonymous Symbol]                       0x00006c88   Section        0  fsl_uart.o(.rodata.s_uartClock)
    [Anonymous Symbol]                       0x00006ca0   Section        0  main.o(.rodata.str1.1)
    .L.str.3                                 0x00006cf0   Data          69  fsl_adapter_uart.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00006cf0   Section        0  fsl_adapter_uart.o(.rodata.str1.1)
    .L.str.5                                 0x00006d35   Data           5  fsl_adapter_uart.o(.rodata.str1.1)
    .L.str.1                                 0x00006d3a   Data          96  fsl_adapter_uart.o(.rodata.str1.1)
    .L.str                                   0x00006d9a   Data           7  fsl_adapter_uart.o(.rodata.str1.1)
    .L.str.6                                 0x00006da1   Data           7  fsl_adapter_uart.o(.rodata.str1.1)
    .L.str.4                                 0x00006da8   Data          36  fsl_adc16.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00006da8   Section        0  fsl_adc16.o(.rodata.str1.1)
    .L.str.3                                 0x00006dcc   Data          29  fsl_adc16.o(.rodata.str1.1)
    .L.str.1                                 0x00006de9   Data          81  fsl_adc16.o(.rodata.str1.1)
    .L.str                                   0x00006e3a   Data          15  fsl_adc16.o(.rodata.str1.1)
    .L.str.4                                 0x00006e42   Data           7  fsl_adc16.o(.rodata.str1.1)
    .L.str                                   0x00006e49   Data          12  fsl_clock.o(.rodata.str1.1)
    .L.str.1                                 0x00006e49   Data          81  fsl_clock.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00006e49   Section        0  fsl_clock.o(.rodata.str1.1)
    .L.str.6                                 0x00006e9a   Data          18  fsl_clock.o(.rodata.str1.1)
    .L.str.2                                 0x00006ea6   Data          13  fsl_clock.o(.rodata.str1.1)
    .L.str.7                                 0x00006eac   Data          19  fsl_clock.o(.rodata.str1.1)
    .L.str.2                                 0x00006ebf   Data          35  fsl_gpio.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00006ebf   Section        0  fsl_gpio.o(.rodata.str1.1)
    .L.str.1                                 0x00006ee2   Data          80  fsl_gpio.o(.rodata.str1.1)
    .L.str.9                                 0x00006f32   Data          13  fsl_uart.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00006f32   Section        0  fsl_uart.o(.rodata.str1.1)
    .L.str.3                                 0x00006f5b   Data          15  fsl_uart.o(.rodata.str1.1)
    .L.str.1                                 0x00006f9a   Data          80  fsl_uart.o(.rodata.str1.1)
    .L.str.2                                 0x00006f9c   Data          15  fsl_uart.o(.rodata.str1.1)
    .L.str.6                                 0x00006fea   Data          70  fsl_uart.o(.rodata.str1.1)
    .L.str.5                                 0x00007030   Data          70  fsl_uart.o(.rodata.str1.1)
    .L.str.8                                 0x00007046   Data          13  fsl_uart.o(.rodata.str1.1)
    .L.str.11                                0x00007060   Data          13  fsl_uart.o(.rodata.str1.1)
    .L.str.12                                0x0000706d   Data          21  fsl_uart.o(.rodata.str1.1)
    .L.str                                   0x00007076   Data          26  fsl_uart.o(.rodata.str1.1)
    .L.str.14                                0x00007082   Data          14  fsl_uart.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00007090   Section        0  rtx_kernel.o(.rodata.str1.4)
    timerAttr_timerADC1                      0x0000709c   Data          16  main.o(.rodata.timerAttr_timerADC1)
    [Anonymous Symbol]                       0x0000709c   Section        0  main.o(.rodata.timerAttr_timerADC1)
    _errno                                   0x20000000   Data           4  errno.o(.data)
    .data                                    0x20000000   Section        4  errno.o(.data)
    s_fastIrcFreq                            0x200000ac   Data           4  fsl_clock.o(.data.s_fastIrcFreq)
    [Anonymous Symbol]                       0x200000ac   Section        0  fsl_clock.o(.data.s_fastIrcFreq)
    s_slowIrcFreq                            0x200000b0   Data           4  fsl_clock.o(.data.s_slowIrcFreq)
    [Anonymous Symbol]                       0x200000b0   Section        0  fsl_clock.o(.data.s_slowIrcFreq)
    ADC1_callback.tick                       0x200000b8   Data           4  main.o(.bss.ADC1_callback.tick)
    [Anonymous Symbol]                       0x200000b8   Section        0  main.o(.bss.ADC1_callback.tick)
    os_isr_queue                             0x200000e8   Data          64  rtx_lib.o(.bss.os)
    [Anonymous Symbol]                       0x200000e8   Section        0  rtx_lib.o(.bss.os)
    os_mem                                   0x20000128   Data       32768  rtx_lib.o(.bss.os)
    PendST                                   0x20008128   Data           1  os_systick.o(.bss.os)
    [Anonymous Symbol]                       0x20008128   Section        0  os_systick.o(.bss.os)
    os_timer_mq_cb                           0x2000812c   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    [Anonymous Symbol]                       0x2000812c   Section        0  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_data                         0x20008160   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    [Anonymous Symbol]                       0x20008160   Section        0  rtx_lib.o(.bss.os.msgqueue.mem)
    os_idle_thread_cb                        0x200081b0   Data          80  rtx_lib.o(.bss.os.thread.cb)
    [Anonymous Symbol]                       0x200081b0   Section        0  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x20008200   Data          80  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_stack                     0x20008250   Data         512  rtx_lib.o(.bss.os.thread.idle.stack)
    [Anonymous Symbol]                       0x20008250   Section        0  rtx_lib.o(.bss.os.thread.idle.stack)
    os_timer_thread_stack                    0x20008450   Data         512  rtx_lib.o(.bss.os.thread.timer.stack)
    [Anonymous Symbol]                       0x20008450   Section        0  rtx_lib.o(.bss.os.thread.timer.stack)
    s_debugConsole                           0x20008654   Data          20  fsl_debug_console.o(.bss.s_debugConsole)
    [Anonymous Symbol]                       0x20008654   Section        0  fsl_debug_console.o(.bss.s_debugConsole)
    VTOR                                     0xe000ed08   Number         0  startup_mk64f12.o ABSOLUTE
    FPCCR                                    0xe000ef34   Number         0  irq_armv7m.o ABSOLUTE

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$USESV6$~STKCKD$USESV7$WCHAR32$ENUMINT$~SHL$OTIME$ROPI$IEEEX$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Number      1024  startup_mk64f12.o(.isr_vector)
    _printf_a                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_c                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_charcount                        0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_d                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_e                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_f                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_flags                            0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_fp_dec                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_fp_hex                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_g                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_i                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_int_dec                          0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_l                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lc                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_ll                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lld                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_lli                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llo                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llu                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_llx                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_dec                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_hex                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_longlong_oct                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_ls                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_mbtowc                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_n                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_o                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_p                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_percent                          0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_pre_padding                      0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_return_value                     0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_s                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_sizespec                         0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_str                              0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_truncate_signed                  0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_truncate_unsigned                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_u                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_wc                               0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_wctomb                           0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_widthprec                        0x00000000   Number         0  printfstubs.o ABSOLUTE
    _printf_x                                0x00000000   Number         0  printfstubs.o ABSOLUTE
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __main                                   0x00000411   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x00000411   Thumb Code     0  entry4.o(.ARM.Collect$$$$00000003)
    _main_scatterload                        0x00000415   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x00000419   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x00000419   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x00000419   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x00000419   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x00000421   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x00000421   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x00000425   Thumb Code    40  startup_mk64f12.o(.text)
    ADC0_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    ADC1_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    BusFault_Handler                         0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    CAN0_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    CMP0_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    CMP1_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    CMP2_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    CMT_IRQHandler                           0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DAC0_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DAC1_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA0_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA10_DriverIRQHandler                   0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA11_DriverIRQHandler                   0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA12_DriverIRQHandler                   0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA13_DriverIRQHandler                   0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA14_DriverIRQHandler                   0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA15_DriverIRQHandler                   0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA1_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA2_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA3_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA4_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA5_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA6_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA7_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA8_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA9_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA_Error_DriverIRQHandler               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DebugMon_Handler                         0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    DefaultISR                               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    ENET_1588_Timer_DriverIRQHandler         0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    ENET_Error_DriverIRQHandler              0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    ENET_Receive_DriverIRQHandler            0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    ENET_Transmit_DriverIRQHandler           0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    FTFE_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    FTM0_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    FTM1_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    FTM2_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    FTM3_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    I2C0_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    I2C1_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    I2C2_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    I2S0_Rx_DriverIRQHandler                 0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    I2S0_Tx_DriverIRQHandler                 0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    LLWU_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    LPTMR0_IRQHandler                        0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    LVD_LVW_IRQHandler                       0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    MCG_IRQHandler                           0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    MCM_IRQHandler                           0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    MemManage_Handler                        0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PDB0_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PIT0_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PIT1_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PIT2_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PIT3_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PORTB_IRQHandler                         0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PORTD_IRQHandler                         0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    PORTE_IRQHandler                         0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    RNG_IRQHandler                           0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    RTC_IRQHandler                           0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    RTC_Seconds_IRQHandler                   0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    Read_Collision_IRQHandler                0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    Reserved71_IRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    SDHC_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    SPI0_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    SPI1_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    SPI2_DriverIRQHandler                    0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    SWI_IRQHandler                           0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    UART0_ERR_DriverIRQHandler               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    UART0_LON_DriverIRQHandler               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    UART1_ERR_DriverIRQHandler               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    UART2_ERR_DriverIRQHandler               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    UART3_ERR_DriverIRQHandler               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    UART4_ERR_DriverIRQHandler               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    UART5_ERR_DriverIRQHandler               0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    USB0_IRQHandler                          0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    USBDCD_IRQHandler                        0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    UsageFault_Handler                       0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    WDOG_EWM_IRQHandler                      0x0000044d   Thumb Code     4  startup_mk64f12.o(.text)
    NMI_Handler                              0x00000451   Thumb Code     4  startup_mk64f12.o(.text)
    HardFault_Handler                        0x00000455   Thumb Code     4  startup_mk64f12.o(.text)
    DMA0_IRQHandler                          0x00000465   Thumb Code     4  startup_mk64f12.o(.text)
    DMA1_IRQHandler                          0x00000469   Thumb Code     4  startup_mk64f12.o(.text)
    DMA2_IRQHandler                          0x0000046d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA3_IRQHandler                          0x00000471   Thumb Code     4  startup_mk64f12.o(.text)
    DMA4_IRQHandler                          0x00000475   Thumb Code     4  startup_mk64f12.o(.text)
    DMA5_IRQHandler                          0x00000479   Thumb Code     4  startup_mk64f12.o(.text)
    DMA6_IRQHandler                          0x0000047d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA7_IRQHandler                          0x00000481   Thumb Code     4  startup_mk64f12.o(.text)
    DMA8_IRQHandler                          0x00000485   Thumb Code     4  startup_mk64f12.o(.text)
    DMA9_IRQHandler                          0x00000489   Thumb Code     4  startup_mk64f12.o(.text)
    DMA10_IRQHandler                         0x0000048d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA11_IRQHandler                         0x00000491   Thumb Code     4  startup_mk64f12.o(.text)
    DMA12_IRQHandler                         0x00000495   Thumb Code     4  startup_mk64f12.o(.text)
    DMA13_IRQHandler                         0x00000499   Thumb Code     4  startup_mk64f12.o(.text)
    DMA14_IRQHandler                         0x0000049d   Thumb Code     4  startup_mk64f12.o(.text)
    DMA15_IRQHandler                         0x000004a1   Thumb Code     4  startup_mk64f12.o(.text)
    DMA_Error_IRQHandler                     0x000004a5   Thumb Code     4  startup_mk64f12.o(.text)
    I2C0_IRQHandler                          0x000004a9   Thumb Code     4  startup_mk64f12.o(.text)
    I2C1_IRQHandler                          0x000004ad   Thumb Code     4  startup_mk64f12.o(.text)
    SPI0_IRQHandler                          0x000004b1   Thumb Code     4  startup_mk64f12.o(.text)
    SPI1_IRQHandler                          0x000004b5   Thumb Code     4  startup_mk64f12.o(.text)
    I2S0_Tx_IRQHandler                       0x000004b9   Thumb Code     4  startup_mk64f12.o(.text)
    I2S0_Rx_IRQHandler                       0x000004bd   Thumb Code     4  startup_mk64f12.o(.text)
    UART0_LON_IRQHandler                     0x000004c1   Thumb Code     4  startup_mk64f12.o(.text)
    UART0_RX_TX_IRQHandler                   0x000004c5   Thumb Code     4  startup_mk64f12.o(.text)
    UART0_ERR_IRQHandler                     0x000004c9   Thumb Code     4  startup_mk64f12.o(.text)
    UART1_RX_TX_IRQHandler                   0x000004cd   Thumb Code     4  startup_mk64f12.o(.text)
    UART1_ERR_IRQHandler                     0x000004d1   Thumb Code     4  startup_mk64f12.o(.text)
    UART2_RX_TX_IRQHandler                   0x000004d5   Thumb Code     4  startup_mk64f12.o(.text)
    UART2_ERR_IRQHandler                     0x000004d9   Thumb Code     4  startup_mk64f12.o(.text)
    UART3_RX_TX_IRQHandler                   0x000004dd   Thumb Code     4  startup_mk64f12.o(.text)
    UART3_ERR_IRQHandler                     0x000004e1   Thumb Code     4  startup_mk64f12.o(.text)
    SPI2_IRQHandler                          0x000004e5   Thumb Code     4  startup_mk64f12.o(.text)
    UART4_RX_TX_IRQHandler                   0x000004e9   Thumb Code     4  startup_mk64f12.o(.text)
    UART4_ERR_IRQHandler                     0x000004ed   Thumb Code     4  startup_mk64f12.o(.text)
    UART5_RX_TX_IRQHandler                   0x000004f1   Thumb Code     4  startup_mk64f12.o(.text)
    UART5_ERR_IRQHandler                     0x000004f5   Thumb Code     4  startup_mk64f12.o(.text)
    I2C2_IRQHandler                          0x000004f9   Thumb Code     4  startup_mk64f12.o(.text)
    CAN0_ORed_Message_buffer_IRQHandler      0x000004fd   Thumb Code     4  startup_mk64f12.o(.text)
    CAN0_Bus_Off_IRQHandler                  0x00000501   Thumb Code     4  startup_mk64f12.o(.text)
    CAN0_Error_IRQHandler                    0x00000505   Thumb Code     4  startup_mk64f12.o(.text)
    CAN0_Tx_Warning_IRQHandler               0x00000509   Thumb Code     4  startup_mk64f12.o(.text)
    CAN0_Rx_Warning_IRQHandler               0x0000050d   Thumb Code     4  startup_mk64f12.o(.text)
    CAN0_Wake_Up_IRQHandler                  0x00000511   Thumb Code     4  startup_mk64f12.o(.text)
    SDHC_IRQHandler                          0x00000515   Thumb Code     4  startup_mk64f12.o(.text)
    ENET_1588_Timer_IRQHandler               0x00000519   Thumb Code     4  startup_mk64f12.o(.text)
    ENET_Transmit_IRQHandler                 0x0000051d   Thumb Code     4  startup_mk64f12.o(.text)
    ENET_Receive_IRQHandler                  0x00000521   Thumb Code     4  startup_mk64f12.o(.text)
    ENET_Error_IRQHandler                    0x00000525   Thumb Code     4  startup_mk64f12.o(.text)
    SVC_Handler                              0x000005ed   Thumb Code   152  irq_armv7m.o(.text)
    PendSV_Handler                           0x00000685   Thumb Code    16  irq_armv7m.o(.text)
    SysTick_Handler                          0x00000695   Thumb Code    16  irq_armv7m.o(.text)
    __aeabi_uldivmod                         0x000006b1   Thumb Code    98  uldiv.o(.text)
    ___aeabi_memcpy8$ret                     0x00000713   Thumb Code     0  memcpy.o(.text)
    __aeabi_memcpy                           0x00000713   Thumb Code    40  memcpy.o(.text)
    __aeabi_memcpy4                          0x00000713   Thumb Code     0  memcpy.o(.text)
    memcpy                                   0x00000713   Thumb Code     0  memcpy.o(.text)
    __aeabi_memset                           0x0000073b   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x0000073b   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x0000073b   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x00000749   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x00000749   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x00000749   Thumb Code     0  memseta.o(.text)
    memset                                   0x0000074d   Thumb Code    18  memseta.o(.text)
    strlen                                   0x0000075f   Thumb Code    14  strlen.o(.text)
    strcpy                                   0x0000076d   Thumb Code    18  strcpy.o(.text)
    __aeabi_dadd                             0x0000077f   Thumb Code   322  dadd.o(.text)
    __aeabi_dsub                             0x000008c1   Thumb Code     6  dadd.o(.text)
    __aeabi_drsub                            0x000008c7   Thumb Code     6  dadd.o(.text)
    __aeabi_dmul                             0x000008cd   Thumb Code   228  dmul.o(.text)
    __aeabi_ddiv                             0x000009b1   Thumb Code   222  ddiv.o(.text)
    __aeabi_dcmplt                           0x00000a8f   Thumb Code    54  dcmplt.o(.text)
    __aeabi_dcmpgt                           0x00000ac5   Thumb Code    54  dcmpgt.o(.text)
    __aeabi_dcmpeq                           0x00000afb   Thumb Code    56  dcmpeq.o(.text)
    __aeabi_i2d                              0x00000b33   Thumb Code    34  dflti.o(.text)
    __aeabi_ui2d                             0x00000b55   Thumb Code    26  dfltui.o(.text)
    __aeabi_l2d                              0x00000b6f   Thumb Code    40  dfltl.o(.text)
    __aeabi_d2iz                             0x00000b97   Thumb Code    62  dfixi.o(.text)
    __aeabi_d2lz                             0x00000bd5   Thumb Code    74  dfixl.o(.text)
    __aeabi_f2d                              0x00000c1f   Thumb Code    38  f2d.o(.text)
    __aeabi_d2f                              0x00000c45   Thumb Code    56  d2f.o(.text)
    __aeabi_uidiv                            0x00000c7d   Thumb Code     0  uidiv.o(.text)
    __aeabi_uidivmod                         0x00000c7d   Thumb Code    44  uidiv.o(.text)
    __aeabi_llsl                             0x00000ca9   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x00000ca9   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x00000cc7   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x00000cc7   Thumb Code     0  llushr.o(.text)
    __aeabi_lasr                             0x00000ce7   Thumb Code    36  llsshr.o(.text)
    _ll_sshift_r                             0x00000ce7   Thumb Code     0  llsshr.o(.text)
    __I$use$fp                               0x00000d0b   Thumb Code     0  iusefp.o(.text)
    _float_round                             0x00000d0b   Thumb Code    18  fepilogue.o(.text)
    _float_epilogue                          0x00000d1d   Thumb Code    92  fepilogue.o(.text)
    _double_round                            0x00000d79   Thumb Code    30  depilogue.o(.text)
    _double_epilogue                         0x00000d97   Thumb Code   156  depilogue.o(.text)
    __ARM_scalbn                             0x00000e33   Thumb Code    46  dscalb.o(.text)
    scalbn                                   0x00000e33   Thumb Code     0  dscalb.o(.text)
    __aeabi_d2ulz                            0x00000e61   Thumb Code    48  dfixul.o(.text)
    __aeabi_cdrcmple                         0x00000e91   Thumb Code    48  cdrcmple.o(.text)
    __scatterload                            0x00000ec1   Thumb Code    38  init.o(.text)
    __scatterload_rt2                        0x00000ec1   Thumb Code     0  init.o(.text)
    _dsqrt                                   0x00000ef1   Thumb Code   162  dsqrt.o(.text)
    ADC16_DoAutoCalibration                  0x00000f95   Thumb Code   138  fsl_adc16.o(.text.ADC16_DoAutoCalibration)
    ADC16_GetChannelStatusFlags              0x00001021   Thumb Code    38  fsl_adc16.o(.text.ADC16_GetChannelStatusFlags)
    ADC16_GetDefaultConfig                   0x00001049   Thumb Code    64  fsl_adc16.o(.text.ADC16_GetDefaultConfig)
    ADC16_Init                               0x00001089   Thumb Code   240  fsl_adc16.o(.text.ADC16_Init)
    ADC16_SetChannelConfig                   0x00001179   Thumb Code    90  fsl_adc16.o(.text.ADC16_SetChannelConfig)
    ADC1_Thread6                             0x000011d5   Thumb Code    90  main.o(.text.ADC1_Thread6)
    ADC1_callback                            0x00001231   Thumb Code   232  main.o(.text.ADC1_callback)
    ADC2_Thread7                             0x00001349   Thumb Code   200  main.o(.text.ADC2_Thread7)
    BOARD_BootClockRUN                       0x00001435   Thumb Code   100  clock_config.o(.text.BOARD_BootClockRUN)
    BOARD_InitDebugConsole                   0x00001499   Thumb Code    24  board.o(.text.BOARD_InitDebugConsole)
    BOARD_InitPins                           0x000014b1   Thumb Code   126  pin_mux.o(.text.BOARD_InitPins)
    CLOCK_BootToPeeMode                      0x00001531   Thumb Code   226  fsl_clock.o(.text.CLOCK_BootToPeeMode)
    CLOCK_GetCoreSysClkFreq                  0x00001615   Thumb Code    28  fsl_clock.o(.text.CLOCK_GetCoreSysClkFreq)
    CLOCK_GetOutClkFreq                      0x0000170d   Thumb Code   242  fsl_clock.o(.text.CLOCK_GetOutClkFreq)
    CLOCK_GetPll0Freq                        0x00001801   Thumb Code   168  fsl_clock.o(.text.CLOCK_GetPll0Freq)
    CLOCK_InitOsc0                           0x000018b5   Thumb Code   120  fsl_clock.o(.text.CLOCK_InitOsc0)
    CLOCK_SetInternalRefClkConfig            0x0000192d   Thumb Code   150  fsl_clock.o(.text.CLOCK_SetInternalRefClkConfig)
    CLOCK_SetSimConfig                       0x000019c5   Thumb Code    42  fsl_clock.o(.text.CLOCK_SetSimConfig)
    DbgConsole_Getchar                       0x000019f1   Thumb Code    50  fsl_debug_console.o(.text.DbgConsole_Getchar)
    DbgConsole_Init                          0x00001a25   Thumb Code    76  fsl_debug_console.o(.text.DbgConsole_Init)
    DbgConsole_Printf                        0x00001a71   Thumb Code    32  fsl_debug_console.o(.text.DbgConsole_Printf)
    DbgConsole_Vprintf                       0x00001a91   Thumb Code  1750  fsl_debug_console.o(.text.DbgConsole_Vprintf)
    GPIO_PinInit                             0x00002169   Thumb Code    64  fsl_gpio.o(.text.GPIO_PinInit)
    GPIO_PortClearInterruptFlags             0x000021b9   Thumb Code    66  fsl_gpio.o(.text.GPIO_PortClearInterruptFlags)
    HAL_UartInit                             0x000021fd   Thumb Code   224  fsl_adapter_uart.o(.text.HAL_UartInit)
    HAL_UartReceiveBlocking                  0x000022e5   Thumb Code   108  fsl_adapter_uart.o(.text.HAL_UartReceiveBlocking)
    HAL_UartSendBlocking                     0x00002351   Thumb Code   102  fsl_adapter_uart.o(.text.HAL_UartSendBlocking)
    LED_Off                                  0x000023cd   Thumb Code    64  elec422.o(.text.LED_Off)
    LED_On                                   0x0000240d   Thumb Code    64  elec422.o(.text.LED_On)
    LEDs_switcher                            0x0000244d   Thumb Code   110  main.o(.text.LEDs_switcher)
    OS_Tick_AcknowledgeIRQ                   0x00002571   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    OS_Tick_Enable                           0x0000257d   Thumb Code    50  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_GetIRQn                          0x000025b1   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    OS_Tick_Setup                            0x000025b9   Thumb Code    72  os_systick.o(.text.OS_Tick_Setup)
    PORTA_IRQHandler                         0x00002659   Thumb Code    48  main.o(.text.PORTA_IRQHandler)
    PORTC_IRQHandler                         0x00002689   Thumb Code    48  main.o(.text.PORTC_IRQHandler)
    SW2_status                               0x000026b9   Thumb Code   134  main.o(.text.SW2_status)
    SW3_status                               0x00002741   Thumb Code   134  main.o(.text.SW3_status)
    SystemCoreClockUpdate                    0x000027c9   Thumb Code   360  system_mk64f12.o(.text.SystemCoreClockUpdate)
    SystemInit                               0x00002931   Thumb Code    48  system_mk64f12.o(.text.SystemInit)
    SystemInitHook                           0x00002961   Thumb Code     2  system_mk64f12.o(.text.SystemInitHook)
    UART0_RX_TX_DriverIRQHandler             0x00002a35   Thumb Code    42  fsl_uart.o(.text.UART0_RX_TX_DriverIRQHandler)
    UART1_RX_TX_DriverIRQHandler             0x00002a61   Thumb Code    42  fsl_uart.o(.text.UART1_RX_TX_DriverIRQHandler)
    UART2_RX_TX_DriverIRQHandler             0x00002a8d   Thumb Code    42  fsl_uart.o(.text.UART2_RX_TX_DriverIRQHandler)
    UART3_RX_TX_DriverIRQHandler             0x00002ab9   Thumb Code    42  fsl_uart.o(.text.UART3_RX_TX_DriverIRQHandler)
    UART4_RX_TX_DriverIRQHandler             0x00002ae5   Thumb Code    42  fsl_uart.o(.text.UART4_RX_TX_DriverIRQHandler)
    UART5_RX_TX_DriverIRQHandler             0x00002b11   Thumb Code    42  fsl_uart.o(.text.UART5_RX_TX_DriverIRQHandler)
    UART_GetDefaultConfig                    0x00002b3d   Thumb Code    62  fsl_uart.o(.text.UART_GetDefaultConfig)
    UART_Init                                0x00002b7d   Thumb Code   500  fsl_uart.o(.text.UART_Init)
    UART_ReadBlocking                        0x00002d8d   Thumb Code   320  fsl_uart.o(.text.UART_ReadBlocking)
    UART_WriteBlocking                       0x00002ecd   Thumb Code    34  fsl_uart.o(.text.UART_WriteBlocking)
    __aeabi_assert                           0x00002ef1   Thumb Code    16  fsl_assert.o(.text.__aeabi_assert)
    app_main                                 0x00002f2d   Thumb Code   306  main.o(.text.app_main)
    consumer_thread                          0x00003061   Thumb Code    56  main.o(.text.consumer_thread)
    elec422_startup                          0x0000309d   Thumb Code   236  elec422.o(.text.elec422_startup)
    main                                     0x000031d1   Thumb Code    56  main.o(.text.main)
    osKernelGetState                         0x00003215   Thumb Code    40  rtx_kernel.o(.text.osKernelGetState)
    osKernelGetTickCount                     0x00003241   Thumb Code    32  rtx_kernel.o(.text.osKernelGetTickCount)
    osKernelInitialize                       0x00003269   Thumb Code    40  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x00003295   Thumb Code    32  rtx_kernel.o(.text.osKernelStart)
    osMemoryPoolAlloc                        0x000032b9   Thumb Code   100  rtx_mempool.o(.text.osMemoryPoolAlloc)
    osMemoryPoolFree                         0x00003321   Thumb Code    68  rtx_mempool.o(.text.osMemoryPoolFree)
    osMemoryPoolNew                          0x00003369   Thumb Code    32  rtx_mempool.o(.text.osMemoryPoolNew)
    osMessageQueueGet                        0x0000338d   Thumb Code   108  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueueNew                        0x000033fd   Thumb Code    32  rtx_msgqueue.o(.text.osMessageQueueNew)
    osMessageQueuePut                        0x00003421   Thumb Code   124  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x000034a1   Thumb Code    32  rtx_mutex.o(.text.osMutexAcquire)
    osMutexNew                               0x000034c5   Thumb Code    32  rtx_mutex.o(.text.osMutexNew)
    osMutexRelease                           0x000034e9   Thumb Code    32  rtx_mutex.o(.text.osMutexRelease)
    osRtxErrorNotify                         0x0000350d   Thumb Code     2  rtx_config.o(.text.osRtxErrorNotify)
    osRtxIdleThread                          0x00003511   Thumb Code     2  rtx_config.o(.text.osRtxIdleThread)
    osRtxKernelBeforeInit                    0x00003513   Thumb Code     2  rtx_kernel.o(.text.osRtxKernelBeforeInit)
    osRtxKernelErrorNotify                   0x00003515   Thumb Code     4  rtx_kernel.o(.text.osRtxKernelErrorNotify)
    osRtxMemoryAlloc                         0x00003519   Thumb Code   110  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x00003587   Thumb Code    66  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x000035c9   Thumb Code    54  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x000035ff   Thumb Code    58  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x00003639   Thumb Code    74  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x00003683   Thumb Code    56  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMessageQueueTimerSetup              0x000037ad   Thumb Code    32  rtx_msgqueue.o(.text.osRtxMessageQueueTimerSetup)
    osRtxMutexOwnerRelease                   0x000037d1   Thumb Code    72  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxMutexOwnerRestore                   0x00003819   Thumb Code    74  rtx_mutex.o(.text.osRtxMutexOwnerRestore)
    osRtxPendSV_Handler                      0x00003865   Thumb Code   124  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x00003909   Thumb Code   108  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadBeforeFree                    0x00003979   Thumb Code     2  rtx_thread.o(.text.osRtxThreadBeforeFree)
    osRtxThreadDelayRemove                   0x00003a2d   Thumb Code    60  rtx_thread.o(.text.osRtxThreadDelayRemove)
    osRtxThreadDelayTick                     0x00003a69   Thumb Code    76  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDestroy                       0x00003ab5   Thumb Code    32  rtx_thread.o(.text.osRtxThreadDestroy)
    osRtxThreadDispatch                      0x00003ad5   Thumb Code    84  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadJoinWakeup                    0x00003b81   Thumb Code    30  rtx_thread.o(.text.osRtxThreadJoinWakeup)
    osRtxThreadListGet                       0x00003b9f   Thumb Code    18  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x00003bb1   Thumb Code    44  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x00003bdd   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x00003bf1   Thumb Code    38  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x00003c41   Thumb Code    16  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x00003c51   Thumb Code    20  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStartup                       0x00003c65   Thumb Code    48  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x00003c9d   Thumb Code    28  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x00003cbd   Thumb Code    56  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x00003cf9   Thumb Code    50  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x00003d2d   Thumb Code   112  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerSetup                          0x00003da1   Thumb Code    24  rtx_timer.o(.text.osRtxTimerSetup)
    osRtxTimerThread                         0x00003dc1   Thumb Code    32  rtx_timer.o(.text.osRtxTimerThread)
    osThreadExit                             0x00003e59   Thumb Code     8  rtx_thread.o(.text.osThreadExit)
    osThreadFlagsSet                         0x00003e65   Thumb Code    88  rtx_thread.o(.text.osThreadFlagsSet)
    osThreadFlagsWait                        0x00003ec1   Thumb Code    40  rtx_thread.o(.text.osThreadFlagsWait)
    osThreadGetId                            0x00003eed   Thumb Code    28  rtx_thread.o(.text.osThreadGetId)
    osThreadNew                              0x00003f11   Thumb Code    40  rtx_thread.o(.text.osThreadNew)
    osThreadTerminate                        0x00003f3d   Thumb Code    32  rtx_thread.o(.text.osThreadTerminate)
    osTimerNew                               0x00003f61   Thumb Code    32  rtx_timer.o(.text.osTimerNew)
    osTimerStart                             0x00003f85   Thumb Code    32  rtx_timer.o(.text.osTimerStart)
    osTimerStop                              0x00003fa9   Thumb Code    32  rtx_timer.o(.text.osTimerStop)
    producer_thread                          0x00003fcd   Thumb Code   256  main.o(.text.producer_thread)
    readnumber                               0x000040cd   Thumb Code   310  main.o(.text.readnumber)
    __0sprintf                               0x00004e39   Thumb Code    34  printfa.o(i.__0sprintf)
    __1sprintf                               0x00004e39   Thumb Code     0  printfa.o(i.__0sprintf)
    __2sprintf                               0x00004e39   Thumb Code     0  printfa.o(i.__0sprintf)
    __c89sprintf                             0x00004e39   Thumb Code     0  printfa.o(i.__0sprintf)
    sprintf                                  0x00004e39   Thumb Code     0  printfa.o(i.__0sprintf)
    __ARM_fpclassify                         0x00004e61   Thumb Code    48  fpclassify.o(i.__ARM_fpclassify)
    __hardfp_modf                            0x00004e91   Thumb Code   202  modf.o(i.__hardfp_modf)
    __hardfp_pow                             0x00004f61   Thumb Code  3088  pow.o(i.__hardfp_pow)
    __kernel_poly                            0x00005bc1   Thumb Code   248  poly.o(i.__kernel_poly)
    __mathlib_dbl_divzero                    0x00005cb9   Thumb Code    28  dunder.o(i.__mathlib_dbl_divzero)
    __mathlib_dbl_infnan2                    0x00005ce9   Thumb Code    20  dunder.o(i.__mathlib_dbl_infnan2)
    __mathlib_dbl_invalid                    0x00005d01   Thumb Code    24  dunder.o(i.__mathlib_dbl_invalid)
    __mathlib_dbl_overflow                   0x00005d21   Thumb Code    24  dunder.o(i.__mathlib_dbl_overflow)
    __mathlib_dbl_underflow                  0x00005d41   Thumb Code    24  dunder.o(i.__mathlib_dbl_underflow)
    __scatterload_copy                       0x00005d61   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x00005d6f   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00005d71   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    __set_errno                              0x00005d81   Thumb Code     6  errno.o(i.__set_errno)
    fabs                                     0x00006649   Thumb Code    24  fabs.o(i.fabs)
    sqrt                                     0x00006661   Thumb Code   110  sqrt.o(i.sqrt)
    __mathlib_zero                           0x00006758   Data           8  qnan.o(.constdata)
    osRtxConfig                              0x00006760   Data         112  rtx_lib.o(.rodata)
    os_cb_sections                           0x000067d0   Data          56  rtx_lib.o(.rodata)
    g_defaultClockConfigRun                  0x00006b78   Data          60  clock_config.o(.rodata.g_defaultClockConfigRun)
    osRtxUserSVC                             0x00006bcc   Data           4  rtx_lib.o(.rodata.osRtxUserSVC)
    Region$$Table$$Base                      0x000070ac   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x000070cc   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000004   Data           4  system_mk64f12.o(.data.SystemCoreClock)
    osRtxInfo                                0x20000008   Data         164  rtx_kernel.o(.data.os)
    s_uartIsr                                0x200000b4   Data           4  fsl_uart.o(.data.s_uartIsr)
    ADCMutex                                 0x200000bc   Data           4  main.o(.bss.ADCMutex)
    T_ADC1_periodic                          0x200000c0   Data           4  main.o(.bss.T_ADC1_periodic)
    T_ADC2                                   0x200000c4   Data           4  main.o(.bss.T_ADC2)
    T_LEDs                                   0x200000c8   Data           4  main.o(.bss.T_LEDs)
    T_SW2                                    0x200000cc   Data           4  main.o(.bss.T_SW2)
    T_SW3                                    0x200000d0   Data           4  main.o(.bss.T_SW3)
    app_mainid                               0x200000d4   Data           4  main.o(.bss.app_mainid)
    g_xtal0Freq                              0x200000d8   Data           4  fsl_clock.o(.bss.g_xtal0Freq)
    g_xtal32Freq                             0x200000dc   Data           4  fsl_clock.o(.bss.g_xtal32Freq)
    memblock                                 0x200000e0   Data           4  main.o(.bss.memblock)
    msgqueue                                 0x200000e4   Data           4  main.o(.bss.msgqueue)
    .bss.os.msgqueue.cb$$Base                0x2000812c   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x20008160   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x200081b0   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x20008250   Number         0  rtx_lib.o(.bss.os.thread.cb)
    queue_sampleperiod                       0x20008650   Data           4  main.o(.bss.queue_sampleperiod)
    s_uartHandle                             0x20008668   Data          24  fsl_uart.o(.bss.s_uartHandle)
    Image$$ARM_LIB_HEAP$$ZI$$Base            0x20008680   Number         0  anon$$obj.o ABSOLUTE
    Image$$ARM_LIB_HEAP$$ZI$$Limit           0x20008a80   Number         0  anon$$obj.o ABSOLUTE
    Image$$ARM_LIB_STACK$$ZI$$Limit          0x20030000   Number         0  anon$$obj.o ABSOLUTE



==============================================================================

Memory Map of the image

  Image Entry point : 0x00000425

  Load Region LR_m_text (Base: 0x00000000, Size: 0x00007188, Max: 0x00100000, ABSOLUTE)

    Execution Region VECTOR_ROM (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00000400, Max: 0x00000400, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x00000400   Data   RO          704    .isr_vector         startup_mk64f12.o


    Execution Region ER_m_flash_config (Exec base: 0x00000400, Load base: 0x00000400, Size: 0x00000010, Max: 0x00000010, ABSOLUTE, FIXED)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000400   0x00000400   0x00000010   Data   RO          705    .FlashConfig        startup_mk64f12.o


    Execution Region ER_m_text (Exec base: 0x00000410, Load base: 0x00000410, Size: 0x00006cbc, Max: 0x000ffbf0, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000410   0x00000410   0x00000000   Code   RO         1218  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x00000410   0x00000410   0x00000004   Code   RO         1585    .ARM.Collect$$$$00000003  mc_w.l(entry4.o)
    0x00000414   0x00000414   0x00000004   Code   RO         1588    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x00000418   0x00000418   0x00000000   Code   RO         1590    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x00000418   0x00000418   0x00000000   Code   RO         1592    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x00000418   0x00000418   0x00000008   Code   RO         1593    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x00000420   0x00000420   0x00000000   Code   RO         1595    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x00000420   0x00000420   0x00000000   Code   RO         1597    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x00000420   0x00000420   0x00000004   Code   RO         1586    .ARM.Collect$$$$00002714  mc_w.l(entry4.o)
    0x00000424   0x00000424   0x000001c8   Code   RO          703  * .text               startup_mk64f12.o
    0x000005ec   0x000005ec   0x000000c4   Code   RO          710    .text               RTX_V7MF.lib(irq_armv7m.o)
    0x000006b0   0x000006b0   0x00000062   Code   RO         1221    .text               mc_w.l(uldiv.o)
    0x00000712   0x00000712   0x00000028   Code   RO         1223    .text               mc_w.l(memcpy.o)
    0x0000073a   0x0000073a   0x00000024   Code   RO         1229    .text               mc_w.l(memseta.o)
    0x0000075e   0x0000075e   0x0000000e   Code   RO         1231    .text               mc_w.l(strlen.o)
    0x0000076c   0x0000076c   0x00000012   Code   RO         1233    .text               mc_w.l(strcpy.o)
    0x0000077e   0x0000077e   0x0000014e   Code   RO         1528    .text               mf_w.l(dadd.o)
    0x000008cc   0x000008cc   0x000000e4   Code   RO         1530    .text               mf_w.l(dmul.o)
    0x000009b0   0x000009b0   0x000000de   Code   RO         1532    .text               mf_w.l(ddiv.o)
    0x00000a8e   0x00000a8e   0x00000036   Code   RO         1534    .text               mf_w.l(dcmplt.o)
    0x00000ac4   0x00000ac4   0x00000036   Code   RO         1536    .text               mf_w.l(dcmpgt.o)
    0x00000afa   0x00000afa   0x00000038   Code   RO         1538    .text               mf_w.l(dcmpeq.o)
    0x00000b32   0x00000b32   0x00000022   Code   RO         1540    .text               mf_w.l(dflti.o)
    0x00000b54   0x00000b54   0x0000001a   Code   RO         1542    .text               mf_w.l(dfltui.o)
    0x00000b6e   0x00000b6e   0x00000028   Code   RO         1544    .text               mf_w.l(dfltl.o)
    0x00000b96   0x00000b96   0x0000003e   Code   RO         1546    .text               mf_w.l(dfixi.o)
    0x00000bd4   0x00000bd4   0x0000004a   Code   RO         1548    .text               mf_w.l(dfixl.o)
    0x00000c1e   0x00000c1e   0x00000026   Code   RO         1550    .text               mf_w.l(f2d.o)
    0x00000c44   0x00000c44   0x00000038   Code   RO         1552    .text               mf_w.l(d2f.o)
    0x00000c7c   0x00000c7c   0x0000002c   Code   RO         1613    .text               mc_w.l(uidiv.o)
    0x00000ca8   0x00000ca8   0x0000001e   Code   RO         1615    .text               mc_w.l(llshl.o)
    0x00000cc6   0x00000cc6   0x00000020   Code   RO         1617    .text               mc_w.l(llushr.o)
    0x00000ce6   0x00000ce6   0x00000024   Code   RO         1619    .text               mc_w.l(llsshr.o)
    0x00000d0a   0x00000d0a   0x00000000   Code   RO         1630    .text               mc_w.l(iusefp.o)
    0x00000d0a   0x00000d0a   0x0000006e   Code   RO         1631    .text               mf_w.l(fepilogue.o)
    0x00000d78   0x00000d78   0x000000ba   Code   RO         1633    .text               mf_w.l(depilogue.o)
    0x00000e32   0x00000e32   0x0000002e   Code   RO         1637    .text               mf_w.l(dscalb.o)
    0x00000e60   0x00000e60   0x00000030   Code   RO         1639    .text               mf_w.l(dfixul.o)
    0x00000e90   0x00000e90   0x00000030   Code   RO         1641    .text               mf_w.l(cdrcmple.o)
    0x00000ec0   0x00000ec0   0x00000030   Code   RO         1643    .text               mc_w.l(init.o)
    0x00000ef0   0x00000ef0   0x000000a2   Code   RO         1647    .text               mf_w.l(dsqrt.o)
    0x00000f92   0x00000f92   0x00000002   PAD
    0x00000f94   0x00000f94   0x0000008a   Code   RO          238    .text.ADC16_DoAutoCalibration  fsl_adc16.o
    0x0000101e   0x0000101e   0x00000002   PAD
    0x00001020   0x00001020   0x00000026   Code   RO          240    .text.ADC16_GetChannelStatusFlags  fsl_adc16.o
    0x00001046   0x00001046   0x00000002   PAD
    0x00001048   0x00001048   0x00000040   Code   RO          236    .text.ADC16_GetDefaultConfig  fsl_adc16.o
    0x00001088   0x00001088   0x000000f0   Code   RO          230    .text.ADC16_Init    fsl_adc16.o
    0x00001178   0x00001178   0x0000005a   Code   RO          250    .text.ADC16_SetChannelConfig  fsl_adc16.o
    0x000011d2   0x000011d2   0x00000002   PAD
    0x000011d4   0x000011d4   0x0000005a   Code   RO           26    .text.ADC1_Thread6  main.o
    0x0000122e   0x0000122e   0x00000002   PAD
    0x00001230   0x00001230   0x00000118   Code   RO           24    .text.ADC1_callback  main.o
    0x00001348   0x00001348   0x000000ec   Code   RO           28    .text.ADC2_Thread7  main.o
    0x00001434   0x00001434   0x00000064   Code   RO          109    .text.BOARD_BootClockRUN  clock_config.o
    0x00001498   0x00001498   0x00000018   Code   RO           98    .text.BOARD_InitDebugConsole  board.o
    0x000014b0   0x000014b0   0x0000007e   Code   RO           89    .text.BOARD_InitPins  pin_mux.o
    0x0000152e   0x0000152e   0x00000002   PAD
    0x00001530   0x00001530   0x000000e2   Code   RO          354    .text.CLOCK_BootToPeeMode  fsl_clock.o
    0x00001612   0x00001612   0x00000002   PAD
    0x00001614   0x00001614   0x0000001c   Code   RO          282    .text.CLOCK_GetCoreSysClkFreq  fsl_clock.o
    0x00001630   0x00001630   0x000000dc   Code   RO          294    .text.CLOCK_GetFllRefClkFreq  fsl_clock.o
    0x0000170c   0x0000170c   0x000000f2   Code   RO          274    .text.CLOCK_GetOutClkFreq  fsl_clock.o
    0x000017fe   0x000017fe   0x00000002   PAD
    0x00001800   0x00001800   0x000000b4   Code   RO          270    .text.CLOCK_GetPll0Freq  fsl_clock.o
    0x000018b4   0x000018b4   0x00000078   Code   RO          314    .text.CLOCK_InitOsc0  fsl_clock.o
    0x0000192c   0x0000192c   0x00000096   Code   RO          298    .text.CLOCK_SetInternalRefClkConfig  fsl_clock.o
    0x000019c2   0x000019c2   0x00000002   PAD
    0x000019c4   0x000019c4   0x0000002a   Code   RO          290    .text.CLOCK_SetSimConfig  fsl_clock.o
    0x000019ee   0x000019ee   0x00000002   PAD
    0x000019f0   0x000019f0   0x00000032   Code   RO          693    .text.DbgConsole_Getchar  fsl_debug_console.o
    0x00001a22   0x00001a22   0x00000002   PAD
    0x00001a24   0x00001a24   0x0000004c   Code   RO          681    .text.DbgConsole_Init  fsl_debug_console.o
    0x00001a70   0x00001a70   0x00000020   Code   RO          685    .text.DbgConsole_Printf  fsl_debug_console.o
    0x00001a90   0x00001a90   0x000006d6   Code   RO          687    .text.DbgConsole_Vprintf  fsl_debug_console.o
    0x00002166   0x00002166   0x00000002   PAD
    0x00002168   0x00002168   0x00000050   Code   RO          511    .text.GPIO_PinInit  fsl_gpio.o
    0x000021b8   0x000021b8   0x00000042   Code   RO          515    .text.GPIO_PortClearInterruptFlags  fsl_gpio.o
    0x000021fa   0x000021fa   0x00000002   PAD
    0x000021fc   0x000021fc   0x000000e8   Code   RO          208    .text.HAL_UartInit  fsl_adapter_uart.o
    0x000022e4   0x000022e4   0x0000006c   Code   RO          212    .text.HAL_UartReceiveBlocking  fsl_adapter_uart.o
    0x00002350   0x00002350   0x00000066   Code   RO          214    .text.HAL_UartSendBlocking  fsl_adapter_uart.o
    0x000023b6   0x000023b6   0x00000016   Code   RO          990    .text.IsIrqMasked   RTX_V7MF.lib(rtx_thread.o)
    0x000023cc   0x000023cc   0x00000040   Code   RO           73    .text.LED_Off       elec422.o
    0x0000240c   0x0000240c   0x00000040   Code   RO           75    .text.LED_On        elec422.o
    0x0000244c   0x0000244c   0x0000006e   Code   RO           22    .text.LEDs_switcher  main.o
    0x000024ba   0x000024ba   0x00000040   Code   RO          892    .text.MessageQueueGet  RTX_V7MF.lib(rtx_msgqueue.o)
    0x000024fa   0x000024fa   0x00000058   Code   RO          888    .text.MessageQueuePut  RTX_V7MF.lib(rtx_msgqueue.o)
    0x00002552   0x00002552   0x0000001c   Code   RO          886    .text.MessageQueueRemove  RTX_V7MF.lib(rtx_msgqueue.o)
    0x0000256e   0x0000256e   0x00000002   PAD
    0x00002570   0x00002570   0x0000000c   Code   RO          144    .text.OS_Tick_AcknowledgeIRQ  os_systick.o
    0x0000257c   0x0000257c   0x00000032   Code   RO          140    .text.OS_Tick_Enable  os_systick.o
    0x000025ae   0x000025ae   0x00000002   PAD
    0x000025b0   0x000025b0   0x00000006   Code   RO          146    .text.OS_Tick_GetIRQn  os_systick.o
    0x000025b6   0x000025b6   0x00000002   PAD
    0x000025b8   0x000025b8   0x00000048   Code   RO          138    .text.OS_Tick_Setup  os_systick.o
    0x00002600   0x00002600   0x0000000c   Code   RO          784    .text.OUTLINED_FUNCTION_0  RTX_V7MF.lib(rtx_kernel.o)
    0x0000260c   0x0000260c   0x0000000c   Code   RO          900    .text.OUTLINED_FUNCTION_0  RTX_V7MF.lib(rtx_msgqueue.o)
    0x00002618   0x00002618   0x00000010   Code   RO         1114    .text.OUTLINED_FUNCTION_0  RTX_V7MF.lib(rtx_thread.o)
    0x00002628   0x00002628   0x00000006   Code   RO          786    .text.OUTLINED_FUNCTION_1  RTX_V7MF.lib(rtx_kernel.o)
    0x0000262e   0x0000262e   0x00000006   Code   RO          902    .text.OUTLINED_FUNCTION_1  RTX_V7MF.lib(rtx_msgqueue.o)
    0x00002634   0x00002634   0x00000006   Code   RO         1118    .text.OUTLINED_FUNCTION_2  RTX_V7MF.lib(rtx_thread.o)
    0x0000263a   0x0000263a   0x00000014   Code   RO         1122    .text.OUTLINED_FUNCTION_4  RTX_V7MF.lib(rtx_thread.o)
    0x0000264e   0x0000264e   0x00000008   Code   RO         1126    .text.OUTLINED_FUNCTION_6  RTX_V7MF.lib(rtx_thread.o)
    0x00002656   0x00002656   0x00000002   PAD
    0x00002658   0x00002658   0x00000030   Code   RO           16    .text.PORTA_IRQHandler  main.o
    0x00002688   0x00002688   0x00000030   Code   RO           14    .text.PORTC_IRQHandler  main.o
    0x000026b8   0x000026b8   0x00000086   Code   RO           18    .text.SW2_status    main.o
    0x0000273e   0x0000273e   0x00000002   PAD
    0x00002740   0x00002740   0x00000086   Code   RO           20    .text.SW3_status    main.o
    0x000027c6   0x000027c6   0x00000002   PAD
    0x000027c8   0x000027c8   0x00000168   Code   RO          661    .text.SystemCoreClockUpdate  system_mk64f12.o
    0x00002930   0x00002930   0x00000030   Code   RO          657    .text.SystemInit    system_mk64f12.o
    0x00002960   0x00002960   0x00000002   Code   RO          659    .text.SystemInitHook  system_mk64f12.o
    0x00002962   0x00002962   0x00000064   Code   RO         1066    .text.ThreadFlagsCheck  RTX_V7MF.lib(rtx_thread.o)
    0x000029c6   0x000029c6   0x00000002   PAD
    0x000029c8   0x000029c8   0x00000044   Code   RO         1156    .text.TimerInsert   RTX_V7MF.lib(rtx_timer.o)
    0x00002a0c   0x00002a0c   0x00000028   Code   RO         1162    .text.TimerRemove   RTX_V7MF.lib(rtx_timer.o)
    0x00002a34   0x00002a34   0x0000002a   Code   RO          620    .text.UART0_RX_TX_DriverIRQHandler  fsl_uart.o
    0x00002a5e   0x00002a5e   0x00000002   PAD
    0x00002a60   0x00002a60   0x0000002a   Code   RO          624    .text.UART1_RX_TX_DriverIRQHandler  fsl_uart.o
    0x00002a8a   0x00002a8a   0x00000002   PAD
    0x00002a8c   0x00002a8c   0x0000002a   Code   RO          628    .text.UART2_RX_TX_DriverIRQHandler  fsl_uart.o
    0x00002ab6   0x00002ab6   0x00000002   PAD
    0x00002ab8   0x00002ab8   0x0000002a   Code   RO          632    .text.UART3_RX_TX_DriverIRQHandler  fsl_uart.o
    0x00002ae2   0x00002ae2   0x00000002   PAD
    0x00002ae4   0x00002ae4   0x0000002a   Code   RO          636    .text.UART4_RX_TX_DriverIRQHandler  fsl_uart.o
    0x00002b0e   0x00002b0e   0x00000002   PAD
    0x00002b10   0x00002b10   0x0000002a   Code   RO          640    .text.UART5_RX_TX_DriverIRQHandler  fsl_uart.o
    0x00002b3a   0x00002b3a   0x00000002   PAD
    0x00002b3c   0x00002b3c   0x0000003e   Code   RO          570    .text.UART_GetDefaultConfig  fsl_uart.o
    0x00002b7a   0x00002b7a   0x00000002   PAD
    0x00002b7c   0x00002b7c   0x00000210   Code   RO          566    .text.UART_Init     fsl_uart.o
    0x00002d8c   0x00002d8c   0x00000140   Code   RO          590    .text.UART_ReadBlocking  fsl_uart.o
    0x00002ecc   0x00002ecc   0x00000022   Code   RO          588    .text.UART_WriteBlocking  fsl_uart.o
    0x00002eee   0x00002eee   0x00000002   PAD
    0x00002ef0   0x00002ef0   0x0000003c   Code   RO          672    .text.__aeabi_assert  fsl_assert.o
    0x00002f2c   0x00002f2c   0x00000132   Code   RO           30    .text.app_main      main.o
    0x0000305e   0x0000305e   0x00000002   PAD
    0x00003060   0x00003060   0x0000003c   Code   RO           12    .text.consumer_thread  main.o
    0x0000309c   0x0000309c   0x00000134   Code   RO           71    .text.elec422_startup  elec422.o
    0x000031d0   0x000031d0   0x00000044   Code   RO           32    .text.main          main.o
    0x00003214   0x00003214   0x0000002c   Code   RO          728    .text.osKernelGetState  RTX_V7MF.lib(rtx_kernel.o)
    0x00003240   0x00003240   0x00000028   Code   RO          752    .text.osKernelGetTickCount  RTX_V7MF.lib(rtx_kernel.o)
    0x00003268   0x00003268   0x0000002c   Code   RO          722    .text.osKernelInitialize  RTX_V7MF.lib(rtx_kernel.o)
    0x00003294   0x00003294   0x00000024   Code   RO          732    .text.osKernelStart  RTX_V7MF.lib(rtx_kernel.o)
    0x000032b8   0x000032b8   0x00000068   Code   RO          810    .text.osMemoryPoolAlloc  RTX_V7MF.lib(rtx_mempool.o)
    0x00003320   0x00003320   0x00000048   Code   RO          812    .text.osMemoryPoolFree  RTX_V7MF.lib(rtx_mempool.o)
    0x00003368   0x00003368   0x00000024   Code   RO          804    .text.osMemoryPoolNew  RTX_V7MF.lib(rtx_mempool.o)
    0x0000338c   0x0000338c   0x00000070   Code   RO          862    .text.osMessageQueueGet  RTX_V7MF.lib(rtx_msgqueue.o)
    0x000033fc   0x000033fc   0x00000024   Code   RO          854    .text.osMessageQueueNew  RTX_V7MF.lib(rtx_msgqueue.o)
    0x00003420   0x00003420   0x00000080   Code   RO          860    .text.osMessageQueuePut  RTX_V7MF.lib(rtx_msgqueue.o)
    0x000034a0   0x000034a0   0x00000024   Code   RO          922    .text.osMutexAcquire  RTX_V7MF.lib(rtx_mutex.o)
    0x000034c4   0x000034c4   0x00000024   Code   RO          916    .text.osMutexNew    RTX_V7MF.lib(rtx_mutex.o)
    0x000034e8   0x000034e8   0x00000024   Code   RO          924    .text.osMutexRelease  RTX_V7MF.lib(rtx_mutex.o)
    0x0000350c   0x0000350c   0x00000002   Code   RO          167    .text.osRtxErrorNotify  rtx_config.o
    0x0000350e   0x0000350e   0x00000002   PAD
    0x00003510   0x00003510   0x00000002   Code   RO          165    .text.osRtxIdleThread  rtx_config.o
    0x00003512   0x00003512   0x00000002   Code   RO          718    .text.osRtxKernelBeforeInit  RTX_V7MF.lib(rtx_kernel.o)
    0x00003514   0x00003514   0x00000004   Code   RO          720    .text.osRtxKernelErrorNotify  RTX_V7MF.lib(rtx_kernel.o)
    0x00003518   0x00003518   0x0000006e   Code   RO         1180    .text.osRtxMemoryAlloc  RTX_V7MF.lib(rtx_memory.o)
    0x00003586   0x00003586   0x00000042   Code   RO         1182    .text.osRtxMemoryFree  RTX_V7MF.lib(rtx_memory.o)
    0x000035c8   0x000035c8   0x00000036   Code   RO         1178    .text.osRtxMemoryInit  RTX_V7MF.lib(rtx_memory.o)
    0x000035fe   0x000035fe   0x0000003a   Code   RO          800    .text.osRtxMemoryPoolAlloc  RTX_V7MF.lib(rtx_mempool.o)
    0x00003638   0x00003638   0x0000004a   Code   RO          802    .text.osRtxMemoryPoolFree  RTX_V7MF.lib(rtx_mempool.o)
    0x00003682   0x00003682   0x00000038   Code   RO          798    .text.osRtxMemoryPoolInit  RTX_V7MF.lib(rtx_mempool.o)
    0x000036ba   0x000036ba   0x00000048   Code   RO          834    .text.osRtxMemoryPoolPostProcess  RTX_V7MF.lib(rtx_mempool.o)
    0x00003702   0x00003702   0x000000aa   Code   RO          884    .text.osRtxMessageQueuePostProcess  RTX_V7MF.lib(rtx_msgqueue.o)
    0x000037ac   0x000037ac   0x00000024   Code   RO          850    .text.osRtxMessageQueueTimerSetup  RTX_V7MF.lib(rtx_msgqueue.o)
    0x000037d0   0x000037d0   0x00000048   Code   RO          912    .text.osRtxMutexOwnerRelease  RTX_V7MF.lib(rtx_mutex.o)
    0x00003818   0x00003818   0x0000004a   Code   RO          914    .text.osRtxMutexOwnerRestore  RTX_V7MF.lib(rtx_mutex.o)
    0x00003862   0x00003862   0x00000002   PAD
    0x00003864   0x00003864   0x000000a4   Code   RO         1194    .text.osRtxPendSV_Handler  RTX_V7MF.lib(rtx_system.o)
    0x00003908   0x00003908   0x00000070   Code   RO         1196    .text.osRtxPostProcess  RTX_V7MF.lib(rtx_system.o)
    0x00003978   0x00003978   0x00000002   Code   RO          982    .text.osRtxThreadBeforeFree  RTX_V7MF.lib(rtx_thread.o)
    0x0000397a   0x0000397a   0x00000002   PAD
    0x0000397c   0x0000397c   0x00000034   Code   RO          968    .text.osRtxThreadBlock  RTX_V7MF.lib(rtx_thread.o)
    0x000039b0   0x000039b0   0x0000007c   Code   RO          974    .text.osRtxThreadDelayInsert  RTX_V7MF.lib(rtx_thread.o)
    0x00003a2c   0x00003a2c   0x0000003c   Code   RO          958    .text.osRtxThreadDelayRemove  RTX_V7MF.lib(rtx_thread.o)
    0x00003a68   0x00003a68   0x0000004c   Code   RO          960    .text.osRtxThreadDelayTick  RTX_V7MF.lib(rtx_thread.o)
    0x00003ab4   0x00003ab4   0x00000020   Code   RO          978    .text.osRtxThreadDestroy  RTX_V7MF.lib(rtx_thread.o)
    0x00003ad4   0x00003ad4   0x00000054   Code   RO          966    .text.osRtxThreadDispatch  RTX_V7MF.lib(rtx_thread.o)
    0x00003b28   0x00003b28   0x00000058   Code   RO          980    .text.osRtxThreadFree  RTX_V7MF.lib(rtx_thread.o)
    0x00003b80   0x00003b80   0x0000001e   Code   RO          976    .text.osRtxThreadJoinWakeup  RTX_V7MF.lib(rtx_thread.o)
    0x00003b9e   0x00003b9e   0x00000012   Code   RO          950    .text.osRtxThreadListGet  RTX_V7MF.lib(rtx_thread.o)
    0x00003bb0   0x00003bb0   0x0000002c   Code   RO          948    .text.osRtxThreadListPut  RTX_V7MF.lib(rtx_thread.o)
    0x00003bdc   0x00003bdc   0x00000014   Code   RO          954    .text.osRtxThreadListRemove  RTX_V7MF.lib(rtx_thread.o)
    0x00003bf0   0x00003bf0   0x00000026   Code   RO          952    .text.osRtxThreadListSort  RTX_V7MF.lib(rtx_thread.o)
    0x00003c16   0x00003c16   0x00000028   Code   RO         1064    .text.osRtxThreadPostProcess  RTX_V7MF.lib(rtx_thread.o)
    0x00003c3e   0x00003c3e   0x00000002   PAD
    0x00003c40   0x00003c40   0x00000010   Code   RO          956    .text.osRtxThreadReadyPut  RTX_V7MF.lib(rtx_thread.o)
    0x00003c50   0x00003c50   0x00000014   Code   RO          962    .text.osRtxThreadRegPtr  RTX_V7MF.lib(rtx_thread.o)
    0x00003c64   0x00003c64   0x00000038   Code   RO          984    .text.osRtxThreadStartup  RTX_V7MF.lib(rtx_thread.o)
    0x00003c9c   0x00003c9c   0x00000020   Code   RO          964    .text.osRtxThreadSwitch  RTX_V7MF.lib(rtx_thread.o)
    0x00003cbc   0x00003cbc   0x0000003c   Code   RO          972    .text.osRtxThreadWaitEnter  RTX_V7MF.lib(rtx_thread.o)
    0x00003cf8   0x00003cf8   0x00000032   Code   RO          970    .text.osRtxThreadWaitExit  RTX_V7MF.lib(rtx_thread.o)
    0x00003d2a   0x00003d2a   0x00000002   PAD
    0x00003d2c   0x00003d2c   0x00000074   Code   RO         1192    .text.osRtxTick_Handler  RTX_V7MF.lib(rtx_system.o)
    0x00003da0   0x00003da0   0x00000020   Code   RO         1136    .text.osRtxTimerSetup  RTX_V7MF.lib(rtx_timer.o)
    0x00003dc0   0x00003dc0   0x00000020   Code   RO         1140    .text.osRtxTimerThread  RTX_V7MF.lib(rtx_timer.o)
    0x00003de0   0x00003de0   0x00000070   Code   RO         1138    .text.osRtxTimerTick  RTX_V7MF.lib(rtx_timer.o)
    0x00003e50   0x00003e50   0x00000006   Code   RO         1062    .text.osThreadEntry  RTX_V7MF.lib(rtx_thread.o)
    0x00003e56   0x00003e56   0x00000002   PAD
    0x00003e58   0x00003e58   0x0000000c   Code   RO         1028    .text.osThreadExit  RTX_V7MF.lib(rtx_thread.o)
    0x00003e64   0x00003e64   0x0000005c   Code   RO         1054    .text.osThreadFlagsSet  RTX_V7MF.lib(rtx_thread.o)
    0x00003ec0   0x00003ec0   0x0000002c   Code   RO         1060    .text.osThreadFlagsWait  RTX_V7MF.lib(rtx_thread.o)
    0x00003eec   0x00003eec   0x00000024   Code   RO         1004    .text.osThreadGetId  RTX_V7MF.lib(rtx_thread.o)
    0x00003f10   0x00003f10   0x0000002c   Code   RO          988    .text.osThreadNew   RTX_V7MF.lib(rtx_thread.o)
    0x00003f3c   0x00003f3c   0x00000024   Code   RO         1030    .text.osThreadTerminate  RTX_V7MF.lib(rtx_thread.o)
    0x00003f60   0x00003f60   0x00000024   Code   RO         1142    .text.osTimerNew    RTX_V7MF.lib(rtx_timer.o)
    0x00003f84   0x00003f84   0x00000024   Code   RO         1148    .text.osTimerStart  RTX_V7MF.lib(rtx_timer.o)
    0x00003fa8   0x00003fa8   0x00000024   Code   RO         1150    .text.osTimerStop   RTX_V7MF.lib(rtx_timer.o)
    0x00003fcc   0x00003fcc   0x00000100   Code   RO           10    .text.producer_thread  main.o
    0x000040cc   0x000040cc   0x00000136   Code   RO            8    .text.readnumber    main.o
    0x00004202   0x00004202   0x00000002   PAD
    0x00004204   0x00004204   0x00000008   Code   RO          730    .text.svcRtxKernelGetState  RTX_V7MF.lib(rtx_kernel.o)
    0x0000420c   0x0000420c   0x0000000c   Code   RO          754    .text.svcRtxKernelGetTickCount  RTX_V7MF.lib(rtx_kernel.o)
    0x00004218   0x00004218   0x00000104   Code   RO          768    .text.svcRtxKernelInitialize  RTX_V7MF.lib(rtx_kernel.o)
    0x0000431c   0x0000431c   0x00000074   Code   RO          770    .text.svcRtxKernelStart  RTX_V7MF.lib(rtx_kernel.o)
    0x00004390   0x00004390   0x00000058   Code   RO          836    .text.svcRtxMemoryPoolAlloc  RTX_V7MF.lib(rtx_mempool.o)
    0x000043e8   0x000043e8   0x00000064   Code   RO          838    .text.svcRtxMemoryPoolFree  RTX_V7MF.lib(rtx_mempool.o)
    0x0000444c   0x0000444c   0x0000013c   Code   RO          832    .text.svcRtxMemoryPoolNew  RTX_V7MF.lib(rtx_mempool.o)
    0x00004588   0x00004588   0x000000cc   Code   RO          894    .text.svcRtxMessageQueueGet  RTX_V7MF.lib(rtx_msgqueue.o)
    0x00004654   0x00004654   0x00000120   Code   RO          852    .text.svcRtxMessageQueueNew  RTX_V7MF.lib(rtx_msgqueue.o)
    0x00004774   0x00004774   0x000000ac   Code   RO          890    .text.svcRtxMessageQueuePut  RTX_V7MF.lib(rtx_msgqueue.o)
    0x00004820   0x00004820   0x0000008c   Code   RO          932    .text.svcRtxMutexAcquire  RTX_V7MF.lib(rtx_mutex.o)
    0x000048ac   0x000048ac   0x00000068   Code   RO          930    .text.svcRtxMutexNew  RTX_V7MF.lib(rtx_mutex.o)
    0x00004914   0x00004914   0x000000b0   Code   RO          934    .text.svcRtxMutexRelease  RTX_V7MF.lib(rtx_mutex.o)
    0x000049c4   0x000049c4   0x0000004c   Code   RO         1090    .text.svcRtxThreadExit  RTX_V7MF.lib(rtx_thread.o)
    0x00004a10   0x00004a10   0x00000066   Code   RO         1106    .text.svcRtxThreadFlagsSet  RTX_V7MF.lib(rtx_thread.o)
    0x00004a76   0x00004a76   0x00000002   PAD
    0x00004a78   0x00004a78   0x00000048   Code   RO         1112    .text.svcRtxThreadFlagsWait  RTX_V7MF.lib(rtx_thread.o)
    0x00004ac0   0x00004ac0   0x0000000c   Code   RO         1006    .text.svcRtxThreadGetId  RTX_V7MF.lib(rtx_thread.o)
    0x00004acc   0x00004acc   0x000001fc   Code   RO          986    .text.svcRtxThreadNew  RTX_V7MF.lib(rtx_thread.o)
    0x00004cc8   0x00004cc8   0x00000088   Code   RO         1092    .text.svcRtxThreadTerminate  RTX_V7MF.lib(rtx_thread.o)
    0x00004d50   0x00004d50   0x00000078   Code   RO         1158    .text.svcRtxTimerNew  RTX_V7MF.lib(rtx_timer.o)
    0x00004dc8   0x00004dc8   0x00000048   Code   RO         1160    .text.svcRtxTimerStart  RTX_V7MF.lib(rtx_timer.o)
    0x00004e10   0x00004e10   0x00000028   Code   RO         1164    .text.svcRtxTimerStop  RTX_V7MF.lib(rtx_timer.o)
    0x00004e38   0x00004e38   0x00000028   Code   RO         1474    i.__0sprintf        mc_w.l(printfa.o)
    0x00004e60   0x00004e60   0x00000030   Code   RO         1574    i.__ARM_fpclassify  m_wm.l(fpclassify.o)
    0x00004e90   0x00004e90   0x000000d0   Code   RO         1205    i.__hardfp_modf     m_wm.l(modf.o)
    0x00004f60   0x00004f60   0x00000c60   Code   RO         1211    i.__hardfp_pow      m_wm.l(pow.o)
    0x00005bc0   0x00005bc0   0x000000f8   Code   RO         1576    i.__kernel_poly     m_wm.l(poly.o)
    0x00005cb8   0x00005cb8   0x00000030   Code   RO         1554    i.__mathlib_dbl_divzero  m_wm.l(dunder.o)
    0x00005ce8   0x00005ce8   0x00000014   Code   RO         1556    i.__mathlib_dbl_infnan2  m_wm.l(dunder.o)
    0x00005cfc   0x00005cfc   0x00000004   PAD
    0x00005d00   0x00005d00   0x00000020   Code   RO         1557    i.__mathlib_dbl_invalid  m_wm.l(dunder.o)
    0x00005d20   0x00005d20   0x00000020   Code   RO         1558    i.__mathlib_dbl_overflow  m_wm.l(dunder.o)
    0x00005d40   0x00005d40   0x00000020   Code   RO         1560    i.__mathlib_dbl_underflow  m_wm.l(dunder.o)
    0x00005d60   0x00005d60   0x0000000e   Code   RO         1651    i.__scatterload_copy  mc_w.l(handlers.o)
    0x00005d6e   0x00005d6e   0x00000002   Code   RO         1652    i.__scatterload_null  mc_w.l(handlers.o)
    0x00005d70   0x00005d70   0x0000000e   Code   RO         1653    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x00005d7e   0x00005d7e   0x00000002   PAD
    0x00005d80   0x00005d80   0x0000000c   Code   RO         1625    i.__set_errno       mc_w.l(errno.o)
    0x00005d8c   0x00005d8c   0x00000184   Code   RO         1479    i._fp_digits        mc_w.l(printfa.o)
    0x00005f10   0x00005f10   0x000006dc   Code   RO         1480    i._printf_core      mc_w.l(printfa.o)
    0x000065ec   0x000065ec   0x00000024   Code   RO         1481    i._printf_post_padding  mc_w.l(printfa.o)
    0x00006610   0x00006610   0x0000002e   Code   RO         1482    i._printf_pre_padding  mc_w.l(printfa.o)
    0x0000663e   0x0000663e   0x0000000a   Code   RO         1484    i._sputc            mc_w.l(printfa.o)
    0x00006648   0x00006648   0x00000018   Code   RO         1570    i.fabs              m_wm.l(fabs.o)
    0x00006660   0x00006660   0x0000006e   Code   RO         1581    i.sqrt              m_wm.l(sqrt.o)
    0x000066ce   0x000066ce   0x00000002   PAD
    0x000066d0   0x000066d0   0x00000088   Data   RO         1214    .constdata          m_wm.l(pow.o)
    0x00006758   0x00006758   0x00000008   Data   RO         1578    .constdata          m_wm.l(qnan.o)
    0x00006760   0x00006760   0x00000070   Data   RO          124    .rodata             rtx_lib.o
    0x000067d0   0x000067d0   0x00000038   Data   RO          127    .rodata             rtx_lib.o
    0x00006808   0x00006808   0x00000080   Data   RO           41    .rodata..L__const.SW2_status.str1  main.o
    0x00006888   0x00006888   0x00000080   Data   RO           42    .rodata..L__const.SW2_status.str2  main.o
    0x00006908   0x00006908   0x00000080   Data   RO           43    .rodata..L__const.SW3_status.str1  main.o
    0x00006988   0x00006988   0x00000080   Data   RO           44    .rodata..L__const.SW3_status.str2  main.o
    0x00006a08   0x00006a08   0x00000010   Data   RO           55    .rodata.MutexAttr_ADCMutex  main.o
    0x00006a18   0x00006a18   0x00000024   Data   RO           56    .rodata.ThreadAttr_ADC1  main.o
    0x00006a3c   0x00006a3c   0x00000024   Data   RO           57    .rodata.ThreadAttr_ADC2  main.o
    0x00006a60   0x00006a60   0x00000024   Data   RO           54    .rodata.ThreadAttr_LEDswitcher  main.o
    0x00006a84   0x00006a84   0x00000024   Data   RO           52    .rodata.ThreadAttr_SW2_IR  main.o
    0x00006aa8   0x00006aa8   0x00000024   Data   RO           53    .rodata.ThreadAttr_SW3_IR  main.o
    0x00006acc   0x00006acc   0x00000024   Data   RO           51    .rodata.ThreadAttr_consumer  main.o
    0x00006af0   0x00006af0   0x00000024   Data   RO           59    .rodata.ThreadAttr_main  main.o
    0x00006b14   0x00006b14   0x00000024   Data   RO           50    .rodata.ThreadAttr_producer  main.o
    0x00006b38   0x00006b38   0x00000020   Data   RO          361    .rodata.cst16       fsl_clock.o
    0x00006b58   0x00006b58   0x00000010   Data   RO          648    .rodata.cst16       fsl_uart.o
    0x00006b68   0x00006b68   0x00000010   Data   RO          253    .rodata.cst8        fsl_adc16.o
    0x00006b78   0x00006b78   0x0000003c   Data   RO          112    .rodata.g_defaultClockConfigRun  clock_config.o
    0x00006bb4   0x00006bb4   0x00000018   Data   RO           49    .rodata.memorypoolAttr_memblock  main.o
    0x00006bcc   0x00006bcc   0x00000004   Data   RO          126    .rodata.osRtxUserSVC  rtx_lib.o
    0x00006bd0   0x00006bd0   0x00000024   Data   RO          121    .rodata.os_idle_thread_attr  rtx_lib.o
    0x00006bf4   0x00006bf4   0x00000018   Data   RO          123    .rodata.os_timer_mq_attr  rtx_lib.o
    0x00006c0c   0x00006c0c   0x00000024   Data   RO          122    .rodata.os_timer_thread_attr  rtx_lib.o
    0x00006c30   0x00006c30   0x00000018   Data   RO          221    .rodata.s_UartAdapterBase  fsl_adapter_uart.o
    0x00006c48   0x00006c48   0x00000014   Data   RO          519    .rodata.s_gpioBases  fsl_gpio.o
    0x00006c5c   0x00006c5c   0x00000014   Data   RO          518    .rodata.s_portBases  fsl_gpio.o
    0x00006c70   0x00006c70   0x00000018   Data   RO          644    .rodata.s_uartBases  fsl_uart.o
    0x00006c88   0x00006c88   0x00000018   Data   RO          646    .rodata.s_uartClock  fsl_uart.o
    0x00006ca0   0x00006ca0   0x00000050   Data   RO           61    .rodata.str1.1      main.o
    0x00006cf0   0x00006cf0   0x000000b8   Data   RO          220    .rodata.str1.1      fsl_adapter_uart.o
    0x00006da8   0x00006da8   0x000000a1   Data   RO          252    .rodata.str1.1      fsl_adc16.o
    0x00006e49   0x00006e49   0x00000076   Data   RO          359    .rodata.str1.1      fsl_clock.o
    0x00006ebf   0x00006ebf   0x00000073   Data   RO          517    .rodata.str1.1      fsl_gpio.o
    0x00006f32   0x00006f32   0x0000015e   Data   RO          645    .rodata.str1.1      fsl_uart.o
    0x00007090   0x00007090   0x0000000b   Data   RO          788    .rodata.str1.4      RTX_V7MF.lib(rtx_kernel.o)
    0x0000709b   0x0000709b   0x00000001   PAD
    0x0000709c   0x0000709c   0x00000010   Data   RO           47    .rodata.timerAttr_timerADC1  main.o
    0x000070ac   0x000070ac   0x00000020   Data   RO         1650    Region$$Table       anon$$obj.o


    Execution Region RW_m_data (Exec base: 0x1fff0000, Load base: 0x000070cc, Size: 0x00000000, Max: 0x00010000, ABSOLUTE)

    **** No section assigned to this execution region ****


    Execution Region RW_m_data_2 (Exec base: 0x20000000, Load base: 0x000070d0, Size: 0x00008680, Max: 0x0002f800, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x000070d0   0x00000004   Data   RW         1626    .data               mc_w.l(errno.o)
    0x20000004   0x000070d4   0x00000004   Data   RW          663    .data.SystemCoreClock  system_mk64f12.o
    0x20000008   0x000070d8   0x000000a4   Data   RW          789    .data.os            RTX_V7MF.lib(rtx_kernel.o)
    0x200000ac   0x0000717c   0x00000004   Data   RW          363    .data.s_fastIrcFreq  fsl_clock.o
    0x200000b0   0x00007180   0x00000004   Data   RW          362    .data.s_slowIrcFreq  fsl_clock.o
    0x200000b4   0x00007184   0x00000004   Data   RW          643    .data.s_uartIsr     fsl_uart.o
    0x200000b8        -       0x00000004   Zero   RW           45    .bss.ADC1_callback.tick  main.o
    0x200000bc        -       0x00000004   Zero   RW           46    .bss.ADCMutex       main.o
    0x200000c0        -       0x00000004   Zero   RW           48    .bss.T_ADC1_periodic  main.o
    0x200000c4        -       0x00000004   Zero   RW           38    .bss.T_ADC2         main.o
    0x200000c8        -       0x00000004   Zero   RW           37    .bss.T_LEDs         main.o
    0x200000cc        -       0x00000004   Zero   RW           39    .bss.T_SW2          main.o
    0x200000d0        -       0x00000004   Zero   RW           40    .bss.T_SW3          main.o
    0x200000d4        -       0x00000004   Zero   RW           58    .bss.app_mainid     main.o
    0x200000d8        -       0x00000004   Zero   RW          358    .bss.g_xtal0Freq    fsl_clock.o
    0x200000dc        -       0x00000004   Zero   RW          360    .bss.g_xtal32Freq   fsl_clock.o
    0x200000e0        -       0x00000004   Zero   RW           34    .bss.memblock       main.o
    0x200000e4        -       0x00000004   Zero   RW           35    .bss.msgqueue       main.o
    0x200000e8        -       0x00008040   Zero   RW          120    .bss.os             rtx_lib.o
    0x20008128        -       0x00000001   Zero   RW          156    .bss.os             os_systick.o
    0x20008129   0x00007188   0x00000003   PAD
    0x2000812c        -       0x00000034   Zero   RW          131    .bss.os.msgqueue.cb  rtx_lib.o
    0x20008160        -       0x00000050   Zero   RW          132    .bss.os.msgqueue.mem  rtx_lib.o
    0x200081b0        -       0x000000a0   Zero   RW          128    .bss.os.thread.cb   rtx_lib.o
    0x20008250        -       0x00000200   Zero   RW          129    .bss.os.thread.idle.stack  rtx_lib.o
    0x20008450        -       0x00000200   Zero   RW          130    .bss.os.thread.timer.stack  rtx_lib.o
    0x20008650        -       0x00000004   Zero   RW           36    .bss.queue_sampleperiod  main.o
    0x20008654        -       0x00000014   Zero   RW          695    .bss.s_debugConsole  fsl_debug_console.o
    0x20008668        -       0x00000018   Zero   RW          647    .bss.s_uartHandle   fsl_uart.o


    Execution Region ARM_LIB_HEAP (Exec base: 0x20008680, Load base: 0x00007188, Size: 0x00000400, Max: 0x00000400, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20008680        -       0x00000400   Zero   RW            1    ARM_LIB_HEAP.bss    anon$$obj.o


    Execution Region ARM_LIB_STACK (Exec base: 0x2002fc00, Load base: 0x00007188, Size: 0x00000400, Max: 0x00000400, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x2002fc00        -       0x00000400   Zero   RW            2    ARM_LIB_STACK.bss   anon$$obj.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

        24          0          0          0          0       1126   board.o
       100          0         60          0          0       4520   clock_config.o
       436         72          0          0          0       9537   elec422.o
       442          8        208          0          0       6454   fsl_adapter_uart.o
       570          0        177          0          0      10545   fsl_adc16.o
        60         44          0          0          0        929   fsl_assert.o
      1208         16        150          8          8      30787   fsl_clock.o
      1908        190          0          0         20      16846   fsl_debug_console.o
       146         16        155          0          0       3364   fsl_gpio.o
      1196         28        414          4         24      31373   fsl_uart.o
      2080        198        936          0         44      11238   main.o
       140          0          0          0          1       5006   os_systick.o
       126          0          0          0          0       4069   pin_mux.o
         4          0          0          0          0        760   rtx_config.o
         0          0        268          0      34148       5727   rtx_lib.o
       456        212       1040          0          0       2341   startup_mk64f12.o
       410          8          0          4          0       3676   system_mk64f12.o

    ----------------------------------------------------------------------
      9360        792       3440         16      36296     148298   Object Totals
         0          0         32          0       2048          0   (incl. Generated)
        54          0          0          0          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       196         12          0          0          0        712   irq_armv7m.o
       584         40         11        164          0      19332   rtx_kernel.o
       230          0          0          0          0       2808   rtx_memory.o
       976         20          0          0          0      16536   rtx_mempool.o
      1344         32          0          0          0      19223   rtx_msgqueue.o
       674         16          0          0          0      10977   rtx_mutex.o
       392         48          0          0          0       5563   rtx_system.o
      2290         84          0          0          0      38973   rtx_thread.o
       624         32          0          0          0      11024   rtx_timer.o
       164         44          0          0          0        620   dunder.o
        24          0          0          0          0        124   fabs.o
        48          0          0          0          0        124   fpclassify.o
       208          6          0          0          0        152   modf.o
       248          0          0          0          0        152   poly.o
      3168        296        136          0          0        352   pow.o
         0          0          8          0          0          0   qnan.o
       110          0          0          0          0        148   sqrt.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry4.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        12          6          0          4          0         68   errno.o
        30          0          0          0          0          0   handlers.o
        48         10          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        30          0          0          0          0         68   llshl.o
        36          0          0          0          0         68   llsshr.o
        32          0          0          0          0         68   llushr.o
        40          0          0          0          0         76   memcpy.o
        36          0          0          0          0        108   memseta.o
      2276         86          0          0          0        520   printfa.o
        18          0          0          0          0         68   strcpy.o
        14          0          0          0          0         68   strlen.o
        44          0          0          0          0         80   uidiv.o
        98          0          0          0          0         92   uldiv.o
        48          0          0          0          0         68   cdrcmple.o
        56          0          0          0          0         88   d2f.o
       334          0          0          0          0        148   dadd.o
        56          0          0          0          0         80   dcmpeq.o
        54          0          0          0          0         80   dcmpgt.o
        54          0          0          0          0         80   dcmplt.o
       222          0          0          0          0        100   ddiv.o
       186          0          0          0          0        176   depilogue.o
        62          0          0          0          0         80   dfixi.o
        74          0          0          0          0         80   dfixl.o
        48          0          0          0          0         68   dfixul.o
        34          0          0          0          0         76   dflti.o
        40          0          0          0          0         80   dfltl.o
        26          0          0          0          0         76   dfltui.o
       228          0          0          0          0         96   dmul.o
        46          0          0          0          0         80   dscalb.o
       162          0          0          0          0        100   dsqrt.o
        38          0          0          0          0         68   f2d.o
       110          0          0          0          0        168   fepilogue.o

    ----------------------------------------------------------------------
     15920        740        156        168          0     129964   Library Totals
        28          0          1          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      7310        284         11        164          0     125148   RTX_V7MF.lib
      3970        346        144          0          0       1672   m_wm.l
      2734        110          0          4          0       1352   mc_w.l
      1878          0          0          0          0       1792   mf_w.l

    ----------------------------------------------------------------------
     15920        740        156        168          0     129964   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     25280       1532       3596        184      36296     275310   Grand Totals
     25280       1532       3596        184      36296     275310   ELF Image Totals
     25280       1532       3596        184          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                28876 (  28.20kB)
    Total RW  Size (RW Data + ZI Data)             36480 (  35.62kB)
    Total ROM Size (Code + RO Data + RW Data)      29060 (  28.38kB)

==============================================================================

