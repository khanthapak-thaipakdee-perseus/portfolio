module counter(
	input wire clock,
	input wire reset,  // Active-low reset
	output tick
);

	parameter BAUD_RATE = 19200; //Baud rate = 19200 
	parameter CLOCK_FREQUENCY = 50000000; // Assuming a 50 MHz clock

  // Calculate the clock divisor
	localparam CLOCK_DIVISOR = CLOCK_FREQUENCY / BAUD_RATE;

  // Internal counter for baud rate generation
	reg [7:0] p_baud_counter,n_baud_counter;   //8 bits

	assign tick = (p_baud_counter >= (CLOCK_DIVISOR - 1)/2);
	
	always @(posedge clock) 
		begin
			if (~reset) 
				p_baud_counter <= 0;
			else 
				p_baud_counter <= n_baud_counter;
		end
		
	always @( p_baud_counter) 
		begin
			n_baud_counter = p_baud_counter;
			if (p_baud_counter == (CLOCK_DIVISOR - 1)) 
				n_baud_counter = 12'd0;
			else
				n_baud_counter = p_baud_counter + 12'd1;   
		end
endmodule

